//====================================================================//
//  V A R I A B L E S
//====================================================================//

const header = document.getElementById('header');
const wrapper = document.getElementById('wrapper');
const sidebar = document.getElementById('sidebar');

//Por defecto ancho de sidebar
const def_w = wrapper.offsetWidth * 0.3;//30%
sidebar.style.width = def_w +'px';

const sidebarInner = document.getElementById('sidebarInner');
const v_line = document.getElementById('v_line');
const container = document.getElementById('container');
const containerInner = document.getElementById('containerInner');
const headerContainer = document.getElementById('headerContainer');
const wrCols = document.getElementById('wrCols');
const div_trans1 = document.getElementById('trans1');
const footer = document.getElementById('footer');



const btn_pageUp = document.getElementById('btn_pageUp');
const btn_pageDown = document.getElementById('btn_pageDown');

const menuTabs = document.getElementById('menuTabs');
const nav_head = document.getElementById('nav_head');
const nav_body = document.getElementById('nav_body');

// Get the computed style, including margins
const computedStyle = window.getComputedStyle(sidebarInner);

const inpt_nav = document.getElementById('inpt_nav');

const s_book = document.getElementById('s_book');
const s_chapter = document.getElementById('s_chapter');
const s_verse = document.getElementById('s_verse');

const v_book = document.getElementById('v_book');
const v_chapter = document.getElementById('v_chapter');
const v_verse = document.getElementById('v_verse');

const wr_find_head = document.getElementById('wr_find_head');
const find_body = document.getElementById('find_body');

const gde = document.getElementById('gde');//select donde buscar
const limit = document.getElementById('limit');//cuantos resultados de búsqueda mostrar en una página
const cbox1 = document.getElementById('cbox1');//1. искомое содержит хотя бы одно слово ('Иисус Христос' или Иисус или Христос)
const cbox2 = document.getElementById('cbox2');//2. cлова идут в заданном порядке
const cbox3 = document.getElementById('cbox3');//3. искать точную фразу
const cbox4 = document.getElementById('cbox4');//4. выражения не могут быть частями слов
const cbox5 = document.getElementById('cbox5');//5. различать прописные и Заглавные буквы
const cbox6 = document.getElementById('cbox6');//6. различать буквы с ударениями (если есть)
const cbox7 = document.getElementById('cbox7');//7. Номер Стронга (если есть)

const tsk_head = document.getElementById('tsk_head');
const tsk_body = document.getElementById('tsk_body');

//botones
const btn_tsk = document.getElementById('btn_tsk');
const btn_hideShowSidebar = document.getElementById('btn_hideShowSidebar');
const btn_changePositionShowModal = document.getElementById('btn_changePositionShowModal');
const btn_ok = document.getElementById('btn_ok');

const wr_strong_head = document.getElementById('wr_strong_head');
const strong_body = document.getElementById('strong_body');

//Medidas de pantallas para Media Queries
const pantallaMobileMaxPx = 575;
const pantallaTabletMinPx = 768;

//const pantallaTabletMaxPx = 991;
//const pantallaDesktopSmallMinPx = 992;

const pantallaTabletMaxPx = 1023;
const pantallaDesktopSmallMinPx = 1024;

//const pantallaDesktopSmallMaxPx = 1999;
//const pantallaDesktopBigMinPx = 1200;

const btnStrong = document.getElementById('btnStrong');
const m_btnStrong = document.getElementById('m_btnStrong');//menu tres puntos en mobile

const obj_ep = {
    //ruso
    'rstStrongRed': 'N',
    //'rstStrong': 'N',
    'rstt': 'N',
    'rsti2': 'N',
    'rstm': 'N',
    'nrt': 'N',
    'rstStrong_rv60': 'N',
    'opnz': 'N',

    //ukr
    'ukr_fil': 'N',
    'ukr_ogi': 'N',
    'ukr_hom': 'Y',
    'ukr_gyz': 'N',
    'ukr_tur': 'N',
    'ukr_der': 'Y',

    //esp
    'rv60': 'Y',
    'lbla': 'Y',
    
    //eng
    'kjv': 'Y',
    'nkjv': 'Y',
}  

//constant para crear arrFavTransObj
const arrTrans = [
    "rstStrongRed",
    //"rstStrong", desconecto por ser inecesario
    "rstt",
    "rsti2",
    "rstm",
    "nrt",
    "rstStrong_rv60",
    "opnz",
    
    "ukr_fil",
    "ukr_ogi",
    "ukr_hom",
    "ukr_gyz",
    "ukr_tur",
    "ukr_der",
    
    "rv60",
    "lbla"

    //"kjv",
    //"nkjv",
];


const arrFavTransObj = makeTransObj_new(arrTrans);//dentro llamo loadDefaultFunctions() para mostrar texto de Gn 1:1 por defecto
// console.log('abajo arrFavTransObj:');
// console.log(arrFavTransObj);

const arrFavTskObj = makeTskObj();
//console.log('abajo arrFavTskObj:');
//console.log(arrFavTskObj);

//objeto de ficheros de todas las traducciones de Biblia cargados como text
const obj_bible_files = {};

//objeto de ficheros de Strong
const obj_strong_files = {};

//objeto de ficheros de Tsk
const obj_tsk_files = {};

let positionShow = 'col';//por defecto posicion de columnas
//mySizeVerse();

// window.obj_nav = {//antes
let obj_nav = {
    divtrans: '',
    trans: '',
    id_book: '',
    show_book: '',
    id_chapter: '',
    show_chapter: '',
    id_verse: '',
    show_verse: '',
    show_to_verse: ''
} 

let arrTabs = [];//array de objetos de tabs (Vkladki)

//array de objetos de historia de navegacion
let arr_hist_nav = [];//se añade en addRefToHistNav();

//array de objetos de historia de navegacion
//let arr_hist_find = [];//se añade en addWordsToHistFind();
let arr_hist_find = [
    {
        "trans": "rstStrongRed",
        "BibleShortName": "RST+r",
        "words": "Бог есть любовь",
        "params": {
            "gde_val": "TB",
            "limit_val": "50",
            "cbox1_checked": false,
            "cbox2_checked": false,
            "cbox3_checked": true,
            "cbox4_checked": false,
            "cbox5_checked": false,
            "cbox6_checked": false,
            "cbox7_checked": false
        },
        "fecha": "5/11/2023",
        "hora": "01:08:46"
    }
];

// en funcion showChaptertext4() hay 2 vias
//'by_text' (old): getting all file and making array with .split() and showing only needed verses,
//'by_json' (new): por php solo el capitulo
let modo_fetch_chapter = 'by_text';//by_json, by_text
console.log('modo_fetch_chapter: ',modo_fetch_chapter);

//'by_text' (old): getting all file and making array with .split() and showing only needed verses,
//'by_json' (new): por php solo el capitulo
let modo_fetch_tsk = 'by_json';//by_json, by_text
console.log('modo_fetch_tsk: ',modo_fetch_tsk);

//'by_text' (old): getting all file and showing only needed verses, 
//'by_json' (new): getting only verses to show by json (faster)
let modo_action_get_tsk_verses = 'by_json';//by_json, by_text
console.log('modo_action_get_tsk_verses: ',modo_action_get_tsk_verses);


//crear obj_tsk_files[tskName].Books[book] = {'fileName': tsk.Books[book].PathName, 'fileContent': tskModule}
//para sacar refs de links TSK sin cargarlos por fetch
let crear_objeto_obj_tsk_files = true;//true, false
console.log('crear_objeto_obj_tsk_files: ',crear_objeto_obj_tsk_files);

//crear obj_bible_files[Translation].Books[bookNumber] = {'fileName': bq.Books[bookNumber].PathName, 'fileContent': bookModule}
//para sacar textos de libros sin cargarlos por fetch
let crear_objeto_obj_bible_files = true;//true, false
console.log('crear_objeto_obj_bible_files: ',crear_objeto_obj_bible_files);


let trans_base = div_trans1.dataset.trans;//la trans base de #trans1


//===================================================================//
// FUNCIONES
//===================================================================//

async function obtenerDatosTrans(url_bq) {
    const respuesta = await fetch(url_bq);
    const datos = await respuesta.json();
    return datos;
}

function makeTransObj_new(arrTrans){
    //console.log('===function makeTransObj_new(arrTrans)===');

    let arrTransObj = [];

    //paso 1. Creo array de Dato de todos Trans
    for (let i = 0; i < arrTrans.length; i++) {
        const el = arrTrans[i];
        //console.log(i);
        //console.log(el);

        //saco ajustes de este modulo en json
        url_bq = `modules/text/${el}/bibleqt.json`;
        //console.log(url_bq);

        obtenerDatosTrans(url_bq)
        .then((bq) => {
            arrTransObj[i] = bq;
            //console.log(arrTransObj);
            //cuando es el ultimo elemento lanzo showTrans(0,1)
            if(i == arrTrans.length - 1){
                //console.log('es ultimo elemento. llamo showTrans(0,1)');
                loadDefaultFunctions();
            }
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            console.log('makeTransObj_new. error promesa: '+error);
        });        
    }
    //console.log('1. abajo arrTransObj:');
    //console.log(arrTransObj);

    return arrTransObj;
}

function loadRefDefault(ref, trans = null) {
    if (trans == null) trans = arrTrans[0];
    addTab(ref, trans, 'act', null, );
    getRefOfTab('tab1', ref, trans);
}


function loadDefaultFunctions() {
    //console.log('function loadDefaultFunctions()');
    //console.log(' --- empiezo a llamar funcciones por defecto ---');    

    //cargo book 0 (Genesis) chapter (1) en el primer div
    //showTrans(39, 5);

    //simulo click  al 'kniga' por defecto
    //sel(document.querySelector('.bcv_active'),'b');//por defecto
    
    //loadRefDefault('Jn. 3:16','rstStrongRed');//first tab
    loadRefDefault('Быт. ', 'rstStrongRed');//first tab
    
    getActTrans();    

    // addTab('Быт. 1:1', 'act', null,'rstStrongRed');
    //addTab('Быт. 1:1', 'rstStrongRed');
    addTab('Mat. 5:3', 'rstStrongRed');

    addTab('Ex. 2:2', 'rstStrongRed,rv60');

    addTab('Числ. 13:1', 'rstStrongRed,rv60');
    addTab('Числ. 12:1', 'rv60,rstStrongRed');

    addTab('Lev. 3:3', 'rstStrongRed,rv60,ukr_ogi');
    addTab('Прит. 4:23', 'rstStrongRed,ukr_ogi,rv60,lbla');
    addTab('Матф. 5:8', 'rstStrongRed,ukr_ogi,ukr_hom,rv60,lbla');
    addTab('Рим. 6:10', 'rstStrongRed, rv60 ,lbla, ukr_gyz, ukr_fil, ukr_tur');
    addTab('Лук. 7:16', 'ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur, rstStrongRed, rv60 ');
    addTab('Is. 8:9', 'rstStrongRed, nrt, rv60, lbla, ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur');
    addTab('Psa. 118:1', 'rstStrongRed, nrt, rv60, lbla, ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur');

/*
    addTab('Быт. 1:1', null, null,'rstStrongRed');
    addTab('Mat. 5:3', null, null,'rstStrongRed');

    addTab('Ex. 2:2', null, null,'rstStrongRed,rv60');

    addTab('Числ. 13:1', null, null,'rstStrongRed,rv60');
    addTab('Числ. 12:1', null, null,'rv60,rstStrongRed');

    addTab('Lev. 3:3', null, null,'rstStrongRed,rv60,ukr_ogi');
    addTab('Прит. 4:23', null, null,'rstStrongRed,ukr_ogi,rv60,lbla');
    addTab('Матф. 5:8', null, null,'rstStrongRed,ukr_ogi,ukr_hom,rv60,lbla');
    addTab('Рим. 6:10', null, null, 'rstStrongRed, rv60 ,lbla, ukr_gyz, ukr_fil, ukr_tur');
    addTab('Лук. 7:16', null, null, 'ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur, rstStrongRed, rv60 ');
    addTab('Is. 8:9', null, null, 'rstStrongRed, nrt, rv60, lbla, ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur');
    addTab('Psa. 118:1', null, null, 'rstStrongRed, nrt, rv60, lbla, ukr_ogi, ukr_hom ,ukr_gyz, ukr_fil, ukr_tur');


*/


    addListenerModule();

    updateTransFromActiveCol();

    setTimeout(()=>{    
        pintRefOnScroll();
    },100);

    doPageDownOnScroll();

    document.onkeydown = checkKey;
}



/*
document.addEventListener("DOMContentLoaded", function(event) { 
    //do work
    //console.log('DOMContentLoaded');
    //addListenerToPA();//listen links p > a //no hace falta ya que todavía no hay p a

    //addTrans();
    //addTrans();
});
*/

//listen links p > a
function addListenerToPA(){
    setTimeout(()=>{
        //console.log('=== function addListenerToPA()');       
       document.querySelectorAll('.colsInner').forEach(event =>{ 
            event.removeEventListener("click", handlerListenColsInnerAClick);
            event.addEventListener('click', handlerListenColsInnerAClick);    
        });

    },100);  
}

let contador_llamada_tsk = 0;

const handlerListenColsInnerAClick = (e) => {
    //console.log(e);
    //console.log(e.target.parentElement);
    if(e.target.tagName == 'A'){
        contador_llamada_tsk++;
        //console.log(`--- contador_llamada_tsk: ${contador_llamada_tsk}`);
        getTsk(e);//ok new
    }
}

//listen links p > a en Tsk block
function addListenerToPATsk(){//no se llama en ninguna parte
    setTimeout(()=>{
        //console.log('=== function addListenerToPATsk()');
        let trans = document.querySelector('#tsk_head p').getAttribute('data-trans'); 
        Array.from(document.querySelectorAll('#vklad_tsk p a')).forEach(el=>{
            el.addEventListener('click',()=>{
                goToLink(trans, el.innerHTML);
            });
        });
    },1000);  
}


function obtenerTamanioObjeto(objeto) {
    const objetoEnJSON = JSON.stringify(objeto);
    const tamanioEnBytes = new TextEncoder().encode(objetoEnJSON).length;
    return tamanioEnBytes;
}

function mostrarTamanioObjeto(objeto){
    const tamanio = obtenerTamanioObjeto(objeto);
    //console.log(`El tamaño del objeto es: ${tamanio} bytes.`);
}


function showTooltip(el){
    //console.log(el);
    //console.log(el.getAttribute('data-tooltip'));
    if(el.children[0] != null){
        el.children[0].remove();
    }
    
    /* modo 1 - ok
    const this_ttt = document.createElement('span');
    this_ttt.className = 'tooltiptext';
    this_ttt.innerHTML = '<span class="trik"></span><span class="text">'+ el.getAttribute('data-tooltip') +'</span>';
    el.append(this_ttt);
    */
    
    //modo 2 - ok (mas entendible)
    let this_ttt_html = `<span class="tooltiptext">
                            <span class="trik"></span>
                            <span class="text">${el.getAttribute('data-tooltip')}</span>
                        </span>`;
    el.innerHTML += this_ttt_html;
    

    let elPosTop = el.getBoundingClientRect().top;
    let elPosLeft = el.getBoundingClientRect().left;
    let elH = el.offsetHeight;//altura de *
    let elW = el.offsetWidth;//anchura de *
    let ttH = el.children[0].offsetHeight;//altura de tooltip
    let ttW = el.children[0].offsetWidth;//anchura de tooltip

    //tooltip (cuerpo)
    el.children[0].style.position = 'fixed';
    el.children[0].style.top = elPosTop + elH + 'px';
    el.children[0].style.left = elPosLeft - ttW/2 + elW/2+ 'px';
    
    //trikutnyk
    el.children[0].children[0].style.position = 'fixed';
    el.children[0].children[0].style.top = elPosTop + elH - 5 + 'px';
    el.children[0].children[0].style.left = elPosLeft + 'px';

    if(elPosLeft < ttW/2){
        el.children[0].style.left = elPosLeft - elW/2 + 'px';
    }else{
        if(document.documentElement.offsetWidth - elPosLeft < ttW){
            el.children[0].style.left = document.documentElement.offsetWidth - ttW+ 'px';
        }else{
            el.children[0].style.left = elPosLeft - ttW/2 + elW/2+ 'px';
        }
    }
}

function hideTooltip(el){
    if(el.children[0] != null){
        el.children[0].remove();
    }
}


// Quitar height de los 'p'
//document.querySelectorAll('.colsInner p').forEach(el=>{  el.style.removeProperty('height');  })


function initScroll(){
    document.querySelectorAll('.colsInner').forEach( (el,i) => {
        el.onmouseover = function(){
            //console.log('over i: '+i);
            enableScroll(el,i);
        }
        el.ontouchmove = function(){//mobile
            //console.log('over i: '+i);
            enableScroll(el,i);
        }
    });    
}


function enableScroll(el,i){
    el.onscroll = () => {
        fnScrollCol(el,i);
    }
    el.ontouchmove = () => {
        fnScrollCol(el,i);
    }
    document.querySelectorAll('.colsInner').forEach( (elem,index) => {
        if(index != i){
            //elem.removeEventListener('scroll', fnScrollCol);//NO FUNCIONA
            elem.onscroll = function(){
                //console.log('lalala');
            };
        }
    });
}


function getArrSumLineH(){
    //console.log('getArrSumLineH()');

    window.arr2_sum_line_h = [];//window importante!
    window.arr1_line_h = [];//window importante!
    let colsInnerAll = document.querySelectorAll('.colsInner');

    colsInnerAll.forEach(function(el,index){

        colsInnerAll.forEach(e => {
            Array.from(e.children).forEach(e => {
                e.style.removeProperty('height');
            });
        });

        let colsInnerAll_ch = document.querySelectorAll('.colsInner')[index].children;
        let arr_sum_p_h2 = [];
        let arr_p_h2 = [];
        let sum_p_h = 0;

        Array.from(colsInnerAll_ch).forEach(function(el2, index2, arr2){
            sum_p_h += arr2[index2].offsetHeight;
            //console.log('sum_p_h: '+sum_p_h);

            let p_h2 = arr2[index2].offsetHeight;         
            arr_p_h2.push(p_h2);
            arr_sum_p_h2.push(sum_p_h);
        });
        arr2_sum_line_h.push(arr_sum_p_h2);
        arr1_line_h.push(arr_p_h2);

        //console.log('getArrSumLineH() --- abajo arr2_sum_line_h: ');
        //console.log(arr2_sum_line_h); 

        //console.log('getArrSumLineH() --- abajo arr1_line_h: ');
        //console.log(arr1_line_h);    
    });

    //nuevo array
    window.arr2_line_h = [];//window importante!

    colsInnerAll.forEach(e => {
        Array.from(e.children).forEach(e => {
            e.style.removeProperty('height');
        });
    });

    for(let p = 0; p < colsInnerAll[0].children.length; p++){
        //console.log(p);

        let max_h = 0;
        let arr2_line_h2 = [];
        
        for(let c = 0; c < colsInnerAll.length; c++){
            
            let act_h = (typeof arr_h[c][p] !== 'undefined') ? arr_h[c][p] : 0 ;            
            arr2_line_h2.push(act_h);
            //console.log('act_h: '+act_h);

            //document.querySelectorAll('.colsInner')[c].querySelectorAll('p')[p].style.height = max_h + 'px';
            if(typeof document.querySelectorAll('.colsInner')[c].children[p] !== 'undefined'){
                let este_cont = document.querySelectorAll('.colsInner')[c].children[p].innerHTML; 
                //console.log('colsInner['+c+'] children['+p+'] este_cont: '+este_cont);

                if(['span','b','i','strong'].includes(document.querySelectorAll('.colsInner')[c].children[p].localName) ){
                    document.querySelectorAll('.colsInner')[c].children[p].style.display = 'block';
                }
            }
        }
        arr2_line_h.push(arr2_line_h2);
        //console.log('abajo arr2_line_h');
        //console.log(arr2_line_h);        
        
        max_h = Math.max(...arr2_line_h2);
        //console.log('pongo max_h: '+max_h);
        
        //para cada versiculo 'p' de cada columpa 'ch' pongo la misma altura 'max_h' si es positionShow 'col'
        if(positionShow == 'col'){
            for(let ch = 0; ch < colsInnerAll.length; ch++){
                if(typeof document.querySelectorAll('.colsInner')[ch].children[p] !== 'undefined'){
                    document.querySelectorAll('.colsInner')[ch].children[p].style.height = max_h + 'px';
                }
            }
        }        
    }
}


function fnScrollCol(el,i){
    //console.log('===function fnScrollCol()===');
   
    //console.log('scrolling: '+ i);
    //console.log('abajo arr2_sum_line_h: ');
    //console.log(arr2_sum_line_h);

    let h = el.scrollTop;
    //let h = el.currentTarget.scrollTop;
    //console.log('*** i :'+i+' --- h:',h);

    //VERTICAL
    if(positionShow == 'col'){
        //console.log('positionShow == col');
        Array.from(document.querySelectorAll('.colsInner')).forEach( (elementCol, indexCol, arrCol) => {
            if(el.parentElement.id != arrCol[indexCol].parentElement.id){
                arrCol[indexCol].scrollTop = h;
                //console.log('otros --- arr['+i+'] h: '+h);
            }
        });
    }

    //HORIZONTAL
    if(positionShow == 'row'){  
        //console.log('positionShow == row');
            
        //iv -> index de versiculo.
        //arr2_sum_line_h[0] -> versiculos de la primera columna: col1
        for (let iv = 0; iv < arr2_sum_line_h[i].length; iv++) {
            let h_min, h_max;
    
            if(iv == 0){
                h_min = 0;
                h_max = arr2_sum_line_h[i][iv];
            }else{
                h_min =  arr2_sum_line_h[i][iv - 1];
                h_max =  arr2_sum_line_h[i][iv];
            }
    
            //saco el coeficient de scroll para aplicar para otras columnas. //0.75
            let h_rest = h_max - h;
            let coef_h = (arr2_line_h[iv][i] - h_rest) / arr2_line_h[iv][i] ;// verse2. (54 - 18) / 54 = 36/54 = 2/3 = 0.67;  
            //console.log('coef_h: '+coef_h);
    
            if(h >= h_min && h <= h_max){
                //console.log('iv (' +iv+'). scroll ('+h+') está entre h_min ('+h_min+') y h_max ('+h_max+') ');
                
                let colsInnerAll = document.querySelectorAll('.colsInner');
                //ic -> index de columna colsInner.
                //colsInnerAll.length -> numero de columnas: col1,col2,col3 = 3
                for (let ic = 0; ic < colsInnerAll.length; ic++) {
                    
                    if(true /*colsInnerAll[ic].parentElement.id != 'col1'*/){
                        let new_h;
                        let h_prew = (iv > 0) ? arr2_sum_line_h[ic][iv-1] : 0 ;
                        //console.log('h_prew: '+h_prew);
    
                        new_h = h_prew + arr2_line_h[iv][ic] * coef_h;//208 + (76 * 0.75) = 208 + 57 = 235
                        //console.log('new_h ('+new_h+') = '+h_prew+' + '+arr2_line_h[iv][ic]+' * '+coef_h);
                        //console.log('new_h: '+new_h);
    
                        colsInnerAll[ic].scrollTop = new_h;
                        //console.log('div ('+ colsInnerAll[ic].parentElement.id+ '). scroll: '+ colsInnerAll[ic].scrollTop);
                    }
                }
                            
            }else{
                //console.log('iv (' +iv+'). --- scroll ('+h+') no está entre h_min ('+h_min+') y h_max ('+h_max+'). no hago nada... ');
            }           
        }
    
    }//end HORIZONTAL

}//end fnScrollCol


function scrollToVerse(verseNumber, to_verseNumber = null, userBlock = 'start'/*antes center*/){
    //let arr = idVerse.split('/');
    //let verseNumber = arr[2];

    //padding-bottom to scroll the lastest verse
    /*
    document.querySelectorAll('.colsInner').forEach(el => {
        el.lastChild.style.marginBottom = document.querySelector('#wrCols').offsetHeight + 'px';
    });
    */
    
    document.querySelectorAll('.active').forEach(el => {
        el.classList.remove('active');
        el.classList.remove('active_first');
        el.classList.remove('active_middle');
        el.classList.remove('active_last');
    });
    document.querySelectorAll('.active_one').forEach(el => {
        el.classList.remove('active_one');
    });


    //styles of other verses
    if(to_verseNumber != null && to_verseNumber != ''){//hay otros verses
        if(parseInt(verseNumber) < parseInt(to_verseNumber)){
            for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                Array.from(document.querySelectorAll('[data-verse="' + i + '"]')).forEach(el => {
                    el.classList.add('active');
                    if (i == parseInt(verseNumber)) {
                        el.classList.add('active_first');
                    } else if (i == parseInt(to_verseNumber)) {
                        el.classList.add('active_last');
                    } else {
                        el.classList.add('active_middle');
                    }
                });
            }
        } 
    }else{
        //only one verse of each translation
        document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
            el.classList.add('active_one');
        });
    }

    //scroll to first verse
    setTimeout(()=>{
        document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
            el.scrollIntoView({
                //behavior: "smooth",
                block: userBlock,//start,center,end
                inline: "nearest"
            });
            document.documentElement.scrollTop = 0; 
        });
    },300);

}

function scrollToVerseView(verseView, userBlock = 'start'){   
    //scroll to verseView
    setTimeout(()=>{
        document.querySelectorAll('[data-verse="'+verseView+'"]').forEach(el=>{
            el.scrollIntoView({
                //behavior: "smooth",
                block: userBlock,//start,center,end
                inline: "nearest"
            });
            document.documentElement.scrollTop = 0; 
        });
    },300);
}

let isMouseDown = false;

//start - Desktop (mouse)
v_line.onmousedown = function() { isMouseDown = true  };
wrapper.onmousemove = function(e) { 
    if(isMouseDown) { 
        /* do drag things */ 
        sidebar.removeAttribute('class');
        sidebar.style.width = e.pageX - 3 + 'px';
    }
};
v_line.onmouseup = function() { 
    isMouseDown = false;
    mySizeWindow();
    mySizeVerse();
};
//end - Desktop


//start - Mobile (touch)
v_line.ontouchstart = function() { isMouseDown = true  };
wrapper.ontouchmove = function(e) { 
    if(isMouseDown) { 
        /* do drag things */ 
        sidebar.removeAttribute('class');
        sidebar.style.width = e.touches[0].pageX - 3 + 'px';
        console.log('wrapper.ontouchmove');
    }
};
v_line.ontouchend = function() { 
    isMouseDown = false;
    mySizeWindow();
    mySizeVerse();
};
//end - Mobile

function getShortBookName(){
    //code...
}


function addListenStrong(el){
    //alert(el.innerHTML);
    let lang;
    if(el.parentElement.id.split('__')[1] >= 39){//de Mateo 
        lang = 'Grk';
    }else{
        lang = 'Heb';
    }
    //console.log('lang: '+lang);

    //getStrongNumber(el.innerHTML, lang);//ANTES
    getStrongNumber(el.innerText);//new
}

//number dentro de <S>H3615</S>
function addListenStrongS(el){
    getStrongNumber(el.innerHTML);
}

function makeStrongNumbersActiveFind(){
    let strongAllActiveFind = document.querySelectorAll('#find_body .strongActive');
    setTimeout(()=>{
        strongAllActiveFind.forEach(el=>{
            el.addEventListener('click', ()=>{
                addListenStrong(el);
            });
        });
    },500);
}

function showHideStrongNumbers(){
    let strongAll = document.querySelectorAll('.strong, .colsInner p S');
    let strongAction = null;

    if(strongAll.length != 0){

        if(strongAll[0].classList.contains('show')){
            strongAction = 'hide';
            btnStrong.classList.remove('btn_active');
            m_btnStrong.classList.remove('btn_active');
        }else{
            strongAction = 'show';
            btnStrong.classList.add('btn_active');
            m_btnStrong.classList.add('btn_active');
        }

        strongAll.forEach(el=>{
            if(strongAction == 'hide'){
                el.classList.remove('show','strongActive');
            }else{
                el.classList.add('show','strongActive');
            }
        });

        let strongAllActive = document.querySelectorAll('.strongActive:not(#find_body .strongActive)');

        strongAllActive.forEach(el=>{
            if(strongAction == 'hide'){
                el.removeEventListener('click', addListenStrong);
            }else{
                el.addEventListener('click', ()=>{
                    addListenStrong(el);
                });
            }
        });

        mySizeVerse();
        mySizeWindow();

        let arr_verse_active = [];
        
        Array.from(document.querySelectorAll('.colsInner')[0].children).forEach(el=>{
            //console.log(el);
            if(el.classList.contains('active')){
                arr_verse_active.push(el.getAttribute('data-verse'));
            }
        });

        if(arr_verse_active.length>0){
            let verseNumber, to_verseNumber;
            if(arr_verse_active.length == 1){
                verseNumber = arr_verse_active[0];
                to_verseNumber = null;
            }else{
                verseNumber = arr_verse_active[0];
                to_verseNumber = arr_verse_active[arr_verse_active.length-1];
            }
            setTimeout(()=>{
                scrollToVerse(verseNumber, to_verseNumber);
            },200);
        }    
    }//fin
}

function getArrTransFromCols(){
    window.arr_trans = [];
    window.arr_divShow = [];

    document.querySelectorAll('.colsHead').forEach((el,i)=>{
        window.arr_trans.push(el.getAttribute('data-trans'));
        window.arr_divShow.push(el.parentElement.getAttribute('id'));
        //console.log('el trans: ' + el.getAttribute('data-trans') );
        //console.log('el divShow: ' + el.parentElement.getAttribute('id') );
    }); 
}


function makeArrTransFromCols(){
    window.arr_trans = [];
    window.arrDataDivShow = [];//array de los p de cada div de trans para hacer build luego
    window.obj_DataDivShow = {};//objeto de los p de cada div de trans para hacer build luego
    window.arr_divShow = [];

    clearColsEmpty();
    
    document.querySelectorAll('.colsHead').forEach((el,i)=>{
        window.arr_trans.push(el.getAttribute('data-trans'));
        window.arr_divShow.push(el.parentElement.getAttribute('id'));
        //console.log('el trans: ' + el.getAttribute('data-trans') );
        //console.log('el divShow: ' + el.parentElement.getAttribute('id') );
    });
    window.arr_trans = window.arr_trans.filter(el=>el);    
}

function clearColsEmpty(){
    document.querySelectorAll('.colsHead').forEach((el,i)=>{
        if(typeof el.dataset.trans == 'undefined'){
            el.parentElement.remove();
            mySizeWindow();
            mySizeVerse()
        }
    });    
}


function showTrans(book, chapter, verseNumber = null, to_verseNumber = null, verseView = null){   
    //console.log('===function showTrans()===');
    
    //creo array de trans desde los que hay en cols
    makeArrTransFromCols();

    //Cargo primero trans1 y luego cuando se termina de cargar en la func showChapterText3() llamo trans2. ya que en el forEach de arriba no se guarda la orden de llamada de funcion. se llama primero trans2 y luego trans1
    window.iter_i = 0;
    //old_showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);//antes
    showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);// solo file_read_to_json.php
    //console.log('iter_i: ' + iter_i + ' --- start en showTrans()');
}

function decode_html_2(str) {
    let txt = new DOMParser().parseFromString(str, "text/html");
    return txt.documentElement.textContent;
}

function decode_html_1(str) {
    let txt = document.createElement("textarea");
    txt.innerHTML = str;
    return txt.value;
}

function htmlEntities(str) {
    return String(str).replace(/&lt;/gi, '<').replace(/&gt;/gi, '>');// cambia '<' por '<' y '>' por '>'
}

function setBaseEnglishPsalms(){
    let Translation = div_trans1.dataset.trans;

    fetch(`modules/text/${Translation}/bibleqt.json`)
    .then((response) => response.json())
    .then((bq) => {
        div_trans1.dataset.trans = bq.EnglishPsalms;
    })
    .catch(error => { 
        // Código a realizar cuando se rechaza la promesa
        console.log('error promesa: '+error);
    });
}


function getTsk(e){
    console.log('===function getTsk(e)===');
    
    //console.log(e);
    var el = e.srcElement.parentElement;

    var arr_v = el.id.split('__');//rstStrong__0__1__1 => ['rstStrong',0,1,1] => [rstStrong, Gen, 1, 1]
    var Translation = arr_v[0];//rstStrong
    var book = arr_v[1];//id_book
    var chapter = arr_v[2];//chapter
    var verse = arr_v[3];//verse
    var to_verse = null;//to_verse por defecto
    if(arr_v[3].includes('-')){
        verse = arr_v.split('-')[0];
        to_verse = arr_v.split('-')[1];
    }

    let ref = el.querySelector('a').innerText;//Gn 1:1
    addRefToHistNav(Translation, ref, book, chapter, verse, to_verse);
    
    //console.log('Translation: '+Translation);
    //console.log('book: '+book);
    //console.log('chapter: '+chapter);
    //console.log('verse: '+verse);

    let verseEnglishPsalms = obj_ep[Translation];//devuelve 'Y' o 'N'

    //si clico Psa 118:63 ruso tiene que convertirse en Sal. 119:63 español
    //ya que tsk está en español(ingles);
    if(verseEnglishPsalms == 'N'){
        //Modifico sólo los links si es para traducción rusa, ya que TSK viene con EnglishPlsalms = Y
        let res = convertLinkFromRusToEsp(book, chapter, verse);
        
        //console.log('link el: '+el);
        //console.log('res: '+res);
        
        //asigno nuevo valor
        book = res[0];
        chapter = res[1];
        verse = res[2];

        //console.log('res --- book: '+book);//empezando de 0
        //console.log('res --- chapter: '+chapter);//empezando de 1
        //console.log('res --- verse: '+verse);//empezando de 1
    }

    var arr_tsk_p = [];
    let tskName = 'TSK';
    let objTsk = arrFavTskObj.find(v => v.Translation === tskName);
    //console.log('abajo objTsk: ');
    //console.log(objTsk);

    const tsk = objTsk;//para modo old - COMENTAR!
    //console.log('abajo tsk: ');
    //console.log(tsk);

    let objTrans = arrFavTransObj.find(v => v.Translation === Translation);

    //modo new
    if(typeof tsk != 'undefined'){//en este caso: true
        //console.log('tsk modo new. contador_llamada_tsk: '+contador_llamada_tsk);

        //si no existe objeto obj_tsk_files lo creo
        if(typeof obj_tsk_files[tskName] == 'undefined'){
            obj_tsk_files[tskName] = {};
            obj_tsk_files[tskName].Books = [];
        }

        //si existe objeto con tskName. Saco datos del objeto
        if(typeof obj_tsk_files[tskName] != 'undefined'){
            if(typeof obj_tsk_files[tskName].Books != 'undefined'){
                if(typeof obj_tsk_files[tskName].Books[book] != 'undefined'){

                    if(obj_tsk_files[tskName].Books[book].fileName == tsk.Books[book].PathName && obj_tsk_files[tskName].Books[book].fileContent != ''){
                        //console.log(`--- --- starting from myPromise --- : tskName: ${tskName} `);

                        let myPromise_tsk = new Promise(function(resolve, reject){
                            resolve('ok');
                        });

                        myPromise_tsk
                        .then((data) => {//data = ok
                            
                            if(data == 'ok'){
                                var tskModule = obj_tsk_files[tskName].Books[book].fileContent;
                            }
                            //console.log('abajo tskModule: ');
                            //console.log(tskModule);
                            
                            tskModule = tskModule.replaceAll('\r','');//elimino '\r' que da error en 16_nehemiah.ini
    
                            var tb = tskModule.split('[');//divido en chapters
                            var tb_chapter = tb[chapter].split(']\n');//new //arr de un chapter indicado en el link divido en 2
                            var tb_chapterNumber = tb_chapter[0];//numero de chapter
                            var tb_chapter_vlinks = tb_chapter[1];//links del chapter
                            var tb_lines = tb_chapter_vlinks.split('\n');
                            var tb_verseNumber = tb_chapter_vlinks[0];
                            
                            var tb_arr_links = tb_lines[verse - 1].split('=')[1].split('; ');
                            if(tb_arr_links == null) alert('error tb_arr_links');
                            
                            //console.log('tb_chapterNumber: '+tb_chapterNumber);
                            //console.log('tb_verseNumber: '+tb_verseNumber);
                            //console.log('tb_arr_links: ');
                            //console.log(tb_arr_links);
                
                            tsk_head.innerHTML = '';//reset datos
                            tsk_body.innerHTML = '';//reset datos
                
                            //Siempre muestro el verse clickeado en tsk
                            const span_sm_trans = document.createElement('span');
                            span_sm_trans.id = 'sm_trans';
                            //span_sm_trans.innerHTML = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
                
                            const span_trans_tsk = document.createElement('span');
                            span_trans_tsk.className = 'trans_tsk';
                            span_trans_tsk.textContent = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
                            span_sm_trans.append(span_trans_tsk);                            
                
                            const p = document.createElement('p');
                            p.id = el.id;
                            p.className = 'tsk tsk_verse';
                            p.setAttribute('data-verse',el.getAttribute('data-verse'));
                            p.setAttribute('data-trans',Translation);
                            p.innerHTML = el.innerHTML;
                            //p.querySelector('a').setAttribute('onclick',`goToLink('${Translation}', '${this.innerHTML}')`);//funciona//antes
                            p.querySelector('a').addEventListener('click',()=>{
                                //console.log('click on tsk a');
                                goToLink(Translation, p.querySelector('a').innerHTML);
                            });
                
                            tsk_head.append(span_sm_trans);
                            tsk_head.append(p);
                            tsk_head.scrollTop = 0;
                            
                            mySizeTsk();//altura de tsk_body despues de meter tsk_head
                            
                            //Muestro loader tres puntos (...)
                            const d_loader = document.createElement('div');
                            d_loader.className = 'loader';
                            d_loader.innerHTML = `<span class="loader__element"></span>
                                                  <span class="loader__element"></span>
                                                  <span class="loader__element"></span>`;
                            tsk_body.append(d_loader);
                
                            arr_tsk_p = [];//por si acaso
                
                            //Si hay links para el verse
                            if(tb_arr_links != ''){
                                //console.log('antes de forEach. tb_arr_links: ');
                                //console.log(tb_arr_links);                  
                
                                tb_arr_links.forEach((el,i)=>{
                                    //console.log(`tb_arr_links[${i}]: ${tb_arr_links[i]}`);
                                    let tb_iter = i;
                
                                    var bookShortName = el.split(' ')[0];//Mt de 'Mt 13:24-26'
                                    var chapterNumber = el.split(' ')[1].split(':')[0];//13 de 'Mt 13:24-26'
                                    var verseNumbers = el.split(' ')[1].split(':')[1];//13 de 'Mt 13:24-26'
                                    var verseNumber = null;
                                    var to_verseNumber = null;
                
                                    if(verseNumbers.includes('-')){
                                        verseNumber = verseNumbers.split('-')[0];
                                        to_verseNumber = verseNumbers.split('-')[1];
                                    }else{
                                        verseNumber = verseNumbers;
                                    }
                
                                    //console.log('bookShortName: '+bookShortName);//Mat. Gen.
                                    //console.log('chapterNumber: '+chapterNumber);//empezando de 1
                                    //console.log('verseNumber: '+verseNumber);//empezando de 1
                                    //console.log('to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                    //console.log('---');
                                
                                    let bq = objTrans;    
                                    //console.log(' abajo bq:');
                                    //console.log(bq);
            
                                    //Asigno global vars para que sean vistos en fetch interior
                                    window.dataBooksTsk = bq.Books;
            
                                    window.bq_StrongNumbers = bq.StrongNumbers;
                                    window.bq_EnglishPsalms = bq.EnglishPsalms;//PARA SABER SI MODIFICO chapterNumber y verseNumber
            
                                    window.bq_Notes = bq.Notes;
                                    window.bq_NoteSign = bq.NoteSign;
                                    window.bq_StartNoteSign = bq.StartNoteSign;
                                    window.bq_EndNoteSign = bq.EndNoteSign;
            
                                    window.bq_Titles = bq.Titles;
                                    window.bq_StartTitleSign = bq.StartTitleSign;
                                    window.bq_EndTitleSign = bq.EndTitleSign;
            
                                    window.bq_HTMLFilter = bq.HTMLFilter;
                                    
                                    //Достаю индех книги, зная его короткое значение.Напр.: 'Mt 13:24-26'
                                    for(let i = 0, bookNumber = null; i < dataBooksTsk.length; i++) {
                                        const element = dataBooksTsk[i];
            
                                        for(let y = 0; y < element.ShortNames.length; y++) {
                                            const elem = element.ShortNames[y];
            
                                            if(bookShortName.toLowerCase() == elem.toLowerCase()){
                                                var n_book = element.BookNumber;
                                                var short_name = elem;//siempre el primer nombre del array
                            
                                                bookNumber = i;//numero de book empezando de 0. 0 => Génesis
                                                //console.log('bookNumber: '+bookNumber);                        
                                                //console.log('--- encontrado n_book: ' +n_book + ' --- short_name: ' +short_name);
            
                                                //Al encontrar el identificador del libro, miro los links. 
                                                //14=Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12
                                                //vers 14 tiene los links: Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12
            
                                                if(bq_EnglishPsalms == 'N'){
                                                    //Modifico sólo los links si es para traducción rusa, ya que TSK viene con EnglishPlsalms = Y
                                                    var new_result = convertLinkFromEspToRus(bookNumber, chapterNumber, verseNumber, to_verseNumber);
                                                                                                
                                                    //asigno nuevo valor
                                                    bookNumber = new_result[0];
                                                    chapterNumber = new_result[1];
                                                    verseNumber = new_result[2];
                                                    to_verseNumber = new_result[3];
            
                                                    //console.log('ahora bookNumber: '+bookNumber);//empezando de 1
                                                    //console.log('ahora chapterNumber: '+chapterNumber);//empezando de 1
                                                    //console.log('ahora verseNumber: '+verseNumber);//empezando de 1
                                                    //console.log('ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                                }


                                                if( typeof obj_bible_files[Translation] != 'undefined' && 
                                                    typeof obj_bible_files[Translation].Books[bookNumber] != 'undefined' &&
                                                    obj_bible_files[Translation].Books[bookNumber].fileName == bq.Books[bookNumber].PathName && 
                                                    obj_bible_files[Translation].Books[bookNumber].fileContent != ''
                                                ){
                                                    //console.log(`--- hay fichero para sacar texto de la Biblia: ${bq.Books[bookNumber].PathName}  --- Translation: ${Translation} `);
                                                    //console.log('obj_bible_files');
                                                    //console.log(obj_bible_files);

                                                    let bookModule = obj_bible_files[Translation].Books[bookNumber].fileContent;
                                                    //console.log(' abajo bookModule:');//libro del modulo de la traducción de la Biblia// 01_Genesis.htm
                                                    //console.log(bookModule);
            
                                                    var nb = bookModule.split('<h4>');//делю файл на главы
                                                    //console.log(nb);
                                                    
                                                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                                    //console.log(nb);

                                                    let vsego_stijov = (chapterNumber <= bq.Books[bookNumber].ChapterQty) 
                                                        ? nb[chapterNumber].split('<p>').length - 1 
                                                        : nb[bq.Books[bookNumber].ChapterQty].split('<p>').length - 1 ;
                                                    //console.log(` `);
                                                    //console.log(` tb_iter: ${tb_iter}`);        
                                                    //console.log(`3. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);


                                                    //si el capitulo indicado existe en el modulo -> todo bien
                                                    if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                                        //console.log(`3. (IF) el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                                        //console.log(`3. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `); 
                                                        //console.log(`3. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

                
                                                        var VerseTextFull = '';

                                                        // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                                        if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                            let new_verseNumber = to_verseNumber;
                                                            let new_to_verseNumber = verseNumber;
                                                            verseNumber = new_verseNumber;
                                                            to_verseNumber = new_to_verseNumber;
                                                            //console.log(`3. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                                        }
                                
                                                        //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                                        if(to_verseNumber != null){                                                    
                                                            to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ; 

                                                            for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                                let stij = nb[chapterNumber].split('<p>')[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                                let stijNumber = stij[0];
                                                                stij.shift();//elimino 1 index
                                                                let stijText = stij.join(' ');//junto
                                                                let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
                
                                                                //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                                VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                                if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                                    VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                                }
                                                                VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                                VerseTextFull += '</span>';
                
                                                                //console.log(VerseTextFull);
                                                                
                                                                var VerseText = VerseTextFull;
                                                                //console.log(VerseText);
                                                            }//end for
                
                                                        }else{//если только 1 стих (1Кор.11:7), то...
                                                            VerseTextFull = nb[chapterNumber].split('<p>')[verseNumber];//делю только на стихи выбранную главу
                                                            //console.log(VerseTextFull);
                                                            
                                                            let stijText = VerseTextFull.split(' ');
                                                            stijText.shift();//elimino numero de versiculo
                
                                                            var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                            //console.log(VerseText);
                                                        }                
                
                                                        const p = document.createElement('p');
                                                        let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                                        if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                                        p.id = idLink;
                                                        p.className = 'tsk tsk_link';
                                                        p.setAttribute('data-verse',verseNumber);
                
                                                        const span_num_tsk = document.createElement('span');
                                                        span_num_tsk.className = 'sp_f';
                                                        span_num_tsk.innerText = tb_iter + 1;
                
                                                        p.append(span_num_tsk);
                                        
                                                        const a = document.createElement('a');
                                                        //a.id = 'goto_' + idLink;
                                                        a.href = '#';
                                                        a.classList.add = 'blink';
                
                                                        let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                                        if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                                        //console.log('===> refLink: '+refLink);
                
                                                        //-----------------------------------------------------------------//
                                                        //Evento on click. NO BORRAR !!! añado listener después de for!
                                                        //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                                        //-----------------------------------------------------------------//
                                                        
                                                        a.innerHTML = refLink;
                                                        p.append(a);
                                                        p.append(' ');                
                
                                                        const span_vt = document.createElement('span');
                                                        span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
                
                                                        
                                                        //Номера Стронга в стихах (RST+)
                                                        if(bq_StrongNumbers == "Y"){
                                                            let t = VerseText;
                                                            var arr_t = t.split(' ');
                
                                                            arr_t.forEach((el,i) => {    
                                                                
                                                                //element of string is Strong Number
                                                                if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                    const span_strong = document.createElement('span');
                                                                    span_strong.className = 'strong'; 
                                                                    let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
                
                                                                    //si ultimo carácter es string
                                                                    if(last_char != '' && isNaN(last_char)){
                                                                        let el_number = el.substring(0,el.length-1);
                                                                        let el_string = last_char;
                                                                        span_strong.innerHTML = el_number;
                                                                        p.append(span_strong);
                                                                        p.append(el_string);
                                                                    }else{//es number
                                                                        span_strong.innerHTML = el;
                                                                        p.append(span_strong);
                                                                    }
                                                                }else{//is word
                                                                    p.append(' ');
                                                                    p.append(el);
                                                                }
                                                            });
                                                            p.innerHTML.trim();
                
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                
                                                        }                                            
                                                        
                                                        //Примечания редактора в стихах (RSTi2)
                                                        if(bq_Notes == 'Y'){
                                                            let t = VerseText;
                
                                                            if(t.includes(bq_NoteSign)){// '*'
                                                                let arr_t0 = t.split(bq_NoteSign);
                                                                let before_Note = arr_t0[0];
                
                                                                if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                                    let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                                    let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                                    let text_Note = arr_t2[0];
                                                                    let after_Note = arr_t2[1];
                
                                                                    const span_t = document.createElement('span');
                                                                    span_t.className = 'tooltip';
                                                                    span_t.setAttribute('data-tooltip',text_Note);
                                                                    span_t.innerHTML = bq.NoteSign;
                
                                                                    span_t.addEventListener('mouseenter', function(){
                                                                        showTooltip(this);
                                                                    });
                                                                    span_t.addEventListener('mouseleave', function(){
                                                                        hideTooltip(this);
                                                                    });
                                                                    
                                                                    span_vt.append(before_Note);
                                                                    span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                                    span_vt.append(span_t);
                                                                    const span_vt_despues = document.createElement('span');
                                                                    span_vt_despues.className = 'vt';
                                                                    span_vt_despues.append(after_Note);
                                                                    span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
                
                                                                    p.append(span_vt);
                                                                    p.append(span_vt_despues);
                                                                }
                                                            }else{
                                                                //span_vt.append(VerseText);//se ven '<'
                                                                span_vt.innerHTML = VerseText;// se ve OK
                                                                p.append(span_vt);
                
                                                                if(bq_HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                            }
                                                        }
                                                        
                                                        //Оглавления в стихах (NRT)
                                                        if(bq_Titles == 'Y'){
                                                            let t = VerseText;
                
                                                            if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                                let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                                let before_Title = arr_t1[0];
                                                                let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                                let text_Title = arr_t2[0];
                                                                let after_Title = arr_t2[1];
                
                                                                const span_title = document.createElement('span');
                                                                span_title.className = 'verse_title';
                                                                span_title.innerHTML = text_Title;
                
                                                                p.append(before_Title);
                                                                p.append(span_title);
                                                                p.append(after_Title);
                                                            }else{
                                                                p.append(VerseText);
                                                            }
                
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                        
                                                        //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                        if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                            span_vt.innerHTML = VerseText;
                                                            p.append(span_vt);
                
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }    
                
                                                        arr_tsk_p[tb_iter] = p;
                                                        //console.log(`--- tb_iter: ${tb_iter}`);
                                                        
                                                    }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                                        //console.log(`3 (ELSE) --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]}`);
                                                        //console.log(`3. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                                        arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                                        //console.log(`--- tb_iter: ${tb_iter}`);
                                                    }                                                    
            
                                                    //si es ultimo elemento del array...
                                                    if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                                        //console.log('--- llamo buildVersesTsk() ---');
                                                        buildVersesTsk(arr_tsk_p, Translation);
                                                    }                
                                               
                                                }else{
                                                    //console.log(`1 --- (${el}) no hay fichero... hago fetch() de fichero: ${Translation}/${bq.Books[bookNumber].PathName}`);

                                                    //url del libro necesario
                                                    url = `modules/text/${Translation}/${bq.Books[bookNumber].PathName}`;//ej.: nrt_01.htm';     
                                                    fetch(url)
                                                    .then((response) => response.text())
                                                    .then((bookModule) => {

                                                        //console.log(' abajo bookModule:');//libro del modulo de la traducción de la Biblia// 01_Genesis.htm
                                                        //console.log(bookModule);


                                                        if(crear_objeto_obj_bible_files){
                                                            //si no existe objeto de ficheros de la Biblia, lo creo
                                                            if(typeof obj_bible_files[Translation] == 'undefined'){
                                                                obj_bible_files[Translation] = {};
                                                                obj_bible_files[Translation].Books = [];
                                                            }
                                                            //si no existe este libro en el objeto con esta Translation. lo meto dentro
                                                            if(typeof obj_bible_files[Translation].Books[bookNumber] == 'undefined'){
                                                                obj_bible_files[Translation].Books[bookNumber] = {
                                                                    'fileName': bq.Books[bookNumber].PathName, 
                                                                    'fileContent': bookModule
                                                                };
                                                                //console.log('1. obj_bible_files');
                                                                //console.log(obj_bible_files);
                                                            }
                                                        }
                
                                                        var nb = bookModule.split('<h4>');//делю файл на главы
                                                        //console.log(nb);
                                                        
                                                        nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                                        //console.log(nb);

                                                        let vsego_stijov = (chapterNumber <= bq.Books[bookNumber].ChapterQty) 
                                                            ? nb[chapterNumber].split('<p>').length - 1 
                                                            : nb[bq.Books[bookNumber].ChapterQty].split('<p>').length - 1 ;
                                                        //console.log(` `);
                                                        //console.log(` tb_iter: ${tb_iter}`);            
                                                        //console.log(`4. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);

                                                        
                                                        //si el capitulo indicado existe en el modulo -> todo bien
                                                        if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                                            //console.log(`4. (IF) el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                                            //console.log(`4. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `); 
                                                            //console.log(`4. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

                    
                                                            var VerseTextFull = '';

                                                            // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                                            if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                                let new_verseNumber = to_verseNumber;
                                                                let new_to_verseNumber = verseNumber;
                                                                verseNumber = new_verseNumber;
                                                                to_verseNumber = new_to_verseNumber;
                                                                //console.log(`4. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                                            }
                                    
                                                            //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                                            if(to_verseNumber != null){                                                    
                                                                to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ; 

                                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                                    let stij = nb[chapterNumber].split('<p>')[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                                    let stijNumber = stij[0];
                                                                    stij.shift();//elimino 1 index
                                                                    let stijText = stij.join(' ');//junto
                                                                    let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
                    
                                                                    //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                                    VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                                    if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                                        VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                                    }
                                                                    VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                                    VerseTextFull += '</span>';
                    
                                                                    //console.log(VerseTextFull);
                                                                    
                                                                    var VerseText = VerseTextFull;
                                                                    //console.log(VerseText);
                                                                }//end for
                    
                                                            }else{//если только 1 стих (1Кор.11:7), то...
                                                                VerseTextFull = nb[chapterNumber].split('<p>')[verseNumber];//делю только на стихи выбранную главу
                                                                //console.log(VerseTextFull);
                                                                
                                                                let stijText = VerseTextFull.split(' ');
                                                                stijText.shift();//elimino numero de versiculo
                    
                                                                var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                                //console.log(VerseText);
                                                            }
                    
                    
                                                            const p = document.createElement('p');
                                                            let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                                            if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                                            p.id = idLink;
                                                            p.className = 'tsk tsk_link';
                                                            p.setAttribute('data-verse',verseNumber);
                    
                                                            const span_num_tsk = document.createElement('span');
                                                            span_num_tsk.className = 'sp_f';
                                                            span_num_tsk.innerText = tb_iter + 1;
                    
                                                            p.append(span_num_tsk);
                                            
                                                            const a = document.createElement('a');
                                                            //a.id = 'goto_' + idLink;
                                                            a.href = '#';
                                                            a.classList.add = 'blink';
                    
                                                            let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                                            if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                                            //console.log('===> refLink: '+refLink);
                    
                                                            //-----------------------------------------------------------------//
                                                            //Evento on click. NO BORRAR !!! añado listener después de for!
                                                            //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                                            //-----------------------------------------------------------------//
                                                            
                                                            a.innerHTML = refLink;
                                                            p.append(a);
                                                            p.append(' ');
                    
                    
                                                            const span_vt = document.createElement('span');
                                                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
                    
                                                            
                                                            //Номера Стронга в стихах (RST+)
                                                            if(bq_StrongNumbers == "Y"){
                                                                let t = VerseText;
                                                                var arr_t = t.split(' ');
                    
                                                                arr_t.forEach((el,i) => {    
                                                                    
                                                                    //element of string is Strong Number
                                                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                        const span_strong = document.createElement('span');
                                                                        span_strong.className = 'strong'; 
                                                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
                    
                                                                        //si ultimo carácter es string
                                                                        if(last_char != '' && isNaN(last_char)){
                                                                            let el_number = el.substring(0,el.length-1);
                                                                            let el_string = last_char;
                                                                            span_strong.innerHTML = el_number;
                                                                            p.append(span_strong);
                                                                            p.append(el_string);
                                                                        }else{//es number
                                                                            span_strong.innerHTML = el;
                                                                            p.append(span_strong);
                                                                        }
                                                                    }else{//is word
                                                                        p.append(' ');
                                                                        p.append(el);
                                                                    }
                                                                });
                                                                p.innerHTML.trim();
                    
                                                                if(bq_HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                    
                                                            }                                            
                                                            
                                                            //Примечания редактора в стихах (RSTi2)
                                                            if(bq_Notes == 'Y'){
                                                                let t = VerseText;
                    
                                                                if(t.includes(bq_NoteSign)){// '*'
                                                                    let arr_t0 = t.split(bq_NoteSign);
                                                                    let before_Note = arr_t0[0];
                    
                                                                    if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                                        let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                                        let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                                        let text_Note = arr_t2[0];
                                                                        let after_Note = arr_t2[1];
                    
                                                                        const span_t = document.createElement('span');
                                                                        span_t.className = 'tooltip';
                                                                        span_t.setAttribute('data-tooltip',text_Note);
                                                                        span_t.innerHTML = bq.NoteSign;
                    
                                                                        span_t.addEventListener('mouseenter', function(){
                                                                            showTooltip(this);
                                                                        });
                                                                        span_t.addEventListener('mouseleave', function(){
                                                                            hideTooltip(this);
                                                                        });
                                                                        
                                                                        span_vt.append(before_Note);
                                                                        span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                                        span_vt.append(span_t);
                                                                        const span_vt_despues = document.createElement('span');
                                                                        span_vt_despues.className = 'vt';
                                                                        span_vt_despues.append(after_Note);
                                                                        span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
                    
                                                                        p.append(span_vt);
                                                                        p.append(span_vt_despues);
                                                                    }
                                                                }else{
                                                                    //span_vt.append(VerseText);//se ven '<'
                                                                    span_vt.innerHTML = VerseText;// se ve OK
                                                                    p.append(span_vt);
                    
                                                                    if(bq_HTMLFilter == 'Y'){
                                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                                    }
                                                                }
                                                            }
                                                            
                                                            //Оглавления в стихах (NRT)
                                                            if(bq_Titles == 'Y'){
                                                                let t = VerseText;
                    
                                                                if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                                    let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                                    let before_Title = arr_t1[0];
                                                                    let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                                    let text_Title = arr_t2[0];
                                                                    let after_Title = arr_t2[1];
                    
                                                                    const span_title = document.createElement('span');
                                                                    span_title.className = 'verse_title';
                                                                    span_title.innerHTML = text_Title;
                    
                                                                    p.append(before_Title);
                                                                    p.append(span_title);
                                                                    p.append(after_Title);
                                                                }else{
                                                                    p.append(VerseText);
                                                                }
                    
                                                                if(bq_HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                            }
                                                            
                                                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                            if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                                span_vt.innerHTML = VerseText;
                                                                p.append(span_vt);
                    
                                                                if(bq_HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                            }
                    
                                                            arr_tsk_p[tb_iter] = p;
                                                            //console.log(`--- tb_iter: ${tb_iter}`);
                                                            
                                                        }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                                            //console.log(`4 (ELSE) --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]}`);
                                                            //console.log(`4. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                                            arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                                            //console.log(`--- tb_iter: ${tb_iter}`);
                                                        }                                                        
                
                                                        //si es ultimo elemento del array...
                                                        if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                                            //console.log('--- llamo buildVersesTsk() ---');
                                                            buildVersesTsk(arr_tsk_p, Translation);
                                                        }

                                                    })
                                                    .catch(error => { 
                                                        // Código a realizar cuando se rechaza la promesa
                                                        console.log('4. error promesa: '+error);
                                                    });

                                                }//end else
                                                
                                                break;
                                            }
                                        }
                                        if(bookNumber != null){
                                            break;
                                        }                                    
                                    }//end for inner
                
                                });//fin forEach de tb_arr_links
                
                            }else{//no hay links
                                tsk_body.innerHTML = '';//reset
                                const p = document.createElement('p');
                                p.className = 'tsk tsk_nolink';
                                p.innerHTML = '<span class="prim_tsk"> Para el versiculo indicado no existen pasajes paralelos</span>';
                                //console.log(p);
                                tsk_body.append(p);
                            }
                
                            //Abro Sidebar pata mostrar TSK
                            showTab(btn_tsk,'tsk');//Se abre tab TSK
                            if(window.innerWidth < pantallaTabletMinPx){//si es mobile
                                openSidebar(document.querySelector('.btnMenu'));//simulo click sobre el boton hamburguesa        
                            }else{//si es desktop o tablet
                                //comprebo si está oculto sidebar
                                if(sidebar.style.display == 'none'){
                                    btn_hideShowSidebar.click();//mostrar sidebar con tsk
                                }
                            }
                
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('2. error promesa tsk: '+error);
                        });

                    }else{
                        console.log('No coincide el nombre del fichero o fileContent está vacío');
                    }
                }
            }
        }//end - //si existe objeto con Translation. Saco datos del objeto


        //si no existe objeto con tskName. hago fetch()
        if(typeof obj_tsk_files[tskName].Books[book] == 'undefined'){
            //console.log(`(${tsk.Books[book].PathName}) --- no hay todavia el fichero '${tsk.Books[book].PathName}' en obj_tsk_files[tskName] . saco datos por fetch()`);

            url = `modules/text/tsk/${tsk.Books[book].PathName}`;//datos de cross reference "01_genesis.ini"
            fetch(url)
            .then((response) => response.text())
            .then((tskModule) => { 
                
                if(crear_objeto_obj_tsk_files){
                    //meto tskModule en obj_tsk_files
                    obj_tsk_files[tskName].Books[book] = {
                        'fileName': tsk.Books[book].PathName, 
                        'fileContent': tskModule
                    };
                    //console.log('abajo obj_tsk_files:');
                    //console.log(obj_tsk_files);
                }

                tskModule = tskModule.replaceAll('\r','');//elimino '\r' que da error en 16_nehemiah.ini
                
                var tb = tskModule.split('[');//divido en chapters
                var tb_chapter = tb[chapter].split(']\n');//arr de un chapter indicado en el link divido en 2
                var tb_chapterNumber = tb_chapter[0];//numero de chapter
                var tb_chapter_vlinks = tb_chapter[1];//links del chapter
                var tb_lines = tb_chapter_vlinks.split('\n');
                var tb_verseNumber = tb_chapter_vlinks[0];
                
                var tb_arr_links = tb_lines[verse - 1].split('=')[1].split('; ');
                if(tb_arr_links == null) alert('error tb_arr_links');
                
                //console.log('tb_chapterNumber: '+tb_chapterNumber);
                //console.log('tb_verseNumber: '+tb_verseNumber);
                //console.log('tb_arr_links: ');
                //console.log(tb_arr_links);
    
                tsk_head.innerHTML = '';//reset datos
                tsk_body.innerHTML = '';//reset datos
    
                //Siempre muestro el verse clickeado en tsk
                const span_sm_trans = document.createElement('span');
                span_sm_trans.id = 'sm_trans';
                //span_sm_trans.innerHTML = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
    
                const span_trans_tsk = document.createElement('span');
                span_trans_tsk.className = 'trans_tsk';
                span_trans_tsk.textContent = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
                span_sm_trans.append(span_trans_tsk);                
    
                const p = document.createElement('p');
                p.id = el.id;
                p.className = 'tsk tsk_verse';
                p.setAttribute('data-verse',el.getAttribute('data-verse'));
                p.setAttribute('data-trans',Translation);
                p.innerHTML = el.innerHTML;
                //p.querySelector('a').setAttribute('onclick',`goToLink('${Translation}', '${this.innerHTML}')`);//funciona//antes
                p.querySelector('a').addEventListener('click',()=>{
                    //console.log('click on tsk a');
                    goToLink(Translation, p.querySelector('a').innerHTML);
                });
    
                tsk_head.append(span_sm_trans);
                tsk_head.append(p);
                tsk_head.scrollTop = 0;
                
                mySizeTsk();//altura de tsk_body despues de meter tsk_head
                
                //Muestro loader tres puntos (...)
                const d_loader = document.createElement('div');
                d_loader.className = 'loader';
                d_loader.innerHTML = `<span class="loader__element"></span>
                                      <span class="loader__element"></span>
                                      <span class="loader__element"></span>`;
                tsk_body.append(d_loader);
    
                arr_tsk_p = [];//por si acaso
    
                //Si hay links para el verse
                if(tb_arr_links != ''){
                    //console.log('antes de forEach. tb_arr_links: ');
                    //console.log(tb_arr_links);                  
    
                    tb_arr_links.forEach((el,i)=>{
                        //console.log(`tb_arr_links[${i}]: ${tb_arr_links[i]}`);
                        let tb_iter = i;
    
                        var bookShortName = el.split(' ')[0];//Mt de 'Mt 13:24-26'
                        var chapterNumber = el.split(' ')[1].split(':')[0];//13 de 'Mt 13:24-26'
                        var verseNumbers = el.split(' ')[1].split(':')[1];//13 de 'Mt 13:24-26'
                        var verseNumber = null;
                        var to_verseNumber = null;
    
                        if(verseNumbers.includes('-')){
                            verseNumber = verseNumbers.split('-')[0];
                            to_verseNumber = verseNumbers.split('-')[1];
                        }else{
                            verseNumber = verseNumbers;
                        }
    
                        //console.log('bookShortName: '+bookShortName);//Mat. Gen.
                        //console.log('chapterNumber: '+chapterNumber);//empezando de 1
                        //console.log('verseNumber: '+verseNumber);//empezando de 1
                        //console.log('to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                        //console.log('---');  
                        
                        

                        //saco ajustes de este modulo en json               
                        var bq = objTrans;
                        //console.log(' abajo bq:');
                        //console.log(bq);

                        //Asigno global vars para que sean vistos en fetch interior
                        window.dataBooksTsk = bq.Books;

                        window.bq_StrongNumbers = bq.StrongNumbers;
                        window.bq_EnglishPsalms = bq.EnglishPsalms;//PARA SABER SI MODIFICO chapterNumber y verseNumber

                        window.bq_Notes = bq.Notes;
                        window.bq_NoteSign = bq.NoteSign;
                        window.bq_StartNoteSign = bq.StartNoteSign;
                        window.bq_EndNoteSign = bq.EndNoteSign;

                        window.bq_Titles = bq.Titles;
                        window.bq_StartTitleSign = bq.StartTitleSign;
                        window.bq_EndTitleSign = bq.EndTitleSign;

                        window.bq_HTMLFilter = bq.HTMLFilter;
                        
                        //Достаю индех книги, зная его короткое значение.Напр.: 'Mt 13:24-26'
                        for(let i = 0, bookNumber = null; i < dataBooksTsk.length; i++) {
                            const element = dataBooksTsk[i];

                            for(let y = 0; y < element.ShortNames.length; y++) {
                                const elem = element.ShortNames[y];

                                if(bookShortName.toLowerCase() == elem.toLowerCase()){
                                    var n_book = element.BookNumber;
                                    var short_name = elem;//siempre el primer nombre del array
                
                                    bookNumber = i;//numero de book empezando de 0. 0 => Génesis
                                    //console.log('bookNumber: '+bookNumber);                        
                                    //console.log('--- encontrado n_book: ' +n_book + ' --- short_name: ' +short_name);

                                    //Al encontrar el identificador del libro, miro los links. 
                                    //14=Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12
                                    //vers 14 tiene los links: Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12

                                    if(bq_EnglishPsalms == 'N'){
                                        //Modifico sólo los links si es para traducción rusa, ya que TSK viene con EnglishPlsalms = Y
                                        var new_result = convertLinkFromEspToRus(bookNumber, chapterNumber, verseNumber, to_verseNumber);
                                                                                    
                                        //asigno nuevo valor
                                        bookNumber = new_result[0];
                                        chapterNumber = new_result[1];
                                        verseNumber = new_result[2];
                                        to_verseNumber = new_result[3];

                                        //console.log('ahora bookNumber: '+bookNumber);//empezando de 1
                                        //console.log('ahora chapterNumber: '+chapterNumber);//empezando de 1
                                        //console.log('ahora verseNumber: '+verseNumber);//empezando de 1
                                        //console.log('ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                    }



                                    //si existe el fichero del libro del módulo...
                                    if( typeof obj_bible_files[Translation] != 'undefined' && 
                                        typeof obj_bible_files[Translation].Books[bookNumber] != 'undefined' &&
                                        obj_bible_files[Translation].Books[bookNumber].fileName == bq.Books[bookNumber].PathName && 
                                        obj_bible_files[Translation].Books[bookNumber].fileContent != ''
                                    ){
                                        //console.log(`--- hay fichero en el objeto 'obj_bible_files'`);
                                        //console.log(`--- hay fichero en el objeto 'obj_bible_files' para sacar texto de la Biblia: ${bq.Books[bookNumber].PathName}  --- Translation: ${Translation} `);

                                        let bookModule = obj_bible_files[Translation].Books[bookNumber].fileContent;
                                        var nb = bookModule.split('<h4>');//делю файл на главы
                                        //console.log(nb);
                                        
                                        nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                        //console.log(nb);

                                        let vsego_stijov = (chapterNumber <= bq.Books[bookNumber].ChapterQty) 
                                            ? nb[chapterNumber].split('<p>').length - 1 
                                            : nb[bq.Books[bookNumber].ChapterQty].split('<p>').length - 1 ;
                                        //console.log(` `);
                                        //console.log(` tb_iter: ${tb_iter}`);
                                        //console.log(`1. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);


                                        //si el capitulo indicado existe en el modulo -> todo bien
                                        if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                            //console.log(`1. el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                            //console.log(`1. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `);
                                            //console.log(`1. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

    
                                            var VerseTextFull = '';

                                            // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                            if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                let new_verseNumber = to_verseNumber;
                                                let new_to_verseNumber = verseNumber;
                                                verseNumber = new_verseNumber;
                                                to_verseNumber = new_to_verseNumber;
                                                //console.log(`1. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                            }
    
                                            //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                            if(to_verseNumber != null){  
                                                to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ;                                                  
                                                
                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                    let stij = nb[chapterNumber].split('<p>')[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                    let stijNumber = stij[0];
                                                    stij.shift();//elimino 1 index
                                                    let stijText = stij.join(' ');//junto
                                                    let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
    
                                                    //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                    VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                    if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                        VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                    }
                                                    VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                    VerseTextFull += '</span>';
    
                                                    //console.log(VerseTextFull);
                                                    
                                                    var VerseText = VerseTextFull;
                                                    //console.log(VerseText);
                                                }//end for
    
                                            }else{//если только 1 стих (1Кор.11:7), то...
                                                VerseTextFull = nb[chapterNumber].split('<p>')[verseNumber];//делю только на стихи выбранную главу
                                                //console.log(VerseTextFull);
                                                
                                                let stijText = VerseTextFull.split(' ');
                                                stijText.shift();//elimino numero de versiculo
    
                                                var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                //console.log(VerseText);
                                            }
    
    
                                            const p = document.createElement('p');
                                            let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                            if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                            p.id = idLink;
                                            p.className = 'tsk tsk_link';
                                            p.setAttribute('data-verse',verseNumber);
    
                                            const span_num_tsk = document.createElement('span');
                                            span_num_tsk.className = 'sp_f';
                                            span_num_tsk.innerText = tb_iter + 1;
    
                                            p.append(span_num_tsk);
    
                                            const a = document.createElement('a');
                                            //a.id = 'goto_' + idLink;
                                            a.href = '#';
                                            a.classList.add = 'blink';
    
                                            let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                            if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                            //console.log('===> refLink: '+refLink);
    
                                            //-----------------------------------------------------------------//
                                            //Evento on click. NO BORRAR !!! añado listener después de for!
                                            //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                            //-----------------------------------------------------------------//
                                            
                                            a.innerHTML = refLink;
                                            p.append(a);
                                            p.append(' ');
    
    
                                            const span_vt = document.createElement('span');
                                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
    
                                            
                                            //Номера Стронга в стихах (RST+)
                                            if(bq_StrongNumbers == "Y"){
                                                let t = VerseText;
                                                var arr_t = t.split(' ');
    
                                                arr_t.forEach((el,i) => {    
                                                    
                                                    //element of string is Strong Number
                                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                        const span_strong = document.createElement('span');
                                                        span_strong.className = 'strong'; 
                                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
    
                                                        //si ultimo carácter es string
                                                        if(last_char != '' && isNaN(last_char)){
                                                            let el_number = el.substring(0,el.length-1);
                                                            let el_string = last_char;
                                                            span_strong.innerHTML = el_number;
                                                            p.append(span_strong);
                                                            p.append(el_string);
                                                        }else{//es number
                                                            span_strong.innerHTML = el;
                                                            p.append(span_strong);
                                                        }
                                                    }else{//is word
                                                        p.append(' ');
                                                        p.append(el);
                                                    }
                                                });
                                                p.innerHTML.trim();
    
                                                if(bq_HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
    
                                            }                                            
                                            
                                            //Примечания редактора в стихах (RSTi2)
                                            if(bq_Notes == 'Y'){
                                                let t = VerseText;
    
                                                if(t.includes(bq_NoteSign)){// '*'
                                                    let arr_t0 = t.split(bq_NoteSign);
                                                    let before_Note = arr_t0[0];
    
                                                    if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                        let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                        let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                        let text_Note = arr_t2[0];
                                                        let after_Note = arr_t2[1];
    
                                                        const span_t = document.createElement('span');
                                                        span_t.className = 'tooltip';
                                                        span_t.setAttribute('data-tooltip',text_Note);
                                                        span_t.innerHTML = bq.NoteSign;
    
                                                        span_t.addEventListener('mouseenter', function(){
                                                            showTooltip(this);
                                                        });
                                                        span_t.addEventListener('mouseleave', function(){
                                                            hideTooltip(this);
                                                        });
                                                        
                                                        span_vt.append(before_Note);
                                                        span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                        span_vt.append(span_t);
                                                        const span_vt_despues = document.createElement('span');
                                                        span_vt_despues.className = 'vt';
                                                        span_vt_despues.append(after_Note);
                                                        span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
    
                                                        p.append(span_vt);
                                                        p.append(span_vt_despues);
                                                    }
                                                }else{
                                                    //span_vt.append(VerseText);//se ven '<'
                                                    span_vt.innerHTML = VerseText;// se ve OK
                                                    p.append(span_vt);
    
                                                    if(bq_HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
                                            }
                                            
                                            //Оглавления в стихах (NRT)
                                            if(bq_Titles == 'Y'){
                                                let t = VerseText;
    
                                                if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                    let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                    let before_Title = arr_t1[0];
                                                    let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                    let text_Title = arr_t2[0];
                                                    let after_Title = arr_t2[1];
    
                                                    const span_title = document.createElement('span');
                                                    span_title.className = 'verse_title';
                                                    span_title.innerHTML = text_Title;
    
                                                    p.append(before_Title);
                                                    p.append(span_title);
                                                    p.append(after_Title);
                                                }else{
                                                    p.append(VerseText);
                                                }
    
                                                if(bq_HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }
                                            
                                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                            if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                span_vt.innerHTML = VerseText;
                                                p.append(span_vt);
    
                                                if(bq_HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }

                                            arr_tsk_p[tb_iter] = p;
                                            //console.log(`--- tb_iter: ${tb_iter}`);

                                        }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                            //console.log(`1. --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]}`);
                                            //console.log(`1. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                            arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                            //console.log(`--- tb_iter: ${tb_iter}`);
                                        }

                                        //si es ultimo elemento del array...
                                        if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                            //console.log('--- llamo buildVersesTsk() ---');
                                            buildVersesTsk(arr_tsk_p, Translation);
                                        }

                                    }else{
                                        
                                        //console.log(`(${el}) --- no hay fichero en obj_bible_files`);
                                        //console.log(`(${el}) no hay fichero '${Translation}/${bq.Books[bookNumber].PathName}'... \n voy a hacer fetch() de fichero: ${Translation}/${bq.Books[bookNumber].PathName}`);

                                       
                                        //todo el libro
                                        if(modo_fetch_tsk == 'by_text'){
                                            //console.log('modo_fetch_tsk == by_text');

                                            //url del libro necesario
                                            url = `modules/text/${Translation}/${bq.Books[bookNumber].PathName}`;//ej.: nrt_01.htm';     
                                            fetch(url)
                                            .then((response) => response.text())
                                            .then((bookModule) => {

                                                //console.log(`--- fetch() --- (${el}) he hecho fetch() de fichero: ${Translation}/${bq.Books[bookNumber].PathName}`);
                                                //console.log(' 1988 abajo bookModule:');//libro del modulo de la traducción de la Biblia// 01_Genesis.htm
                                                //console.log(bookModule);

                                                if(crear_objeto_obj_bible_files){
                                                    //si no existe objeto de ficheros de la Biblia, lo creo
                                                    if(typeof obj_bible_files[Translation] == 'undefined'){
                                                        obj_bible_files[Translation] = {};
                                                        obj_bible_files[Translation].Books = [];
                                                    }
                                                    //si no existe este libro en el objeto con esta Translation. lo meto dentro
                                                    if(typeof obj_bible_files[Translation].Books[bookNumber] == 'undefined'){
                                                        obj_bible_files[Translation].Books[bookNumber] = {
                                                            'fileName': bq.Books[bookNumber].PathName, 
                                                            'fileContent': bookModule
                                                        };
                                                        //console.log('2. obj_bible_files');
                                                        //console.log(obj_bible_files);
                                                    }
                                                }
                                                
                                                var nb = bookModule.split('<h4>');//делю файл на главы
                                                //console.log(nb);
                                                
                                                nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                                //console.log(nb);

                                                let vsego_stijov = (chapterNumber <= bq.Books[bookNumber].ChapterQty) 
                                                    ? nb[chapterNumber].split('<p>').length - 1 
                                                    : nb[bq.Books[bookNumber].ChapterQty].split('<p>').length - 1 ;
                                                //console.log(` `);
                                                //console.log(` tb_iter: ${tb_iter}`);
                                                //console.log(`2. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);


                                                //si el capitulo indicado existe en el modulo -> todo bien
                                                if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                                    //console.log(`2. (IF) el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                                    //console.log(`2. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `);
                                                    //console.log(`2. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

        
                                                    var VerseTextFull = '';

                                                    // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                                    if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                        let new_verseNumber = to_verseNumber;
                                                        let new_to_verseNumber = verseNumber;
                                                        verseNumber = new_verseNumber;
                                                        to_verseNumber = new_to_verseNumber;
                                                        //console.log(`2. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                                    }
        
                                                    //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                                    if(to_verseNumber != null){                                                    
                                                        to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ; 

                                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                            let stij = nb[chapterNumber].split('<p>')[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                            let stijNumber = stij[0];
                                                            stij.shift();//elimino 1 index
                                                            let stijText = stij.join(' ');//junto
                                                            let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
        
                                                            //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                            VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                            if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                                VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                            }
                                                            VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                            VerseTextFull += '</span>';
        
                                                            //console.log(VerseTextFull);
                                                            
                                                            var VerseText = VerseTextFull;
                                                            //console.log(VerseText);
                                                        }//end for
        
                                                    }else{//если только 1 стих (1Кор.11:7), то...
                                                        VerseTextFull = nb[chapterNumber].split('<p>')[verseNumber];//делю только на стихи выбранную главу
                                                        //console.log(VerseTextFull);
                                                        
                                                        let stijText = VerseTextFull.split(' ');
                                                        stijText.shift();//elimino numero de versiculo
        
                                                        var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                        //console.log(VerseText);
                                                    }
        
        
                                                    const p = document.createElement('p');
                                                    let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                                    if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                                    p.id = idLink;
                                                    p.className = 'tsk tsk_link';
                                                    p.setAttribute('data-verse',verseNumber);
        
                                                    const span_num_tsk = document.createElement('span');
                                                    span_num_tsk.className = 'sp_f';
                                                    span_num_tsk.innerText = tb_iter + 1;
        
                                                    p.append(span_num_tsk);
        
                                                    const a = document.createElement('a');
                                                    //a.id = 'goto_' + idLink;
                                                    a.href = '#';
                                                    a.classList.add = 'blink';
        
                                                    let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                                    if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                                    //console.log('===> refLink: '+refLink);
        
                                                    //-----------------------------------------------------------------//
                                                    //Evento on click. NO BORRAR !!! añado listener después de for!
                                                    //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                                    //-----------------------------------------------------------------//
                                                    
                                                    a.innerHTML = refLink;
                                                    p.append(a);
                                                    p.append(' ');
        
        
                                                    const span_vt = document.createElement('span');
                                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
        
                                                    
                                                    //Номера Стронга в стихах (RST+)
                                                    if(bq_StrongNumbers == "Y"){
                                                        let t = VerseText;
                                                        var arr_t = t.split(' ');
        
                                                        arr_t.forEach((el,i) => {    
                                                            
                                                            //element of string is Strong Number
                                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                const span_strong = document.createElement('span');
                                                                span_strong.className = 'strong'; 
                                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
        
                                                                //si ultimo carácter es string
                                                                if(last_char != '' && isNaN(last_char)){
                                                                    let el_number = el.substring(0,el.length-1);
                                                                    let el_string = last_char;
                                                                    span_strong.innerHTML = el_number;
                                                                    p.append(span_strong);
                                                                    p.append(el_string);
                                                                }else{//es number
                                                                    span_strong.innerHTML = el;
                                                                    p.append(span_strong);
                                                                }
                                                            }else{//is word
                                                                p.append(' ');
                                                                p.append(el);
                                                            }
                                                        });
                                                        p.innerHTML.trim();
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
        
                                                    }                                            
                                                    
                                                    //Примечания редактора в стихах (RSTi2)
                                                    if(bq_Notes == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_NoteSign)){// '*'
                                                            let arr_t0 = t.split(bq_NoteSign);
                                                            let before_Note = arr_t0[0];
        
                                                            if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                                let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                                let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                                let text_Note = arr_t2[0];
                                                                let after_Note = arr_t2[1];
        
                                                                const span_t = document.createElement('span');
                                                                span_t.className = 'tooltip';
                                                                span_t.setAttribute('data-tooltip',text_Note);
                                                                span_t.innerHTML = bq.NoteSign;
        
                                                                span_t.addEventListener('mouseenter', function(){
                                                                    showTooltip(this);
                                                                });
                                                                span_t.addEventListener('mouseleave', function(){
                                                                    hideTooltip(this);
                                                                });
                                                                
                                                                span_vt.append(before_Note);
                                                                span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                                span_vt.append(span_t);
                                                                const span_vt_despues = document.createElement('span');
                                                                span_vt_despues.className = 'vt';
                                                                span_vt_despues.append(after_Note);
                                                                span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
        
                                                                p.append(span_vt);
                                                                p.append(span_vt_despues);
                                                            }
                                                        }else{
                                                            //span_vt.append(VerseText);//se ven '<'
                                                            span_vt.innerHTML = VerseText;// se ve OK
                                                            p.append(span_vt);
        
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                    }
                                                    
                                                    //Оглавления в стихах (NRT)
                                                    if(bq_Titles == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                            let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                            let before_Title = arr_t1[0];
                                                            let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                            let text_Title = arr_t2[0];
                                                            let after_Title = arr_t2[1];
        
                                                            const span_title = document.createElement('span');
                                                            span_title.className = 'verse_title';
                                                            span_title.innerHTML = text_Title;
        
                                                            p.append(before_Title);
                                                            p.append(span_title);
                                                            p.append(after_Title);
                                                        }else{
                                                            p.append(VerseText);
                                                        }
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    
                                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                    if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                        span_vt.innerHTML = VerseText;
                                                        p.append(span_vt);
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }    
        
                                                    arr_tsk_p[tb_iter] = p;
                                                    //console.log(`--- tb_iter: ${tb_iter}`);                                           
                                                
                                                }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                                    //console.log(`2. (ELSE) --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]} `);
                                                    //console.log(`2. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                                    arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                                    //console.log(`--- tb_iter: ${tb_iter}`);
                                                }

                                                //si es ultimo elemento del array...
                                                if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                                    //console.log('--- llamo buildVersesTsk() ---');
                                                    buildVersesTsk(arr_tsk_p, Translation);
                                                }

                                            })
                                            .catch(error => { 
                                                // Código a realizar cuando se rechaza la promesa
                                                console.log('2.2210 error promesa: '+error);
                                            });

                                        }// end modo_fetch_tsk old


                                        //por php solo el capitulo
                                        if(modo_fetch_tsk == 'by_json'){
                                            //console.log('modo_fetch_tsk == by_json');

                                            //url del libro necesario
                                            url = `modules/text/${Translation}/${bq.Books[bookNumber].PathName}`;//ej.: nrt_01.htm'; 

                                            //Meto parametros para sacar datos por el fetch de solo un capitulo en vez de todo el fichero
                                            let formData = new FormData();
                                            formData.append('url', '../'+url );
                                            formData.append('base_ep', base_ep);
                                            formData.append('bq_EnglishPsalms', bq.EnglishPsalms);
                                            if(book != null) formData.append('book', bookNumber);
                                            formData.append('chapter', chapterNumber);
                                            //AKI si HACE FALTA VERSENUMBER y TO_VERSENUMBER!!!
                                            if(typeof verseNumber != 'undefined' && verseNumber != null) formData.append('verse', verseNumber);
                                            if(typeof to_verseNumber != 'undefined' && to_verseNumber != null) formData.append('to_verse', to_verseNumber);
                                            if(typeof col1_p_length != 'undefined' && col1_p_length != null) formData.append('col1_p_length', col1_p_length);

                                            fetch('app/read_file_to_json.php',{
                                                method: 'POST',
                                                body: formData
                                            })
                                            .then((response) => response.json())
                                            .then((dataRead) => {

                                                //console.log(`--- fetch() por php to_json --- (${el}) he hecho fetch() de fichero: ${Translation}/${bq.Books[bookNumber].PathName}`);

                                                let bookModule = dataRead.chapterData.arr_p_verses;
                                                //console.log(' 1988 abajo bookModule:');//libro del modulo de la traducción de la Biblia// 01_Genesis.htm
                                                //console.log(bookModule);
                                                                                               
                                                //var nb = bookModule.split('<h4>');//делю файл на главы
                                                var nb = bookModule;//делю файл на главы
                                                //console.log(nb);
                                                
                                                let vsego_stijov = dataRead.chapterData.VerseQty;
                                                //console.log(` vsego_stijov: ${vsego_stijov}`);

                                                //console.log(` `);
                                                //console.log(`2. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);


                                                //si el capitulo indicado existe en el modulo -> todo bien
                                                if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                                    //console.log(`2. (IF) el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                                    //console.log(`2. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `);
                                                    //console.log(`2. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

        
                                                    var VerseTextFull = '';

                                                    // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                                    if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                        let new_verseNumber = to_verseNumber;
                                                        let new_to_verseNumber = verseNumber;
                                                        verseNumber = new_verseNumber;
                                                        to_verseNumber = new_to_verseNumber;
                                                        //console.log(`2. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                                    }
        
                                                    //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                                    if(to_verseNumber != null){                                                    
                                                        to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ; 

                                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                            let stij = nb[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                            let stijNumber = stij[0];
                                                            stij.shift();//elimino 1 index
                                                            let stijText = stij.join(' ');//junto
                                                            let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
        
                                                            //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                            VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                            if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                                VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                            }
                                                            VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                            VerseTextFull += '</span>';
        
                                                            //console.log(VerseTextFull);
                                                            
                                                            var VerseText = VerseTextFull;
                                                            //console.log(VerseText);
                                                        }//end for
        
                                                    }else{//если только 1 стих (1Кор.11:7), то...
                                                        VerseTextFull = nb[verseNumber];
                                                        //console.log(VerseTextFull);
                                                        
                                                        let stijText = VerseTextFull.split(' ');
                                                        stijText.shift();//elimino numero de versiculo
        
                                                        var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                        //console.log(VerseText);
                                                    }
        
        
                                                    const p = document.createElement('p');
                                                    let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                                    if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                                    p.id = idLink;
                                                    p.className = 'tsk tsk_link';
                                                    p.setAttribute('data-verse',verseNumber);
        
                                                    const span_num_tsk = document.createElement('span');
                                                    span_num_tsk.className = 'sp_f';
                                                    span_num_tsk.innerText = tb_iter + 1;
        
                                                    p.append(span_num_tsk);
        
                                                    const a = document.createElement('a');
                                                    //a.id = 'goto_' + idLink;
                                                    a.href = '#';
                                                    a.classList.add = 'blink';
        
                                                    let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                                    if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                                    //console.log('===> refLink: '+refLink);
        
                                                    //-----------------------------------------------------------------//
                                                    //Evento on click. NO BORRAR !!! añado listener después de for!
                                                    //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                                    //-----------------------------------------------------------------//
                                                    
                                                    a.innerHTML = refLink;
                                                    p.append(a);
                                                    p.append(' ');
        
        
                                                    const span_vt = document.createElement('span');
                                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
        
                                                    
                                                    //Номера Стронга в стихах (RST+)
                                                    if(bq_StrongNumbers == "Y"){
                                                        let t = VerseText;
                                                        var arr_t = t.split(' ');
        
                                                        arr_t.forEach((el,i) => {    
                                                            
                                                            //element of string is Strong Number
                                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                const span_strong = document.createElement('span');
                                                                span_strong.className = 'strong'; 
                                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
        
                                                                //si ultimo carácter es string
                                                                if(last_char != '' && isNaN(last_char)){
                                                                    let el_number = el.substring(0,el.length-1);
                                                                    let el_string = last_char;
                                                                    span_strong.innerHTML = el_number;
                                                                    p.append(span_strong);
                                                                    p.append(el_string);
                                                                }else{//es number
                                                                    span_strong.innerHTML = el;
                                                                    p.append(span_strong);
                                                                }
                                                            }else{//is word
                                                                p.append(' ');
                                                                p.append(el);
                                                            }
                                                        });
                                                        p.innerHTML.trim();
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
        
                                                    }                                            
                                                    
                                                    //Примечания редактора в стихах (RSTi2)
                                                    if(bq_Notes == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_NoteSign)){// '*'
                                                            let arr_t0 = t.split(bq_NoteSign);
                                                            let before_Note = arr_t0[0];
        
                                                            if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                                let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                                let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                                let text_Note = arr_t2[0];
                                                                let after_Note = arr_t2[1];
        
                                                                const span_t = document.createElement('span');
                                                                span_t.className = 'tooltip';
                                                                span_t.setAttribute('data-tooltip',text_Note);
                                                                span_t.innerHTML = bq.NoteSign;
        
                                                                span_t.addEventListener('mouseenter', function(){
                                                                    showTooltip(this);
                                                                });
                                                                span_t.addEventListener('mouseleave', function(){
                                                                    hideTooltip(this);
                                                                });
                                                                
                                                                span_vt.append(before_Note);
                                                                span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                                span_vt.append(span_t);
                                                                const span_vt_despues = document.createElement('span');
                                                                span_vt_despues.className = 'vt';
                                                                span_vt_despues.append(after_Note);
                                                                span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
        
                                                                p.append(span_vt);
                                                                p.append(span_vt_despues);
                                                            }
                                                        }else{
                                                            //span_vt.append(VerseText);//se ven '<'
                                                            span_vt.innerHTML = VerseText;// se ve OK
                                                            p.append(span_vt);
        
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                    }
                                                    
                                                    //Оглавления в стихах (NRT)
                                                    if(bq_Titles == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                            let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                            let before_Title = arr_t1[0];
                                                            let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                            let text_Title = arr_t2[0];
                                                            let after_Title = arr_t2[1];
        
                                                            const span_title = document.createElement('span');
                                                            span_title.className = 'verse_title';
                                                            span_title.innerHTML = text_Title;
        
                                                            p.append(before_Title);
                                                            p.append(span_title);
                                                            p.append(after_Title);
                                                        }else{
                                                            p.append(VerseText);
                                                        }
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    
                                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                    if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                        span_vt.innerHTML = VerseText;
                                                        p.append(span_vt);
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }    
        
                                                    arr_tsk_p[tb_iter] = p;
                                                    //console.log(`--- tb_iter: ${tb_iter}`);                                           
                                                
                                                }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                                    //console.log(`2. (ELSE) --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]} `);
                                                    //console.log(`2. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                                    arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                                    //console.log(`--- tb_iter: ${tb_iter}`);
                                                }

                                                //si es ultimo elemento del array...
                                                if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                                    //console.log('--- llamo buildVersesTsk() ---');
                                                    buildVersesTsk(arr_tsk_p, Translation);
                                                }

                                            })
                                            .catch(error => { 
                                                // Código a realizar cuando se rechaza la promesa
                                                console.log('2.new 2662 error promesa: '+error);
                                            });

                                        }// end modo_fetch_tsk by_json


                                    }

                                    break;
                                }
                            }
                            if(bookNumber != null){
                                break;
                            }                                    
                        }//end for inner 
    
                    });//fin forEach de tb_arr_links
    
                }else{//no hay links
                    tsk_body.innerHTML = '';//reset
                    const p = document.createElement('p');
                    p.className = 'tsk tsk_nolink';
                    p.innerHTML = '<span class="prim_tsk"> Para el versiculo indicado no existen pasajes paralelos</span>';
                    //console.log(p);
                    tsk_body.append(p);
                }
    
                //Abro Sidebar pata mostrar TSK
                showTab(btn_tsk,'tsk');//Se abre tab TSK
                if(window.innerWidth < pantallaTabletMinPx){//si es mobile
                    openSidebar(document.querySelector('.btnMenu'));//simulo click sobre el boton hamburguesa        
                }else{//si es desktop o tablet
                    //comprebo si está oculto sidebar
                    if(sidebar.style.display == 'none'){
                        btn_hideShowSidebar.click();//mostrar sidebar con tsk
                    }
                }
    
            })
            .catch(error => { 
                // Código a realizar cuando se rechaza la promesa
                console.log('2. error promesa tsk: '+error);
            });

        }//end - //si no existe objeto con Translation. hago fetch()

    }else{//modo old

        //alert('tsk modo old');
        console.log('tsk modo old');

        url = `modules/text/tsk/bibleqt.json`;//tsk'; 
        fetch(url)
        .then((response) => response.json())
        .then((tsk) => {
            
            //console.log('abajo tsk: ');
            //console.log(tsk);
            //console.log('tsk.Books[book].PathName: '+tsk.Books[book].PathName);
    
                url = `modules/text/tsk/${tsk.Books[book].PathName}`;//datos de cross reference
                fetch(url)
                .then((response) => response.text())
                .then((tskModule) => {  
                    
                    tskModule = tskModule.replaceAll('\r','');//elimino '\r' que da error en 16_nehemiah.ini
    
                    var tb = tskModule.split('[');//divido en chapters
                    var tb_chapter = tb[chapter].split(']\n');//arr de un chapter indicado en el link divido en 2
                    var tb_chapterNumber = tb_chapter[0];//numero de chapter
                    var tb_chapter_vlinks = tb_chapter[1];//links del chapter
                    var tb_lines = tb_chapter_vlinks.split('\n');
                    var tb_verseNumber = tb_chapter_vlinks[0];
                    
                    var tb_arr_links = tb_lines[verse - 1].split('=')[1].split('; ');
                    if(tb_arr_links == null) alert('error tb_arr_links');
                    
                    //console.log('tb_chapterNumber: '+tb_chapterNumber);
                    //console.log('tb_verseNumber: '+tb_verseNumber);
                    //console.log('tb_arr_links: ');
                    //console.log(tb_arr_links);
    
                    tsk_head.innerHTML = '';//reset datos
                    tsk_body.innerHTML = '';//reset datos
    
                    //Siempre muestro el verse clickeado en tsk
                    const span_sm_trans = document.createElement('span');
                    span_sm_trans.id = 'sm_trans';
                    //span_sm_trans.innerHTML = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
    
                    const span_trans_tsk = document.createElement('span');
                    span_trans_tsk.className = 'trans_tsk';
                    span_trans_tsk.textContent = document.querySelector('.colsHead[data-trans="' + Translation+ '"] .colsHeadInner .partDesk .desk_trans').innerHTML;
                    span_sm_trans.append(span_trans_tsk);
                    
    
                    const p = document.createElement('p');
                    p.id = el.id;
                    p.className = 'tsk tsk_verse';
                    p.setAttribute('data-verse',el.getAttribute('data-verse'));
                    p.setAttribute('data-trans',Translation);
                    p.innerHTML = el.innerHTML;
                    //p.querySelector('a').setAttribute('onclick',`goToLink('${Translation}', '${this.innerHTML}')`);//funciona//antes
                    p.querySelector('a').addEventListener('click',()=>{
                        //console.log('click on tsk a');
                        goToLink(Translation, p.querySelector('a').innerHTML);
                    });
    
                    tsk_head.append(span_sm_trans);
                    tsk_head.append(p);
                    tsk_head.scrollTop = 0;
                    
                    mySizeTsk();//altura de tsk_body despues de meter tsk_head
                    
                    //Muestro loader tres puntos (...)
                    const d_loader = document.createElement('div');
                    d_loader.className = 'loader';
                    d_loader.innerHTML = `<span class="loader__element"></span>
                                        <span class="loader__element"></span>
                                        <span class="loader__element"></span>`;
                    tsk_body.append(d_loader);
    
                    arr_tsk_p = [];//por si acaso
    
                    //Si hay links para el verse
                    if(tb_arr_links != ''){
                        //console.log('antes de forEach. tb_arr_links: ');
                        //console.log(tb_arr_links);                  
    
                        tb_arr_links.forEach((el,i)=>{
                            //console.log(`tb_arr_links[${i}]: ${tb_arr_links[i]}`);
                            let tb_iter = i;
    
                            var bookShortName = el.split(' ')[0];//Mt de 'Mt 13:24-26'
                            var chapterNumber = el.split(' ')[1].split(':')[0];//13 de 'Mt 13:24-26'
                            var verseNumbers = el.split(' ')[1].split(':')[1];//13 de 'Mt 13:24-26'
                            var verseNumber = null;
                            var to_verseNumber = null;
        
                            if(verseNumbers.includes('-')){
                                verseNumber = verseNumbers.split('-')[0];
                                to_verseNumber = verseNumbers.split('-')[1];
                            }else{
                                verseNumber = verseNumbers;
                            }
        
                            //console.log('bookShortName: '+bookShortName);//Mat. Gen.
                            //console.log('chapterNumber: '+chapterNumber);//empezando de 1
                            //console.log('verseNumber: '+verseNumber);//empezando de 1
                            //console.log('to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                            //console.log('---');                        
    
                            
                            //Saco ajustes del modulo de la traducción en json
                            url_bq = `modules/text/${Translation}/bibleqt.json`;
                            fetch(url_bq)
                            .then((response) => response.json())
                            .then((bq) => {
                                    
                                //console.log(' abajo bq:');
                                //console.log(bq);
    
                                //Asigno global vars para que sean vistos en fetch interior
                                window.dataBooksTsk = bq.Books;
    
                                window.bq_StrongNumbers = bq.StrongNumbers;
                                window.bq_EnglishPsalms = bq.EnglishPsalms;//PARA SABER SI MODIFICO chapterNumber y verseNumber
    
                                window.bq_Notes = bq.Notes;
                                window.bq_NoteSign = bq.NoteSign;
                                window.bq_StartNoteSign = bq.StartNoteSign;
                                window.bq_EndNoteSign = bq.EndNoteSign;
    
                                window.bq_Titles = bq.Titles;
                                window.bq_StartTitleSign = bq.StartTitleSign;
                                window.bq_EndTitleSign = bq.EndTitleSign;
    
                                window.bq_HTMLFilter = bq.HTMLFilter;
                                
                                //Достаю индех книги, зная его короткое значение.Напр.: 'Mt 13:24-26'
                                for(let i = 0, bookNumber = null; i < dataBooksTsk.length; i++) {
                                    const element = dataBooksTsk[i];
    
                                    for(let y = 0; y < element.ShortNames.length; y++) {
                                        const elem = element.ShortNames[y];
    
                                        if(bookShortName.toLowerCase() == elem.toLowerCase()){
                                            var n_book = element.BookNumber;
                                            var short_name = elem;//siempre el primer nombre del array
                        
                                            bookNumber = i;//numero de book empezando de 0. 0 => Génesis
                                            //console.log('bookNumber: '+bookNumber);                        
                                            //console.log('--- encontrado n_book: ' +n_book + ' --- short_name: ' +short_name);
    
                                            //Al encontrar el identificador del libro, miro los links. 
                                            //14=Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12
                                            //vers 14 tiene los links: Ge 49:8; Nu 1:7; Nu 2:3-9; Nu 26:19-27; Nu 7:12
    
                                            if(bq_EnglishPsalms == 'N'){
                                                //Modifico sólo los links si es para traducción rusa, ya que TSK viene con EnglishPlsalms = Y
                                                var new_result = convertLinkFromEspToRus(bookNumber, chapterNumber, verseNumber, to_verseNumber);
                                                                                            
                                                //asigno nuevo valor
                                                bookNumber = new_result[0];
                                                chapterNumber = new_result[1];
                                                verseNumber = new_result[2];
                                                to_verseNumber = new_result[3];
    
                                                //console.log('ahora bookNumber: '+bookNumber);//empezando de 1
                                                //console.log('ahora chapterNumber: '+chapterNumber);//empezando de 1
                                                //console.log('ahora verseNumber: '+verseNumber);//empezando de 1
                                                //console.log('ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                            }
                                                
                                            //url del libro necesario
                                            url = `modules/text/${Translation}/${bq.Books[bookNumber].PathName}`;//ej.: nrt_01.htm';     
                                            fetch(url)
                                            .then((response) => response.text())
                                            .then((bookModule) => {
                                                
                                                //console.log(' abajo bookModule:');//libro del modulo de la traducción de la Biblia// 01_Genesis.htm
                                                //console.log(bookModule);
    
                                                var nb = bookModule.split('<h4>');//делю файл на главы
                                                //console.log(nb);
                                                
                                                nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                                //console.log(nb);

                                                let vsego_stijov = (chapterNumber <= bq.Books[bookNumber].ChapterQty) 
                                                    ? nb[chapterNumber].split('<p>').length - 1 
                                                    : nb[bq.Books[bookNumber].ChapterQty].split('<p>').length - 1 ;
                                                //console.log(` `);
                                                //console.log(` tb_iter: ${tb_iter}`);        
                                                //console.log(`3. В главе ${element.ShortNames[0]}${chapterNumber}: vsego_stijov: ${vsego_stijov}`);
    
                                                
                                                
                                                //si el capitulo indicado existe en el modulo -> todo bien
                                                if(chapterNumber <= bq.Books[bookNumber].ChapterQty && verseNumber <= vsego_stijov){
                                                    //console.log(`3. (IF) el capitulo indicado '${chapterNumber}' SI esta en el libro ${element.ShortNames[0]}`);
                                                    //console.log(`3. element.ShortNames[0]: ${element.ShortNames[0]} --- elem: ${elem} --- chapterNumber <= bq.Books[bookNumber].ChapterQty `); 
                                                    //console.log(`3. si. existe '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);

                                                    var VerseTextFull = '';

                                                    // si el link es 'Gn.3:8-5' lo convierto en 'Gn.3:5-8'
                                                    if(to_verseNumber != null && parseInt(to_verseNumber) <= parseInt(verseNumber)){
                                                        let new_verseNumber = to_verseNumber;
                                                        let new_to_verseNumber = verseNumber;
                                                        verseNumber = new_verseNumber;
                                                        to_verseNumber = new_to_verseNumber;
                                                        //console.log(`3. Ahora verseNumber: ${verseNumber} --- to_verseNumber: ${to_verseNumber}`);
                                                    }
                            
                                                    //Если больше одного стиха нужно показать для Tsk. (1Кор.11:7-12), то...
                                                    if(to_verseNumber != null){                                                    
                                                        to_verseNumber = (parseInt(to_verseNumber) <= vsego_stijov) ? parseInt(to_verseNumber) : vsego_stijov ; 
    
                                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                            let stij = nb[chapterNumber].split('<p>')[i].split(' ');//делю на стихи и делю на слова по пробелам
                                                            let stijNumber = stij[0];
                                                            stij.shift();//elimino 1 index
                                                            let stijText = stij.join(' ');//junto
                                                            let fch = (i == verseNumber) ? ' fch' : '' ;//first-child
        
                                                            //siempre hay que aplicar htmlEntities() para que en tsk no se vean '<' y '>'
                                                            VerseTextFull += '<span class="stij_one'+ fch+ '">';
                                                            if(i != verseNumber){//si no es 1-er numero de versiculo, lo meto
                                                                VerseTextFull += '<span class="stij_numb">'+ stijNumber +'</span> ';
                                                            }
                                                            VerseTextFull += '<span class="stij_text">'+ stijText +'</span>';
                                                            VerseTextFull += '</span>';
        
                                                            //console.log(VerseTextFull);
                                                            
                                                            var VerseText = VerseTextFull;
                                                            //console.log(VerseText);
                                                        }//end for
        
                                                    }else{//если только 1 стих (1Кор.11:7), то...
                                                        VerseTextFull = nb[chapterNumber].split('<p>')[verseNumber];//делю только на стихи выбранную главу
                                                        //console.log(VerseTextFull);
                                                        
                                                        let stijText = VerseTextFull.split(' ');
                                                        stijText.shift();//elimino numero de versiculo
        
                                                        var VerseText = ' <span class="stij_text">' + stijText.join(' ') +'</span>';
                                                        //console.log(VerseText);
                                                    }
        
        
                                                    const p = document.createElement('p');
                                                    let idLink = Translation +'__'+bookNumber + '__' + chapterNumber + '__' + verseNumber;
                                                    if(to_verseNumber != null) idLink += '-' + to_verseNumber;
                                                    p.id = idLink;
                                                    p.className = 'tsk tsk_link';
                                                    p.setAttribute('data-verse',verseNumber);
        
                                                    const span_num_tsk = document.createElement('span');
                                                    span_num_tsk.className = 'sp_f';
                                                    span_num_tsk.innerText = tb_iter + 1;
        
                                                    p.append(span_num_tsk);
                                    
                                                    const a = document.createElement('a');
                                                    //a.id = 'goto_' + idLink;
                                                    a.href = '#';
                                                    a.classList.add = 'blink';
        
                                                    let refLink = dataBooksTsk[bookNumber].ShortNames[0] + '' + chapterNumber + ':' + verseNumber;//ej.: 1Кор.11:7
                                                    if(to_verseNumber != null) refLink += '-' + to_verseNumber;//ej.: 1Кор.11:7-12
                                                    //console.log('===> refLink: '+refLink);
        
                                                    //-----------------------------------------------------------------//
                                                    //Evento on click. NO BORRAR !!! añado listener después de for!
                                                    //a.setAttribute('onclick',`goToLink('${Translation}', '${refLink}')`);//solo así funciona
                                                    //-----------------------------------------------------------------//
                                                    
                                                    a.innerHTML = refLink;
                                                    p.append(a);
                                                    p.append(' ');
        
        
                                                    const span_vt = document.createElement('span');
                                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
        
                                                    
                                                    //Номера Стронга в стихах (RST+)
                                                    if(bq_StrongNumbers == "Y"){
                                                        let t = VerseText;
                                                        var arr_t = t.split(' ');
        
                                                        arr_t.forEach((el,i) => {    
                                                            
                                                            //element of string is Strong Number
                                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                const span_strong = document.createElement('span');
                                                                span_strong.className = 'strong'; 
                                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
        
                                                                //si ultimo carácter es string
                                                                if(last_char != '' && isNaN(last_char)){
                                                                    let el_number = el.substring(0,el.length-1);
                                                                    let el_string = last_char;
                                                                    span_strong.innerHTML = el_number;
                                                                    p.append(span_strong);
                                                                    p.append(el_string);
                                                                }else{//es number
                                                                    span_strong.innerHTML = el;
                                                                    p.append(span_strong);
                                                                }
                                                            }else{//is word
                                                                p.append(' ');
                                                                p.append(el);
                                                            }
                                                        });
                                                        p.innerHTML.trim();
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
        
                                                    }                                            
                                                    
                                                    //Примечания редактора в стихах (RSTi2)
                                                    if(bq_Notes == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_NoteSign)){// '*'
                                                            let arr_t0 = t.split(bq_NoteSign);
                                                            let before_Note = arr_t0[0];
        
                                                            if(t.includes(bq_StartNoteSign) && t.includes(bq_EndNoteSign)){
                                                                let arr_t1 = t.split(bq_StartNoteSign);//'[('
                                                                let arr_t2 = arr_t1[1].split(bq_EndNoteSign);//')]'
                                                                let text_Note = arr_t2[0];
                                                                let after_Note = arr_t2[1];
        
                                                                const span_t = document.createElement('span');
                                                                span_t.className = 'tooltip';
                                                                span_t.setAttribute('data-tooltip',text_Note);
                                                                span_t.innerHTML = bq.NoteSign;
        
                                                                span_t.addEventListener('mouseenter', function(){
                                                                    showTooltip(this);
                                                                });
                                                                span_t.addEventListener('mouseleave', function(){
                                                                    hideTooltip(this);
                                                                });
                                                                
                                                                span_vt.append(before_Note);
                                                                span_vt.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
                                                                span_vt.append(span_t);
                                                                const span_vt_despues = document.createElement('span');
                                                                span_vt_despues.className = 'vt';
                                                                span_vt_despues.append(after_Note);
                                                                span_vt_despues.innerHTML = (bq_HTMLFilter == 'Y') ? htmlEntities(span_vt_despues.innerHTML) : span_vt_despues.innerHTML ;
        
                                                                p.append(span_vt);
                                                                p.append(span_vt_despues);
                                                            }
                                                        }else{
                                                            //span_vt.append(VerseText);//se ven '<'
                                                            span_vt.innerHTML = VerseText;// se ve OK
                                                            p.append(span_vt);
        
                                                            if(bq_HTMLFilter == 'Y'){
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                    }
                                                    
                                                    //Оглавления в стихах (NRT)
                                                    if(bq_Titles == 'Y'){
                                                        let t = VerseText;
        
                                                        if(t.includes(bq_StartTitleSign) && t.includes(bq_EndTitleSign)){
                                                            let arr_t1 = t.split(bq_StartTitleSign);//'[('
                                                            let before_Title = arr_t1[0];
                                                            let arr_t2 = arr_t1[1].split(bq_EndTitleSign);//')]'
                                                            let text_Title = arr_t2[0];
                                                            let after_Title = arr_t2[1];
        
                                                            const span_title = document.createElement('span');
                                                            span_title.className = 'verse_title';
                                                            span_title.innerHTML = text_Title;
        
                                                            p.append(before_Title);
                                                            p.append(span_title);
                                                            p.append(after_Title);
                                                        }else{
                                                            p.append(VerseText);
                                                        }
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    
                                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                    if(bq_StrongNumbers == "N" && bq_Notes == 'N' && bq_Titles == 'N'){
                                                        span_vt.innerHTML = VerseText;
                                                        p.append(span_vt);
        
                                                        if(bq_HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
        
                                                    arr_tsk_p[tb_iter] = p;
                                                    //console.log(`--- tb_iter: ${tb_iter}`);


                                                }else{//no esta. hay error en el link. Ej.: Juda 4:16 (en Juda hay solo 1 capitulo)
                                                    //console.log(`3 (ELSE) --- el capitulo indicado '${chapterNumber}' NO esta en el libro ${element.ShortNames[0]}`);
                                                    //console.log(`3. --- NO EXISTE '${element.ShortNames[0]} ${chapterNumber}:${verseNumber}'`);
                                                    arr_tsk_p[tb_iter] = '';//como el link es erroneo , añado '' luego lo quito
                                                    //console.log(`--- tb_iter: ${tb_iter}`);
                                                }                                               

    
                                                //si es ultimo elemento del array...
                                                if(countElementsInArray(arr_tsk_p) == tb_arr_links.length){
                                                    //console.log('--- llamo buildVersesTsk() ---');
                                                    buildVersesTsk(arr_tsk_p, Translation);
                                                }
    
                                            })
                                            .catch(error => { 
                                                // Código a realizar cuando se rechaza la promesa
                                                console.log('4. error promesa: '+error);
                                            });
                                            break;
                                        }
                                    }
                                    if(bookNumber != null){
                                        break;
                                    }                                    
                                }//end for inner
                            })
                            .catch(error => { 
                                // Código a realizar cuando se rechaza la promesa
                                console.log('3. error promesa: '+error);
                            });
        
                        });//fin forEach de tb_arr_links
    
                    }else{//no hay links
                        tsk_body.innerHTML = '';//reset
                        const p = document.createElement('p');
                        p.className = 'tsk tsk_nolink';
                        p.innerHTML = '<span class="prim_tsk"> Para el versiculo indicado no existen pasajes paralelos</span>';
                        //console.log(p);
                        tsk_body.append(p);
                    }
    
                    //Abro Sidebar pata mostrar TSK
                    showTab(btn_tsk,'tsk');//Se abre tab TSK
                    if(window.innerWidth < pantallaTabletMinPx){//si es mobile
                        openSidebar(document.querySelector('.btnMenu'));//simulo click sobre el boton hamburguesa        
                    }else{//si es desktop o tablet
                        //comprebo si está oculto sidebar
                        if(sidebar.style.display == 'none'){
                            btn_hideShowSidebar.click();//mostrar sidebar con tsk
                        }
                    }
    
                })
                .catch(error => { 
                    // Código a realizar cuando se rechaza la promesa
                    console.log('2. error promesa: '+error);
                });
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            console.log('1. error promesa: '+error);
        });


    }//end else de modo old

}

//actual
function showChapterText3(Translation, divId, book, chapter, verseNumber = null, to_verseNumber = null, verseView = null){
    let book_i = (book > 0) ? book - 1 : 0 ;//index of book 1 is 0
    let chapter_i = (chapter > 0) ? chapter - 1 : 0 ;//index of chapter 1 is 0
    //var divTrans = document.querySelector(divId+' .colsHead .colsHeadInner div');//ej: RST+//antes
    var divTrans = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransDesk = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransMob = document.querySelector(divId+' .colsHead .colsHeadInner .partMob .mob_trans');
    var divShow = document.querySelector(divId+' .colsInner');//donde se ve el texto de la Biblia
    divShow.innerHTML = '';

    var btnStrongIsActive = false;
    if(btnStrong.classList.contains('btn_active')){
        btnStrongIsActive = true;
    }

    window.base_ep = div_trans1.dataset.base_ep;
    //console.log('base_ep: '+base_ep);

    window.arr_data_head = [];//incluye h2 y h4
    window.arr_data_body = [];//incluye p
    window.arr_data_all = [];//incluye todo: h2 y h4 y p
        
    //saco ajustes de este modulo en json
    url_bq = `modules/text/${Translation}/bibleqt.json`;

    if(Translation != null){

        fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {
            //console.log(' abajo bq:');
            //console.log(bq);

            //window.bq = bq;
            if(divTrans != null){
                // divTrans.innerHTML = bq.BibleShortName;
                divTransDesk.innerHTML = bq.BibleShortName;
                divTransMob.innerHTML = bq.BibleShortName;
            }
            
            //si el id de book está entre numero de books del modulo, lo muestro
            if(parseInt(book) < bq.BookQty){//0-65 < 66
                
                //url del libro necesario
                url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm';  

                fetch(url)
                .then((response) => response.text())
                .then((bookModule) => {
                    
                    //console.log(bookModule);
                    divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!

                    var nb = bookModule.split('<h4>');//делю файл на главы
                    //console.log(nb);
                    
                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                    //console.log(nb);

                    //Book
                    if(bookModule.includes('<h2>')){
                        var arr_h2 = bookModule.split('<h2>');

                        if(arr_h2[1].includes('</h2>')){
                            var arr_h2_text = arr_h2[1].split('</h2>');
                            var BookName = arr_h2_text[0];
                        }else{
                            var BookName = arr_h2[1];
                        }
                        BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                        //console.log('BookName: '+BookName); 
                        
                        //Book
                        var h2 = document.createElement('h2');
                        h2.append(BookName);

                        arr_data_head.push(h2);
                        //console.log(h2);

                        if(bq.HTMLFilter == 'Y'){
                            h2.innerHTML = htmlEntities(h2.innerHTML)
                        }
                    }

                    //si existe el capitulo
                    if(typeof nb[chapter] !== 'undefined'){
                        var ChapterId = chapter;

                        var nb_chapter_verses = nb[chapter].split('<p>');
                        //console.log(nb_chapter_verses);

                        var only_verses_length = nb_chapter_verses.length - 1;
                        //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                        // console.log('only_ divId: '+divId);

                        if(divId == '#col1'){
                            window.col1_p_length = only_verses_length;
                            //console.log('only_ col1_p_length: '+window.col1_p_length);
                        }else{
                            //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                        }



                        //Chapter, Verse
                        nb_chapter_verses.forEach( (el,i) => {
                            //console.log(el);
            
                            //Chapter
                            if(i == 0){
                                //console.log('es Chapter: '+el);

                                if(el.includes('</h4>')){
                                    var arr_h4_text = el.split('</h4>');
                                    var ChapterText = arr_h4_text[0];
                                }else{
                                    var ChapterText = el;
                                }
                                //console.log('ChapterText: '+ChapterText);

                                if(ChapterText == ''){
                                    ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                }

                                //Chapter
                                var h4 = document.createElement('h4');
                                h4.append(ChapterText);

                                arr_data_head.push(h4);
                                //console.log(h4);

                                //divShow.append(h4);

                                if(bq.HTMLFilter == 'Y'){
                                    h4.innerHTML = htmlEntities(h4.innerHTML);
                                }
                            }
                            else{//Verse
                                //console.log('es Verse: '+el);
            
                                if(el.includes('</p>')){
                                    var arr_p_text = el.split('</p>');
                                    var p_Text = arr_p_text[0];
                                }else{
                                    var p_Text = el;
                                }
                                //console.log('p_Text: '+p_Text); 
            
                                var arr_p = p_Text.split(' ');
                                var VerseId = arr_p[0];
                                //console.log('VerseId: '+VerseId);
            
                                var VerseText = '';
                                for(let index = 1; index < arr_p.length; index++){
                                    VerseText += arr_p[index] + ' ';
                                }
                                //console.log('VerseText: '+VerseText);
            
                                var p = document.createElement('p');
                                p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                p.setAttribute('data-verse',VerseId);
                
                                var a = document.createElement('a');
                                a.href = '#';
                                a.classList.add = 'blink';
                                a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                p.append(a);
                                p.append(' '); 

                                const span_vt = document.createElement('span');
                                span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                //Номера Стронга в стихах (RST+)
                                if(bq.StrongNumbers == "Y"){
                                    let t = VerseText;
                                    var arr_t = t.split(' ');

                                    arr_t.forEach((el,i) => {    
                                        
                                        //element of string is Strong Number
                                        if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                            const span_strong = document.createElement('span');
                                            if(btnStrongIsActive){
                                                span_strong.className = 'strong show strongActive'; 
                                            }else{
                                                span_strong.className = 'strong'; 
                                            }
                                            let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                            //si ultimo carácter es string
                                            if(last_char != '' && isNaN(last_char)){
                                                let el_number = el.substring(0,el.length-1);
                                                let el_string = last_char;
                                                span_strong.innerHTML = el_number;
                                                p.append(span_strong);
                                                p.append(el_string);
                                            }else{//es number
                                                span_strong.innerHTML = el;
                                                p.append(span_strong);
                                            }

                                        }else{//is word
                                            p.append(' ');
                                            if(btnStrongIsActive){
                                                if(el.includes('<S>')){
                                                    el = el.replace('<S>','<S class="show strongActive">');
                                                }
                                            }
                                            p.append(el);
                                        }
                                    });
                                    p.innerHTML.trim();

                                    //console.log('antes: ' + p.innerHTML);
                                    if(bq.HTMLFilter == 'Y'){
                                        p.innerHTML = htmlEntities(p.innerHTML);
                                    }
                                    //console.log('despues: '+p.innerHTML);

                                    if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                        p.querySelectorAll('.strongActive').forEach((el)=>{
                                            el.addEventListener('click', ()=>{
                                                //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                //console.log('1. book: '+book);
                                                //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                    getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                }else{//rstStrong
                                                    lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                    getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                }
                                            });
                                        }); 
                                    }

                                    arr_data_body.push(p);
                                    //console.log(p);
                                }


                                //Примечания редактора в стихах (RSTi2)
                                if(bq.Notes == 'Y'){
                                    let t = VerseText;

                                    if(t.includes(bq.NoteSign)){// '*'
                                        let arr_t0 = t.split(bq.NoteSign);
                                        let before_Note = arr_t0[0];

                                        if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                            let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                            let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                            let text_Note = arr_t2[0];
                                            let after_Note = arr_t2[1];

                                            const span_t = document.createElement('span');
                                            span_t.className = 'tooltip';
                                            span_t.setAttribute('data-tooltip',text_Note);
                                            span_t.innerHTML = bq.NoteSign;

                                            span_t.addEventListener('mouseenter', function(){
                                                showTooltip(this);
                                            });
                                            span_t.addEventListener('mouseleave', function(){
                                                hideTooltip(this);
                                            });
                                            /*
                                            //antes
                                            p.append(before_Note);
                                            p.append(span_t);
                                            p.append(after_Note);
                                            */

                                            before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                            span_vt.append(before_Note);
                                            span_vt.append(span_t);
                                            after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                            span_vt.append(after_Note);
                                            //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                            p.append(span_vt);//antes
                                        }
                                    }else{
                                        //p.append(VerseText);//antes
                                        span_vt.append(VerseText);
                                        p.append(span_vt);

                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }
                                    //p.append(span_vt);//antes
                                    //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                    arr_data_body.push(p);
                                    //console.log(p);
                                }


                                //Оглавления в стихах (NRT)
                                if(bq.Titles == 'Y'){
                                    let t = VerseText;

                                    if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                        let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                        let before_Title = arr_t1[0];
                                        let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                        let text_Title = arr_t2[0];
                                        let after_Title = arr_t2[1];

                                        const span_title = document.createElement('span');
                                        span_title.className = 'verse_title';
                                        span_title.innerHTML = text_Title;

                                        p.append(before_Title);
                                        p.append(span_title);
                                        p.append(after_Title);
                                    }else{
                                        p.append(VerseText);
                                    }

                                    arr_data_body.push(p);
                                    //console.log(p);

                                    if(bq.HTMLFilter == 'Y'){
                                        p.innerHTML = htmlEntities(p.innerHTML);
                                    }
                                }

                                //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                    //p.append(VerseText);//antes
                                    span_vt.append(VerseText);
                                    p.append(span_vt);

                                    arr_data_body.push(p);
                                    //console.log(p);
                                    
                                    if(bq.HTMLFilter == 'Y'){
                                        p.innerHTML = htmlEntities(p.innerHTML);
                                    }
                                }        
                                
                            }
            
                        });
                        
                        
                        //Posle forEach...
                        //=====================================================//
                        // 1. inicio - Numeración base Española - y col's Rusa
                        //=====================================================//
                        if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                            //console.log('Numeración base es Española - y cols es Rusa');
                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                            var arr_vstavka = [];
                            var vstavka2 = [];
                            
                            //Miro la traducción con EnglishPsalms
                            switch (parseInt(book)) {

                                case 3: //Числа
                                        if(chapter == 12){//Числа 12:16 => Num. 13:1
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 13){//13:1-33 => 13: +1
                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                        }
                                    break;

                                case 5: //Иисус Навин
                                        if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                            addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break; 
                                    
                                case 8: //1Samuel (1Царств) 
                                        if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                            //1 verse contiene 2 en ruso
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                            let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                            arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 23){//23:29 => 24:1
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                            addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 24){//24:1-22	=> 24: +1
                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                        }
                                    break; 
                                
                                case 17: //Job 
                                        if(chapter == 39){
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                            addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                        }
                                        if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                            addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break; 

                                case 18: //Psalmos 
                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                        }
                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 10){//10:2-18 => 9: +21
                                            addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                        //-1 : Х
                                        if(
                                            (chapter == 11) || 
                                            (chapter >= 14 && chapter <= 17) || 
                                            (chapter >= 23 && chapter <= 29) || 
                                            (chapter >= 32 && chapter <= 33) || 
                                            (chapter == 35) || 
                                            (chapter == 37) || 
                                            (chapter == 43) || 
                                            (chapter == 50) || 
                                            (chapter == 66) || 
                                            (chapter >= 71 && chapter <= 74) || 
                                            (chapter >= 78 && chapter <= 79) || 
                                            (chapter == 82) || 
                                            (chapter == 86) || 
                                            (chapter == 87) || 
                                            (chapter == 91) || 
                                            (chapter >= 93 && chapter <= 101) || 
                                            (chapter >= 103 && chapter <= 107) || 
                                            (chapter >= 109 && chapter <= 114) || 
                                            (chapter >= 117 && chapter <= 146)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                        //-1 : +1
                                        if(
                                            (chapter == 12) || 
                                            (chapter >= 18 && chapter <= 22) || 
                                            (chapter >= 30 && chapter <= 31) || 
                                            (chapter == 34) || 
                                            (chapter == 36) || 
                                            (chapter >= 38 && chapter <= 42) || 
                                            (chapter >= 44 && chapter <= 49) || 
                                            (chapter == 53) || 
                                            (chapter >= 55 && chapter <= 59) || 
                                            (chapter >= 61 && chapter <= 65) || 
                                            (chapter >= 67 && chapter <= 70) || 
                                            (chapter >= 75 && chapter <= 77) || 
                                            (chapter >= 80 && chapter <= 81) || 
                                            (chapter >= 83 && chapter <= 85) || 
                                            (chapter >= 88 && chapter < 90) || 
                                            (chapter == 92) || 
                                            (chapter == 102) || 
                                            (chapter == 108)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //2en1
                                        if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                            arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                            arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                        }
                                        //Formula
                                        //-1 : +2 *
                                        if(
                                            (chapter >= 51 && chapter <= 52) ||
                                            (chapter == 54) || 
                                            (chapter == 60)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //2en1
                                        if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                            let p_vacio = document.createElement('p');
                                            p_vacio.className = 'prim';
                                            p_vacio.innerHTML = 'смотри стих выше...';
                                            arr_vstavka.splice(5,0,p_vacio);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //-2: +8
                                        if(chapter == 115){//115:1-18 => 113: +8
                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //-2: X
                                        if(chapter == 116){//116:1-9 => 114: Х
                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                            // Sal.116:1-9 => Пс. 114:1-9
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                            // Sal.116:10-19 => Пс. 115:1-10
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //-1: X (especial)
                                        if(chapter == 147){//147:1-11 => 146:1-11
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            // Sal.147:1-11 => Пс.146:1-11
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                            // Sal.147:12-20 => Пс. 147:1-9
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 19: //Притчи
                                        if(chapter == 4){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            arr_data_body = [].concat(arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;
                            
                                case 21: //Cantares - Песня песней
                                        if(chapter == 1){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            let p_vacio = document.createElement('p');
                                            p_vacio.className = 'prim';
                                            p_vacio.innerHTML = 'заглавие...';
                                            arr_vstavka.splice(0,0,p_vacio);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 6){//06:13 =>	07:1
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                            arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 22: //Isaías - Исаия
                                        if(chapter == 3){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            let p_vacio = document.createElement('p');
                                            p_vacio.className = 'prim';
                                            p_vacio.innerHTML = 'смотри стих выше...';
                                            arr_vstavka.splice(19,0,p_vacio);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 26: //Daniel - Даниил
                                        if(chapter == 3){//3:1-30 => 3:1-30
                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 27: //Oseas - Осия
                                        if(chapter == 13){//13:16 => 14:1
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 14){//14:1-9 => 14:2-10
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 31: //Jonas - Иона
                                        if(chapter == 1){//1:17 => 2:1
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 2){//2:1-10 => 2:2-11
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 44: //Romanos - Римлянам
                                        //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                        if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 46: //2Corintios - 2-Коринфянам
                                        //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                            let p_vacio = document.createElement('p');
                                            p_vacio.className = 'prim';
                                            p_vacio.innerHTML = 'смотри стих выше...';
                                            arr_vstavka.splice(12,0,p_vacio);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;
                                
                                default:
                                    //console.log('default en switch');
                                    break;
                            }//fin switch
                        }
                        //=====================================================//
                        // fin - Numeración base Española - y col's Rusa
                        //=====================================================//
                        
                        
                        //=====================================================//
                        // 2. inicio - Numeración base Rusa - y col's Española
                        //=====================================================//
                        if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                            //console.log('Numeración base Rusa - y cols Española');
                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                            //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                            var arr_vstavka = [];
                            var vstavka2 = [];
                            
                            //Miro la traducción con EnglishPsalms
                            switch (parseInt(book)) {

                                case 3: //Числа
                                        if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 13){//Числа 13:1 => Num.12:16 
                                            addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 5: //Иисус Навин
                                        if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break; 
                                    
                                case 8: //1Samuel (1Царств) 
                                        if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                            //1 verse contiene 2 en ruso
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                            arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 23){//
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                            addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break; 
                                
                                case 17: //Job 
                                        if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 40){//40:1-19 => 40:6-24 
                                            //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                            //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                            //console.log(vstavka2);
                                            arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                            //console.log(arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 41){//40:1-26 => 41:9-34
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                            arr_data_body = [].concat(arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break; 

                                case 18: //Psalmos 
                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                            addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                        //+1 : Х
                                        if(
                                            (chapter == 10) || 
                                            (chapter >= 13 && chapter <= 16) || 
                                            (chapter >= 22 && chapter <= 28) || 
                                            (chapter >= 31 && chapter <= 32) || 
                                            (chapter == 34) || 
                                            (chapter == 36) || 
                                            (chapter == 42) || 
                                            (chapter == 49) || 
                                            (chapter == 65) || 
                                            (chapter >= 70 && chapter <= 73) || 
                                            (chapter >= 77 && chapter <= 78) || 
                                            (chapter == 81) || 
                                            (chapter == 85) || 
                                            (chapter == 86) || 
                                            (chapter == 90) || 
                                            (chapter >= 92 && chapter <= 100) || 
                                            (chapter >= 102 && chapter <= 106) || 
                                            (chapter >= 108 && chapter < 113) || 
                                            (chapter >= 116 && chapter <= 138) ||
                                            (chapter >= 140 && chapter <= 145)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                        //+1 : -1
                                        if(
                                            (chapter == 11) || 
                                            (chapter == 12) || 
                                            (chapter >= 17 && chapter <= 21) ||
                                            (chapter >= 29 && chapter <= 30) || 
                                            (chapter == 33) || 
                                            (chapter == 35) || 
                                            (chapter >= 37 && chapter <= 41) || 
                                            (chapter >= 43 && chapter <= 48) || 
                                            (chapter == 52) || 
                                            (chapter >= 54 && chapter <= 58) || 
                                            (chapter >= 60 && chapter <= 64) || 
                                            (chapter >= 66 && chapter <= 69) || 
                                            (chapter >= 74 && chapter <= 76) || 
                                            (chapter >= 79 && chapter <= 80) || 
                                            (chapter >= 82 && chapter <= 84) || 
                                            (chapter >= 87 && chapter < 89) || 
                                            (chapter == 91) || 
                                            (chapter == 101) || 
                                            (chapter == 107) ||
                                            (chapter == 139)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                        if(
                                            (chapter >= 50 && chapter <= 51) ||
                                            (chapter == 53) || 
                                            (chapter == 59)
                                        ){
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                            arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //2en1
                                        if(chapter == 89){//89:6 => 90:5-6 
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                            var new_arr = [];
                                            arr_vstavka.map((el,i,arr) => {
                                                if(i == 4){
                                                    const p_new = document.createElement('p');
                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                    new_arr.push(p_new); 
                                                }else{
                                                    new_arr.push(el);
                                                }
                                            });
                                            new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                            //console.log(new_arr);
                                            arr_vstavka = new_arr;
                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //+2: -8
                                        if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                            addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula
                                        //-2: X
                                        if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                            addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula (especial)
                                        if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        //Formula (especial)
                                        if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;                                 

                                case 19: //Притчи
                                        if(chapter == 4){
                                            //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                            arr_data_body = [].concat(arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;
                                
                                case 21: //Cantares - Песня песней
                                        if(chapter == 1){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            //console.log(arr_vstavka);
                                            var new_arr = [];
                                            arr_vstavka.map((el,i,arr) => {
                                                if(i == 0){
                                                    const p_new = document.createElement('p');
                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                    new_arr.push(p_new); 
                                                }else{
                                                    new_arr.push(el);
                                                }
                                            });
                                            new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                            //console.log(new_arr);
                                            arr_vstavka = new_arr;
                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                            arr_data_body = [].concat(arr_vstavka);//ok
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 6){//06:1-12 => 06:1-12	
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 7){//07:1 => 06:13	
                                            addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 22: //Isaías - Исаия
                                        if(chapter == 3){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                            var new_arr = [];
                                            arr_vstavka.map((el,i,arr) => {
                                                if(i == 18){
                                                    const p_new = document.createElement('p');
                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                    new_arr.push(p_new); 
                                                }else{
                                                    new_arr.push(el);
                                                }
                                            });
                                            new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                            //console.log(new_arr);
                                            arr_vstavka = new_arr;
                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                            arr_data_body = [].concat(arr_vstavka);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 26: //Daniel - Даниил
                                        if(chapter == 3){//3:1-30 => 3:1-30
                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                            addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 4){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 27: //Oseas - Осия
                                        if(chapter == 14){//14:1 => 13:16 
                                            addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 31: //Jonas - Иона
                                        if(chapter == 1){
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                        if(chapter == 2){// 2:1 => 1:17
                                            addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 44: //Romanos - Римлянам
                                        if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                            addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                case 46: //2Corintios - 2-Коринфянам
                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                            var new_arr = [];
                                            arr_vstavka.map((el,i,arr) => {
                                                if(i == 11){
                                                    const p_new = document.createElement('p');
                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                    new_arr.push(p_new); 
                                                }else{
                                                    new_arr.push(el);
                                                }
                                            });
                                            new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                            //console.log(new_arr);
                                            arr_vstavka = new_arr;
                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                            arr_data_body.splice(col1_p_length);
                                        }
                                    break;

                                default:
                                    //console.log('default en switch');
                                    break;
                            }//fin switch
                        }
                        //=====================================================//
                        // inicio - Numeración base Rusa - y col's Española
                        //=====================================================//
                        

                        //console.log('arr_data_head');
                        //console.log(arr_data_head);

                        //console.log('arr_data_body');
                        //console.log(arr_data_body);

                        arr_data_body.forEach((el,i)=>{//cambio data-verse
                            el.setAttribute('data-verse', i + 1 );
                        });

                        arr_data_all = arr_data_head.concat(arr_data_body);

                        arr_data_all.forEach((el,i)=>{
                            //console.log(el);
                            divShow.append(el);
                        });
                        arr_data_head = [];
                        arr_data_body = [];
                        arr_data_all = [];
                        

                        window.iter_i++;
                        if(window.iter_i < window.arr_trans.length){
                            //console.log('iter_i: '+iter_i);
                            //showChapterText3(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                            showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                        }

                    }else{
                        //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                        divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                    }
                })
                .then(() => {
                    mySizeWindow();
                    mySizeVerse();
                    /*
                    //si es ultimo elemento, añado padding-bottom
                    let p_last = divShow.querySelector('p:last-child');
                    let mb_h = divShow.offsetHeight - p_last.offsetHeight;
                    console.log('mb_h: '+mb_h)
                    p_last.style.marginBottom = mb_h + 'px';
                    p_last.style.background = 'lightgreen';
                    */
                })
                .then(() => {
                    
                    if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                        //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                        //styles of other verses
                        if(to_verseNumber !== null && to_verseNumber != ""){
                            //console.log('hay to_verseNumber');
                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                    Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                        if(i == parseInt(verseNumber)) {
                                            el.classList.add('active_first');                
                                        }else if(i == parseInt(to_verseNumber)) {
                                            el.classList.add('active_last');                
                                        }else{
                                            el.classList.add('active_middle');                
                                        }
                                    });
                                }
                            } 
                        }else{
                            //console.log('no hay to_verseNumber. reviso verseNumber');
                            //only one verse of each translation
                            if(verseNumber !== null && verseNumber != ""){
                                document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                    el.classList.add('active_one');
                                });
                            }
                        }                
                    
                        //scroll to verse o verses activos
                        //scrollToVerse(verseNumber, to_verseNumber);
                    }

                    if(verseView !== null && verseView != ""){
                        //console.log('hay verseView');

                        //styles of other verses of col1
                        if(to_verseNumber !== null && to_verseNumber != ""){
                            //console.log('hay to_verseNumber');
                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                    Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                        if(i == parseInt(verseNumber)) {
                                            el.classList.add('active_first');                
                                        }else if(i == parseInt(to_verseNumber)) {
                                            el.classList.add('active_last');                
                                        }else{
                                            el.classList.add('active_middle');                
                                        }
                                    });
                                }
                            } 
                        }else{
                            //console.log('no hay to_verseNumber. reviso verseNumber');
                            //only one verse of each translation
                            if(verseNumber !== null && verseNumber != ""){
                                document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                    el.classList.add('active_one');
                                });
                            }
                        }                
                    }
                })
                .then(() => {
                    //si hay versiculo marcado con amarillo...
                    if(verseNumber !== null &&  verseNumber != "" ){
                        //scroll to verse o verses activos
                        scrollToVerse(verseNumber, to_verseNumber);

                        //y si con el versiculo marcado existe verse de la vista...
                        if(verseView !== null && verseView != ""){
                            //scroll to verseView
                            scrollToVerseView(verseView);
                        }
                    }else{
                        //console.log('no hay verseNumber');
                        if(verseView !== null && verseView != ""){
                            //scroll to verseView
                            scrollToVerseView(verseView);
                        }
                    }
                    
                })
                .then(() => {
                    mySizeWindow();
                    mySizeVerse();
                    addListenerToPA();//listen links p > a
                });

            }else{//si no está el id de book en el modulo...
                document.querySelectorAll('.colsInner').forEach(el=>{
                    if(el.childElementCount == 0 || el.textContent == ''){
                        var p = document.createElement('p');
                        p.className = 'prim';
                        p.innerHTML = `1. En este módulo no existe el libro indicado.`;
                        el.append(p);
                        //alert(' vacio');
                    }else{
                        //alert(' no vacio');
                    }
                });
            }            
        });

    }//end --- typeof Translation
    else{
        console.log('la traducción no está seleccionada. Translation: '+Translation); 
        //alert(`La traducción no está seleccionada. Selecciónala presionando sobre el símbolo '+' o nombre corto de la traducción.`);       
    }


}

function clearAllDivShow(){
    //console.log('===function clearAllDivShow()===');
    Array.from(wrCols.children).forEach((el)=>{
        el.querySelector('.colsInner').innerHTML = 'cargando...';
    });
}

function showTextInAllDivShow(text){
    //console.log('===function showTextInAllDivShow()===');
    //console.log('text: ', text);
    Array.from(wrCols.children).forEach((el)=>{
        el.querySelector('.colsInner').innerHTML = text;
    });
}


function old_showChapterText4(Translation, divId, book, chapter, verseNumber = null, to_verseNumber = null, verseView = null){
    console.log('=== function old_showChapterText4() === divId: ' + divId);
    
    var divTrans = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransDesk = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransMob = document.querySelector(divId+' .colsHead .colsHeadInner .partMob .mob_trans');
    var divShow = document.querySelector(divId+' .colsInner');//donde se ve el texto de la Biblia
    //divShow.innerHTML = '';//antes
    clearAllDivShow();
    console.log('1. lo reseteo en buildDivShow');

    var btnStrongIsActive = false;
    if(btnStrong.classList.contains('btn_active')){
        btnStrongIsActive = true;
    }

    window.base_ep = div_trans1.dataset.base_ep;
    //console.log('base_ep: '+base_ep);

    window.arr_data_head = [];//incluye h2 y h4
    window.arr_data_body = [];//incluye p
    window.arr_data_all = [];//incluye todo: h2 y h4 y p
        
    
    if(Translation != null){
                
        //var objTrans = arrFavTransObj.find(v => v.Translation === Translation);
        console.log(' comento objTrans para isTestPhp');

        
        //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
        if(typeof objTrans != 'undefined' && objTrans != null && objTrans != '' ){
            //console.log('objTrans está creado. abajo objTrans: ');
            //console.log(objTrans);


            //saco ajustes de este modulo en json               
            var bq = objTrans;
            //console.log(' abajo bq:');
            //console.log(bq);

            //window.bq = bq;
            if(divTrans != null){
                // divTrans.innerHTML = bq.BibleShortName;
                divTransDesk.innerHTML = (typeof bq != 'undefined') ? bq.BibleShortName : '---';
                divTransMob.innerHTML = (typeof bq != 'undefined') ? bq.BibleShortName : '---';
            }
            
            //si el id de book está entre numero de books del modulo, lo muestro
            if(typeof bq.Books[book] != 'undefined'){//0-65 < 66
                
                //url del libro necesario
                url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm';  

                //si no existe objeto lo creo
                if(typeof obj_bible_files[Translation] == 'undefined'){
                    obj_bible_files[Translation] = {};
                    obj_bible_files[Translation].Books = [];
                }

                //si existe objeto con Translation. Saco datos del objeto
                if(typeof obj_bible_files[Translation] != 'undefined'){
                    if(typeof obj_bible_files[Translation].Books != 'undefined'){
                        if(typeof obj_bible_files[Translation].Books[book] != 'undefined'){

                            if(obj_bible_files[Translation].Books[book].fileName == bq.Books[book].PathName && obj_bible_files[Translation].Books[book].fileContent != ''){
                                //console.log(`--- --- starting from myPromise --- divId: ${divId}  --- Translation: ${Translation} `);
                                
                                // Registra el tiempo de inicio
                                const tiempoInicio = new Date().getTime();
                                //console.log('obj_bible_files --- tiempoInicio: '+tiempoInicio);

                                var myPromise = new Promise(function(resolve, reject){
                                    resolve('ok');
                                });

                                myPromise
                                .then((data) => {//data = ok
                                    //console.log(' --- if: ');

                                    if(data == 'ok'){
                                        var bookModule = obj_bible_files[Translation].Books[book].fileContent;
                                    }            
                                    
                                    //console.log(bookModule);
                                    divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!
            
                                    var nb = bookModule.split('<h4>');//делю файл на главы
                                    //console.log(nb);
                                    
                                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                    //console.log(nb);
            
                                    //Book
                                    if(bookModule.includes('<h2>')){
                                        var arr_h2 = bookModule.split('<h2>');
            
                                        if(arr_h2[1].includes('</h2>')){
                                            var arr_h2_text = arr_h2[1].split('</h2>');
                                            var BookName = arr_h2_text[0];
                                        }else{
                                            var BookName = arr_h2[1];
                                        }
                                        BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                                        //console.log('BookName: '+BookName); 
                                        
                                        //Book
                                        var h2 = document.createElement('h2');
                                        h2.append(BookName);
            
                                        arr_data_head.push(h2);
                                        //console.log(h2);
            
                                        if(bq.HTMLFilter == 'Y'){
                                            h2.innerHTML = htmlEntities(h2.innerHTML)
                                        }
                                    }
            
                                    //si existe el capitulo
                                    if(typeof nb[chapter] !== 'undefined'){
                                        var ChapterId = chapter;
            
                                        var nb_chapter_verses = nb[chapter].split('<p>');
                                        //console.log(nb_chapter_verses);
            
                                        var only_verses_length = nb_chapter_verses.length - 1;
                                        //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                                        // console.log('only_ divId: '+divId);
            
                                        if(divId == '#col1'){
                                            window.col1_p_length = only_verses_length;
                                        }           
            
            
                                        //Chapter, Verse
                                        nb_chapter_verses.forEach( (el,i) => {
                                            //console.log(el);
                            
                                            //Chapter
                                            if(i == 0){
                                                //console.log('es Chapter: '+el);
            
                                                if(el.includes('</h4>')){
                                                    var arr_h4_text = el.split('</h4>');
                                                    var ChapterText = arr_h4_text[0];
                                                }else{
                                                    var ChapterText = el;
                                                }
                                                //console.log('ChapterText: '+ChapterText);
            
                                                if(ChapterText == ''){
                                                    ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                                }
            
                                                //Chapter
                                                var h4 = document.createElement('h4');
                                                h4.append(ChapterText);
            
                                                arr_data_head.push(h4);
                                                //console.log(h4);
            
                                                //divShow.append(h4);
            
                                                if(bq.HTMLFilter == 'Y'){
                                                    h4.innerHTML = htmlEntities(h4.innerHTML);
                                                }
                                            }
                                            else{//Verse
                                                //console.log('es Verse: '+el);
                            
                                                if(el.includes('</p>')){
                                                    var arr_p_text = el.split('</p>');
                                                    var p_Text = arr_p_text[0];
                                                }else{
                                                    var p_Text = el;
                                                }
                                                //console.log('p_Text: '+p_Text); 
                            
                                                var arr_p = p_Text.split(' ');
                                                var VerseId = arr_p[0];
                                                //console.log('VerseId: '+VerseId);
                            
                                                var VerseText = '';
                                                for(let index = 1; index < arr_p.length; index++){
                                                    VerseText += arr_p[index] + ' ';
                                                }
                                                //console.log('VerseText: '+VerseText);
                            
                                                var p = document.createElement('p');
                                                p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                                p.setAttribute('data-verse',VerseId);
                                
                                                var a = document.createElement('a');
                                                a.href = '#';
                                                a.classList.add = 'blink';
                                                a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                                p.append(a);
                                                p.append(' '); 
            
                                                const span_vt = document.createElement('span');
                                                span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
            
            
                                                //Номера Стронга в стихах (RST+)
                                                if(bq.StrongNumbers == "Y"){
                                                    let t = VerseText;
                                                    var arr_t = t.split(' ');
            
                                                    arr_t.forEach((el,i) => {    
                                                        
                                                        //element of string is Strong Number
                                                        if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                            const span_strong = document.createElement('span');
                                                            if(btnStrongIsActive){
                                                                span_strong.className = 'strong show strongActive'; 
                                                            }else{
                                                                span_strong.className = 'strong'; 
                                                            }
                                                            let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
            
                                                            //si ultimo carácter es string
                                                            if(last_char != '' && isNaN(last_char)){
                                                                let el_number = el.substring(0,el.length-1);
                                                                let el_string = last_char;
                                                                span_strong.innerHTML = el_number;
                                                                p.append(span_strong);
                                                                p.append(el_string);
                                                            }else{//es number
                                                                span_strong.innerHTML = el;
                                                                p.append(span_strong);
                                                            }
            
                                                        }else{//is word
                                                            p.append(' ');
                                                            if(btnStrongIsActive){
                                                                if(el.includes('<S>')){
                                                                    el = el.replace('<S>','<S class="show strongActive">');
                                                                }
                                                            }
                                                            p.append(el);
                                                        }
                                                    });
                                                    p.innerHTML.trim();
            
                                                    //console.log('antes: ' + p.innerHTML);
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                    //console.log('despues: '+p.innerHTML);
            
                                                    if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                        p.querySelectorAll('.strongActive').forEach((el)=>{
                                                            el.addEventListener('click', ()=>{
                                                                //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                                //console.log('1. book: '+book);
                                                                //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                                var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;
            
                                                                if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                    getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                                }else{//rstStrong
                                                                    lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                    getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                                }
                                                            });
                                                        }); 
                                                    }
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                }
            
            
                                                //Примечания редактора в стихах (RSTi2)
                                                if(bq.Notes == 'Y'){
                                                    let t = VerseText;
            
                                                    if(t.includes(bq.NoteSign)){// '*'
                                                        let arr_t0 = t.split(bq.NoteSign);
                                                        let before_Note = arr_t0[0];
            
                                                        if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                            let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                            let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                            let text_Note = arr_t2[0];
                                                            let after_Note = arr_t2[1];
            
                                                            const span_t = document.createElement('span');
                                                            span_t.className = 'tooltip';
                                                            span_t.setAttribute('data-tooltip',text_Note);
                                                            span_t.innerHTML = bq.NoteSign;
            
                                                            span_t.addEventListener('mouseenter', function(){
                                                                showTooltip(this);
                                                            });
                                                            span_t.addEventListener('mouseleave', function(){
                                                                hideTooltip(this);
                                                            });
                                                            /*
                                                            //antes
                                                            p.append(before_Note);
                                                            p.append(span_t);
                                                            p.append(after_Note);
                                                            */
            
                                                            before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                            span_vt.append(before_Note);
                                                            span_vt.append(span_t);
                                                            after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                            span_vt.append(after_Note);
                                                            //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
            
                                                            p.append(span_vt);//antes
                                                        }
                                                    }else{
                                                        //p.append(VerseText);//antes
                                                        span_vt.append(VerseText);
                                                        p.append(span_vt);
            
                                                        if(bq.HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    //p.append(span_vt);//antes
                                                    //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                }
            
            
                                                //Оглавления в стихах (NRT)
                                                if(bq.Titles == 'Y'){
                                                    let t = VerseText;
            
                                                    if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                        let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                        let before_Title = arr_t1[0];
                                                        let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                        let text_Title = arr_t2[0];
                                                        let after_Title = arr_t2[1];
            
                                                        const span_title = document.createElement('span');
                                                        span_title.className = 'verse_title';
                                                        span_title.innerHTML = text_Title;
            
                                                        p.append(before_Title);
                                                        p.append(span_title);
                                                        p.append(after_Title);
                                                    }else{
                                                        p.append(VerseText);
                                                    }
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
            
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
            
                                                //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                    
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }        
                                                
                                            }
                            
                                        });
                                        
                                        
                                        //Posle forEach...
                                        //=====================================================//
                                        // 1. inicio - Numeración base Española - y col's Rusa
                                        //=====================================================//
                                        if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                            //console.log('Numeración base es Española - y cols es Rusa');
                                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                            var arr_vstavka = [];
                                            var vstavka2 = [];
                                            
                                            //Miro la traducción con EnglishPsalms
                                            switch (parseInt(book)) {
            
                                                case 3: //Числа
                                                        if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 13){//13:1-33 => 13: +1
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                    break;
            
                                                case 5: //Иисус Навин
                                                        if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                            addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                    
                                                case 8: //1Samuel (1Царств) 
                                                        if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                            //1 verse contiene 2 en ruso
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                            let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                            arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 23){//23:29 => 24:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                            addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 24){//24:1-22	=> 24: +1
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                    break; 
                                                
                                                case 17: //Job 
                                                        if(chapter == 39){
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                            addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                                        }
                                                        if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                            addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
            
                                                case 18: //Psalmos 
                                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 10){//10:2-18 => 9: +21
                                                            addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                                        //-1 : Х
                                                        if(
                                                            (chapter == 11) || 
                                                            (chapter >= 14 && chapter <= 17) || 
                                                            (chapter >= 23 && chapter <= 29) || 
                                                            (chapter >= 32 && chapter <= 33) || 
                                                            (chapter == 35) || 
                                                            (chapter == 37) || 
                                                            (chapter == 43) || 
                                                            (chapter == 50) || 
                                                            (chapter == 66) || 
                                                            (chapter >= 71 && chapter <= 74) || 
                                                            (chapter >= 78 && chapter <= 79) || 
                                                            (chapter == 82) || 
                                                            (chapter == 86) || 
                                                            (chapter == 87) || 
                                                            (chapter == 91) || 
                                                            (chapter >= 93 && chapter <= 101) || 
                                                            (chapter >= 103 && chapter <= 107) || 
                                                            (chapter >= 109 && chapter <= 114) || 
                                                            (chapter >= 117 && chapter <= 146)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                                        //-1 : +1
                                                        if(
                                                            (chapter == 12) || 
                                                            (chapter >= 18 && chapter <= 22) || 
                                                            (chapter >= 30 && chapter <= 31) || 
                                                            (chapter == 34) || 
                                                            (chapter == 36) || 
                                                            (chapter >= 38 && chapter <= 42) || 
                                                            (chapter >= 44 && chapter <= 49) || 
                                                            (chapter == 53) || 
                                                            (chapter >= 55 && chapter <= 59) || 
                                                            (chapter >= 61 && chapter <= 65) || 
                                                            (chapter >= 67 && chapter <= 70) || 
                                                            (chapter >= 75 && chapter <= 77) || 
                                                            (chapter >= 80 && chapter <= 81) || 
                                                            (chapter >= 83 && chapter <= 85) || 
                                                            (chapter >= 88 && chapter < 90) || 
                                                            (chapter == 92) || 
                                                            (chapter == 102) || 
                                                            (chapter == 108)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                            arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                            arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                                        }
                                                        //Formula
                                                        //-1 : +2 *
                                                        if(
                                                            (chapter >= 51 && chapter <= 52) ||
                                                            (chapter == 54) || 
                                                            (chapter == 60)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(5,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: +8
                                                        if(chapter == 115){//115:1-18 => 113: +8
                                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: X
                                                        if(chapter == 116){//116:1-9 => 114: Х
                                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                            // Sal.116:1-9 => Пс. 114:1-9
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                            // Sal.116:10-19 => Пс. 115:1-10
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-1: X (especial)
                                                        if(chapter == 147){//147:1-11 => 146:1-11
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            // Sal.147:1-11 => Пс.146:1-11
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                            // Sal.147:12-20 => Пс. 147:1-9
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 19: //Притчи
                                                        if(chapter == 4){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                            
                                                case 21: //Cantares - Песня песней
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'заглавие...';
                                                            arr_vstavka.splice(0,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//06:13 =>	07:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                            arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 22: //Isaías - Исаия
                                                        if(chapter == 3){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(19,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 26: //Daniel - Даниил
                                                        if(chapter == 3){//3:1-30 => 3:1-30
                                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 27: //Oseas - Осия
                                                        if(chapter == 13){//13:16 => 14:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 14){//14:1-9 => 14:2-10
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 31: //Jonas - Иона
                                                        if(chapter == 1){//1:17 => 2:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 2){//2:1-10 => 2:2-11
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 44: //Romanos - Римлянам
                                                        //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                                        if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 46: //2Corintios - 2-Коринфянам
                                                        //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(12,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                                
                                                default:
                                                    //console.log('default en switch');
                                                    break;
                                            }//fin switch
                                        }
                                        //=====================================================//
                                        // fin - Numeración base Española - y col's Rusa
                                        //=====================================================//
                                        
                                        
                                        //=====================================================//
                                        // 2. inicio - Numeración base Rusa - y col's Española
                                        //=====================================================//
                                        if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                            //console.log('Numeración base Rusa - y cols Española');
                                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                            //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                            var arr_vstavka = [];
                                            var vstavka2 = [];
                                            
                                            //Miro la traducción con EnglishPsalms
                                            switch (parseInt(book)) {
            
                                                case 3: //Числа
                                                        if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                            addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 5: //Иисус Навин
                                                        if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                    
                                                case 8: //1Samuel (1Царств) 
                                                        if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                            //1 verse contiene 2 en ruso
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 23){//
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                            addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                
                                                case 17: //Job 
                                                        if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 40){//40:1-19 => 40:6-24 
                                                            //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                            //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                            //console.log(vstavka2);
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                            //console.log(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 41){//40:1-26 => 41:9-34
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
            
                                                case 18: //Psalmos 
                                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                                        //+1 : Х
                                                        if(
                                                            (chapter == 10) || 
                                                            (chapter >= 13 && chapter <= 16) || 
                                                            (chapter >= 22 && chapter <= 28) || 
                                                            (chapter >= 31 && chapter <= 32) || 
                                                            (chapter == 34) || 
                                                            (chapter == 36) || 
                                                            (chapter == 42) || 
                                                            (chapter == 49) || 
                                                            (chapter == 65) || 
                                                            (chapter >= 70 && chapter <= 73) || 
                                                            (chapter >= 77 && chapter <= 78) || 
                                                            (chapter == 81) || 
                                                            (chapter == 85) || 
                                                            (chapter == 86) || 
                                                            (chapter == 90) || 
                                                            (chapter >= 92 && chapter <= 100) || 
                                                            (chapter >= 102 && chapter <= 106) || 
                                                            (chapter >= 108 && chapter < 113) || 
                                                            (chapter >= 116 && chapter <= 138) ||
                                                            (chapter >= 140 && chapter <= 145)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                                        //+1 : -1
                                                        if(
                                                            (chapter == 11) || 
                                                            (chapter == 12) || 
                                                            (chapter >= 17 && chapter <= 21) ||
                                                            (chapter >= 29 && chapter <= 30) || 
                                                            (chapter == 33) || 
                                                            (chapter == 35) || 
                                                            (chapter >= 37 && chapter <= 41) || 
                                                            (chapter >= 43 && chapter <= 48) || 
                                                            (chapter == 52) || 
                                                            (chapter >= 54 && chapter <= 58) || 
                                                            (chapter >= 60 && chapter <= 64) || 
                                                            (chapter >= 66 && chapter <= 69) || 
                                                            (chapter >= 74 && chapter <= 76) || 
                                                            (chapter >= 79 && chapter <= 80) || 
                                                            (chapter >= 82 && chapter <= 84) || 
                                                            (chapter >= 87 && chapter < 89) || 
                                                            (chapter == 91) || 
                                                            (chapter == 101) || 
                                                            (chapter == 107) ||
                                                            (chapter == 139)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                                        if(
                                                            (chapter >= 50 && chapter <= 51) ||
                                                            (chapter == 53) || 
                                                            (chapter == 59)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                            arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 89){//89:6 => 90:5-6 
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 4){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //+2: -8
                                                        if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: X
                                                        if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                            addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula (especial)
                                                        if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula (especial)
                                                        if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;                                 
            
                                                case 19: //Притчи
                                                        if(chapter == 4){
                                                            //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                                
                                                case 21: //Cantares - Песня песней
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            //console.log(arr_vstavka);
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 0){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                            arr_data_body = [].concat(arr_vstavka);//ok
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//06:1-12 => 06:1-12	
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 7){//07:1 => 06:13	
                                                            addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 22: //Isaías - Исаия
                                                        if(chapter == 3){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 18){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 26: //Daniel - Даниил
                                                        if(chapter == 3){//3:1-30 => 3:1-30
                                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 4){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 27: //Oseas - Осия
                                                        if(chapter == 14){//14:1 => 13:16 
                                                            addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 31: //Jonas - Иона
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 2){// 2:1 => 1:17
                                                            addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 44: //Romanos - Римлянам
                                                        if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 46: //2Corintios - 2-Коринфянам
                                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 11){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                default:
                                                    //console.log('default en switch');
                                                    break;
                                            }//fin switch
                                        }
                                        //=====================================================//
                                        // inicio - Numeración base Rusa - y col's Española
                                        //=====================================================//
                                        
            
                                        //console.log('arr_data_head');
                                        //console.log(arr_data_head);
            
                                        //console.log('arr_data_body');
                                        //console.log(arr_data_body);
            
                                        arr_data_body.forEach((el,i)=>{//cambio data-verse
                                            el.setAttribute('data-verse', i + 1 );
                                        });
            
                                        arr_data_all = arr_data_head.concat(arr_data_body);
            
                                        arr_data_all.forEach((el,i)=>{
                                            //console.log(el);
                                            divShow.append(el);
                                        });
                                        arr_data_head = [];
                                        arr_data_body = [];
                                        arr_data_all = [];
                                        
            
                                        window.iter_i++;
                                        if(window.iter_i < window.arr_trans.length){
                                            //console.log('iter_i: '+iter_i);
                                            //showChapterText3(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                            showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                        }
            
                                    }else{
                                        //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                                        divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                                    }
                                })
                                .then(() => {
                                    mySizeWindow();
                                    mySizeVerse();
                                    /*
                                    //si es ultimo elemento, añado padding-bottom
                                    let p_last = divShow.querySelector('p:last-child');
                                    let mb_h = divShow.offsetHeight - p_last.offsetHeight;
                                    console.log('mb_h: '+mb_h)
                                    p_last.style.marginBottom = mb_h + 'px';
                                    p_last.style.background = 'lightgreen';
                                    */
                                })
                                .then(() => {
                                    
                                    if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                                        //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');
            
                                        //styles of other verses
                                        if(to_verseNumber !== null && to_verseNumber != ""){
                                            //console.log('hay to_verseNumber');
                                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                    Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                                        if(i == parseInt(verseNumber)) {
                                                            el.classList.add('active_first');                
                                                        }else if(i == parseInt(to_verseNumber)) {
                                                            el.classList.add('active_last');                
                                                        }else{
                                                            el.classList.add('active_middle');                
                                                        }
                                                    });
                                                }
                                            } 
                                        }else{
                                            //console.log('no hay to_verseNumber. reviso verseNumber');
                                            //only one verse of each translation
                                            if(verseNumber !== null && verseNumber != ""){
                                                document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                                    el.classList.add('active_one');
                                                });
                                            }
                                        }                
                                    
                                        //scroll to verse o verses activos
                                        //scrollToVerse(verseNumber, to_verseNumber);
                                    }
            
                                    if(verseView !== null && verseView != ""){
                                        //console.log('hay verseView');
            
                                        //styles of other verses of col1
                                        if(to_verseNumber !== null && to_verseNumber != ""){
                                            //console.log('hay to_verseNumber');
                                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                    Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                                        if(i == parseInt(verseNumber)) {
                                                            el.classList.add('active_first');                
                                                        }else if(i == parseInt(to_verseNumber)) {
                                                            el.classList.add('active_last');                
                                                        }else{
                                                            el.classList.add('active_middle');                
                                                        }
                                                    });
                                                }
                                            } 
                                        }else{
                                            //console.log('no hay to_verseNumber. reviso verseNumber');
                                            //only one verse of each translation
                                            if(verseNumber !== null && verseNumber != ""){
                                                document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                                    el.classList.add('active_one');
                                                });
                                            }
                                        }                
                                    }
                                })
                                .then(() => {
                                    //si hay versiculo marcado con amarillo...
                                    if(verseNumber !== null &&  verseNumber != "" ){
                                        //scroll to verse o verses activos
                                        scrollToVerse(verseNumber, to_verseNumber);
            
                                        //y si con el versiculo marcado existe verse de la vista...
                                        if(verseView !== null && verseView != ""){
                                            //scroll to verseView
                                            scrollToVerseView(verseView);
                                        }
                                    }else{
                                        //console.log('no hay verseNumber');
                                        if(verseView !== null && verseView != ""){
                                            //scroll to verseView
                                            scrollToVerseView(verseView);
                                        }
                                    }
                                    
                                })
                                .then(() => {
                                    mySizeWindow();
                                    mySizeVerse();
                                    addListenerToPA();//listen links p > a

                                    //console.log(`--- --- ending myPromise --- divId: ${divId}  --- Translation: ${Translation} `);
                                    // Registra el tiempo de finalización
                                    //const tiempoFin = new Date().getTime();
                                    // Calcula el tiempo de ejecución en milisegundos
                                    //const tiempoEjecucion = (tiempoFin - tiempoInicio) / 1000;//
                                    //console.log('obj_bible_files --- tiempoFin: '+tiempoFin);
                                    //console.log('obj_bible_files --- tiempoEjecucion: '+tiempoEjecucion+' sec.');
                                    //mostrarTamanioObjeto(obj_bible_files);

                                })
                                .catch((error) => {
                                    // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                                    console.log('error promesa en myPromise con obj_bible_files. error: '+error);
                                });

                            }else{
                                console.log('No coincide el nombre del fichero o fileContent está vacío');
                            }

                        }else{
                            //console.log('no esxiste obj_bible_files book');
                        }
                    }
                }
                
                //si no existe objeto con Translation. hago fetch()
                if(typeof obj_bible_files[Translation].Books[book] == 'undefined'){

                    //start de tiempo para calcular cuanto tarda
                    const tiempoInicioFetch = new Date().getTime();
                    //console.log('fetch() --- tiempoInicioFetch: '+tiempoInicioFetch);

                    //url del libro necesario
                    url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm'; 

                    fetch(url)
                    .then((response) => response.text())
                    .then((bookModule) => {

                        if(crear_objeto_obj_bible_files){
                            obj_bible_files[Translation].Books[book] = {
                                'fileName': bq.Books[book].PathName, 
                                'fileContent': bookModule
                            };
                            //console.log('abajo obj_bible_files:');
                            //console.log(obj_bible_files);
                        }
                        
                        //console.log(bookModule);
                        divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!

                        var nb = bookModule.split('<h4>');//делю файл на главы
                        //console.log(nb);
                        
                        nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                        //console.log(nb);

                        //Book
                        if(bookModule.includes('<h2>')){
                            var arr_h2 = bookModule.split('<h2>');

                            if(arr_h2[1].includes('</h2>')){
                                var arr_h2_text = arr_h2[1].split('</h2>');
                                var BookName = arr_h2_text[0];
                            }else{
                                var BookName = arr_h2[1];
                            }
                            BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                            //console.log('BookName: '+BookName); 
                            
                            //Book
                            var h2 = document.createElement('h2');
                            h2.append(BookName);

                            arr_data_head.push(h2);
                            //console.log(h2);

                            if(bq.HTMLFilter == 'Y'){
                                h2.innerHTML = htmlEntities(h2.innerHTML)
                            }
                        }

                        //si existe el capitulo
                        if(typeof nb[chapter] !== 'undefined'){
                            var ChapterId = chapter;

                            var nb_chapter_verses = nb[chapter].split('<p>');
                            //console.log(nb_chapter_verses);

                            var only_verses_length = nb_chapter_verses.length - 1;
                            //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                            // console.log('only_ divId: '+divId);

                            if(divId == '#col1'){
                                window.col1_p_length = only_verses_length;
                                //console.log('only_ col1_p_length: '+window.col1_p_length);
                            }else{
                                //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                            }



                            //Chapter, Verse
                            nb_chapter_verses.forEach( (el,i) => {
                                //console.log(el);
                
                                //Chapter
                                if(i == 0){
                                    //console.log('es Chapter: '+el);

                                    if(el.includes('</h4>')){
                                        var arr_h4_text = el.split('</h4>');
                                        var ChapterText = arr_h4_text[0];
                                    }else{
                                        var ChapterText = el;
                                    }
                                    //console.log('ChapterText: '+ChapterText);

                                    if(ChapterText == ''){
                                        ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                    }

                                    //Chapter
                                    var h4 = document.createElement('h4');
                                    h4.append(ChapterText);

                                    arr_data_head.push(h4);
                                    //console.log(h4);

                                    //divShow.append(h4);

                                    if(bq.HTMLFilter == 'Y'){
                                        h4.innerHTML = htmlEntities(h4.innerHTML);
                                    }
                                }
                                else{//Verse
                                    //console.log('es Verse: '+el);
                
                                    if(el.includes('</p>')){
                                        var arr_p_text = el.split('</p>');
                                        var p_Text = arr_p_text[0];
                                    }else{
                                        var p_Text = el;
                                    }
                                    //console.log('p_Text: '+p_Text); 
                
                                    var arr_p = p_Text.split(' ');
                                    var VerseId = arr_p[0];
                                    //console.log('VerseId: '+VerseId);
                
                                    var VerseText = '';
                                    for(let index = 1; index < arr_p.length; index++){
                                        VerseText += arr_p[index] + ' ';
                                    }
                                    //console.log('VerseText: '+VerseText);
                
                                    var p = document.createElement('p');
                                    p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                    p.setAttribute('data-verse',VerseId);
                    
                                    var a = document.createElement('a');
                                    a.href = '#';
                                    a.classList.add = 'blink';
                                    a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                    p.append(a);
                                    p.append(' '); 

                                    const span_vt = document.createElement('span');
                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                    //Номера Стронга в стихах (RST+)
                                    if(bq.StrongNumbers == "Y"){
                                        let t = VerseText;
                                        var arr_t = t.split(' ');

                                        arr_t.forEach((el,i) => {    
                                            
                                            //element of string is Strong Number
                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                const span_strong = document.createElement('span');
                                                if(btnStrongIsActive){
                                                    span_strong.className = 'strong show strongActive'; 
                                                }else{
                                                    span_strong.className = 'strong'; 
                                                }
                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                //si ultimo carácter es string
                                                if(last_char != '' && isNaN(last_char)){
                                                    let el_number = el.substring(0,el.length-1);
                                                    let el_string = last_char;
                                                    span_strong.innerHTML = el_number;
                                                    p.append(span_strong);
                                                    p.append(el_string);
                                                }else{//es number
                                                    span_strong.innerHTML = el;
                                                    p.append(span_strong);
                                                }

                                            }else{//is word
                                                p.append(' ');
                                                if(btnStrongIsActive){
                                                    if(el.includes('<S>')){
                                                        el = el.replace('<S>','<S class="show strongActive">');
                                                    }
                                                }
                                                p.append(el);
                                            }
                                        });
                                        p.innerHTML.trim();

                                        //console.log('antes: ' + p.innerHTML);
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                        //console.log('despues: '+p.innerHTML);

                                        if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                            p.querySelectorAll('.strongActive').forEach((el)=>{
                                                el.addEventListener('click', ()=>{
                                                    //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                    //console.log('1. book: '+book);
                                                    //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                    var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                    if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                        getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                    }else{//rstStrong
                                                        lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                        getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                    }
                                                });
                                            }); 
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Примечания редактора в стихах (RSTi2)
                                    if(bq.Notes == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.NoteSign)){// '*'
                                            let arr_t0 = t.split(bq.NoteSign);
                                            let before_Note = arr_t0[0];

                                            if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                let text_Note = arr_t2[0];
                                                let after_Note = arr_t2[1];

                                                const span_t = document.createElement('span');
                                                span_t.className = 'tooltip';
                                                span_t.setAttribute('data-tooltip',text_Note);
                                                span_t.innerHTML = bq.NoteSign;

                                                span_t.addEventListener('mouseenter', function(){
                                                    showTooltip(this);
                                                });
                                                span_t.addEventListener('mouseleave', function(){
                                                    hideTooltip(this);
                                                });
                                                /*
                                                //antes
                                                p.append(before_Note);
                                                p.append(span_t);
                                                p.append(after_Note);
                                                */

                                                before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                span_vt.append(before_Note);
                                                span_vt.append(span_t);
                                                after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                span_vt.append(after_Note);
                                                //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                p.append(span_vt);//antes
                                            }
                                        }else{
                                            //p.append(VerseText);//antes
                                            span_vt.append(VerseText);
                                            p.append(span_vt);

                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                        }
                                        //p.append(span_vt);//antes
                                        //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Оглавления в стихах (NRT)
                                    if(bq.Titles == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                            let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                            let before_Title = arr_t1[0];
                                            let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                            let text_Title = arr_t2[0];
                                            let after_Title = arr_t2[1];

                                            const span_title = document.createElement('span');
                                            span_title.className = 'verse_title';
                                            span_title.innerHTML = text_Title;

                                            p.append(before_Title);
                                            p.append(span_title);
                                            p.append(after_Title);
                                        }else{
                                            p.append(VerseText);
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);

                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }

                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                    if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                        //p.append(VerseText);//antes
                                        span_vt.append(VerseText);
                                        p.append(span_vt);

                                        arr_data_body.push(p);
                                        //console.log(p);
                                        
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }        
                                    
                                }
                
                            });
                            
                            
                            //Posle forEach...
                            //=====================================================//
                            // 1. inicio - Numeración base Española - y col's Rusa
                            //=====================================================//
                            if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                //console.log('Numeración base es Española - y cols es Rusa');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//13:1-33 => 13: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//23:29 => 24:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//24:1-22	=> 24: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                            }
                                            if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 10){//10:2-18 => 9: +21
                                                addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                            //-1 : Х
                                            if(
                                                (chapter == 11) || 
                                                (chapter >= 14 && chapter <= 17) || 
                                                (chapter >= 23 && chapter <= 29) || 
                                                (chapter >= 32 && chapter <= 33) || 
                                                (chapter == 35) || 
                                                (chapter == 37) || 
                                                (chapter == 43) || 
                                                (chapter == 50) || 
                                                (chapter == 66) || 
                                                (chapter >= 71 && chapter <= 74) || 
                                                (chapter >= 78 && chapter <= 79) || 
                                                (chapter == 82) || 
                                                (chapter == 86) || 
                                                (chapter == 87) || 
                                                (chapter == 91) || 
                                                (chapter >= 93 && chapter <= 101) || 
                                                (chapter >= 103 && chapter <= 107) || 
                                                (chapter >= 109 && chapter <= 114) || 
                                                (chapter >= 117 && chapter <= 146)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                            //-1 : +1
                                            if(
                                                (chapter == 12) || 
                                                (chapter >= 18 && chapter <= 22) || 
                                                (chapter >= 30 && chapter <= 31) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter >= 38 && chapter <= 42) || 
                                                (chapter >= 44 && chapter <= 49) || 
                                                (chapter == 53) || 
                                                (chapter >= 55 && chapter <= 59) || 
                                                (chapter >= 61 && chapter <= 65) || 
                                                (chapter >= 67 && chapter <= 70) || 
                                                (chapter >= 75 && chapter <= 77) || 
                                                (chapter >= 80 && chapter <= 81) || 
                                                (chapter >= 83 && chapter <= 85) || 
                                                (chapter >= 88 && chapter < 90) || 
                                                (chapter == 92) || 
                                                (chapter == 102) || 
                                                (chapter == 108)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                            }
                                            //Formula
                                            //-1 : +2 *
                                            if(
                                                (chapter >= 51 && chapter <= 52) ||
                                                (chapter == 54) || 
                                                (chapter == 60)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(5,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: +8
                                            if(chapter == 115){//115:1-18 => 113: +8
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 116){//116:1-9 => 114: Х
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                // Sal.116:1-9 => Пс. 114:1-9
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                // Sal.116:10-19 => Пс. 115:1-10
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-1: X (especial)
                                            if(chapter == 147){//147:1-11 => 146:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                // Sal.147:1-11 => Пс.146:1-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                // Sal.147:12-20 => Пс. 147:1-9
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'заглавие...';
                                                arr_vstavka.splice(0,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:13 =>	07:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(19,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 13){//13:16 => 14:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 14){//14:1-9 => 14:2-10
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){//1:17 => 2:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){//2:1-10 => 2:2-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                            if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(12,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // fin - Numeración base Española - y col's Rusa
                            //=====================================================//
                            
                            
                            //=====================================================//
                            // 2. inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                //console.log('Numeración base Rusa - y cols Española');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-19 => 40:6-24 
                                                //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                //console.log(vstavka2);
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                //console.log(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 41){//40:1-26 => 41:9-34
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                            //+1 : Х
                                            if(
                                                (chapter == 10) || 
                                                (chapter >= 13 && chapter <= 16) || 
                                                (chapter >= 22 && chapter <= 28) || 
                                                (chapter >= 31 && chapter <= 32) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter == 42) || 
                                                (chapter == 49) || 
                                                (chapter == 65) || 
                                                (chapter >= 70 && chapter <= 73) || 
                                                (chapter >= 77 && chapter <= 78) || 
                                                (chapter == 81) || 
                                                (chapter == 85) || 
                                                (chapter == 86) || 
                                                (chapter == 90) || 
                                                (chapter >= 92 && chapter <= 100) || 
                                                (chapter >= 102 && chapter <= 106) || 
                                                (chapter >= 108 && chapter < 113) || 
                                                (chapter >= 116 && chapter <= 138) ||
                                                (chapter >= 140 && chapter <= 145)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                            //+1 : -1
                                            if(
                                                (chapter == 11) || 
                                                (chapter == 12) || 
                                                (chapter >= 17 && chapter <= 21) ||
                                                (chapter >= 29 && chapter <= 30) || 
                                                (chapter == 33) || 
                                                (chapter == 35) || 
                                                (chapter >= 37 && chapter <= 41) || 
                                                (chapter >= 43 && chapter <= 48) || 
                                                (chapter == 52) || 
                                                (chapter >= 54 && chapter <= 58) || 
                                                (chapter >= 60 && chapter <= 64) || 
                                                (chapter >= 66 && chapter <= 69) || 
                                                (chapter >= 74 && chapter <= 76) || 
                                                (chapter >= 79 && chapter <= 80) || 
                                                (chapter >= 82 && chapter <= 84) || 
                                                (chapter >= 87 && chapter < 89) || 
                                                (chapter == 91) || 
                                                (chapter == 101) || 
                                                (chapter == 107) ||
                                                (chapter == 139)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                            if(
                                                (chapter >= 50 && chapter <= 51) ||
                                                (chapter == 53) || 
                                                (chapter == 59)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 89){//89:6 => 90:5-6 
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 4){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+2: -8
                                            if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;                                 

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //console.log(arr_vstavka);
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 0){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                arr_data_body = [].concat(arr_vstavka);//ok
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:1-12 => 06:1-12	
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//07:1 => 06:13	
                                                addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 18){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 14){//14:1 => 13:16 
                                                addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){// 2:1 => 1:17
                                                addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 11){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            

                            //console.log('arr_data_head');
                            //console.log(arr_data_head);

                            //console.log('arr_data_body');
                            //console.log(arr_data_body);

                            arr_data_body.forEach((el,i)=>{//cambio data-verse
                                el.setAttribute('data-verse', i + 1 );
                            });

                            arr_data_all = arr_data_head.concat(arr_data_body);

                            arr_data_all.forEach((el,i)=>{
                                //console.log(el);
                                divShow.append(el);
                            });
                            arr_data_head = [];
                            arr_data_body = [];
                            arr_data_all = [];
                            

                            window.iter_i++;
                            if(window.iter_i < window.arr_trans.length){
                                //console.log('iter_i: '+iter_i);
                                //showChapterText3(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                            }

                        }else{
                            //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                            divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                        }
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                        /*
                        //si es ultimo elemento, añado padding-bottom
                        let p_last = divShow.querySelector('p:last-child');
                        let mb_h = divShow.offsetHeight - p_last.offsetHeight;
                        console.log('mb_h: '+mb_h)
                        p_last.style.marginBottom = mb_h + 'px';
                        p_last.style.background = 'lightgreen';
                        */
                    })
                    .then(() => {
                        
                        if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                            //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                            //styles of other verses
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        
                            //scroll to verse o verses activos
                            //scrollToVerse(verseNumber, to_verseNumber);
                        }

                        if(verseView !== null && verseView != ""){
                            //console.log('hay verseView');

                            //styles of other verses of col1
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        }
                    })
                    .then(() => {
                        //si hay versiculo marcado con amarillo...
                        if(verseNumber !== null &&  verseNumber != "" ){
                            //scroll to verse o verses activos
                            scrollToVerse(verseNumber, to_verseNumber);

                            //y si con el versiculo marcado existe verse de la vista...
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }else{
                            //console.log('no hay verseNumber');
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }
                        
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                        addListenerToPA();//listen links p > a

                        
                        //console.log('2. ending fetch()');
                        // Registra el tiempo de finalización
                        //const tiempoFinFetch = new Date().getTime();
                        // Calcula el tiempo de ejecución en milisegundos
                        //const tiempoEjecucionFetch = (tiempoFinFetch - tiempoInicioFetch) / 1000;//
                        //console.log('fetch() --- tiempoFinFetch: '+tiempoFinFetch);
                        //console.log('fetch() --- tiempoEjecucionFetch: '+tiempoEjecucionFetch+' sec.');

                    })
                    .catch(error => { 
                        //Código a realizar cuando se rechaza la promesa
                        console.log('error promesa en fetch() con obj_bible_files. error: '+error);
                    });                    
                }
                //console.log('despues de fetch --- abajo obj_bible_files:');
                //console.log(obj_bible_files); 


            }else{//si no está el id de book en el modulo...
                document.querySelectorAll('.colsInner').forEach(el=>{
                    if(el.childElementCount == 0 || el.textContent == ''){
                        var p = document.createElement('p');
                        p.className = 'prim';
                        p.innerHTML = `2. En este módulo no existe el libro indicado.`;
                        el.append(p);
                        //alert(' vacio');
                    }else{
                        //alert(' no vacio');
                    }
                });
            }            

    
        }else{//MODO OLD. como en Text3()
            console.log('MODO OLD. como en Text3()');

            //test php read_file
            isTestPhp = true;
            if(typeof isTestPhp != 'undefined' && isTestPhp){
                console.log('isTestPhp = true. hago TEST');
                
                var objTrans = arrFavTransObj.find(v => v.Translation === Translation);//para test
                if(typeof objTrans == 'undefined'){
                    console.log('objTrans todavia no existe. return false.');
                    return false;//test
                }


                    //saco ajustes de este modulo en json               
                    var bq = objTrans;
                    //console.log(' abajo bq:');
                    //console.log(bq);

                    //window.bq = bq;
                    if(divTrans != null){
                        // divTrans.innerHTML = bq.BibleShortName;
                        divTransDesk.innerHTML = bq.BibleShortName;
                        divTransMob.innerHTML = bq.BibleShortName;
                    }
                    
                    //si el id de book está entre numero de books del modulo, lo muestro
                    //if(parseInt(book) < bq.BookQty){//0-65 < 66 //antes
                    if(typeof bq.Books[book] != 'undefined'){//0-65 < 66    
                        
                        //url del libro necesario
                        url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm'; //new

                        if(url.includes('no_disponible.htm')){
                            console.log('url includes no_disponible.htm');
                            divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                            return false;
                        } 


                        let formData = new FormData();
                        formData.append('url', '../'+url );
                        formData.append('base_ep', base_ep);
                        formData.append('bq_EnglishPsalms', bq.EnglishPsalms);

                        if(book != null) formData.append('book', book);
                        formData.append('chapter', chapter);
                        if(typeof verse != 'undefined' && verse != null) formData.append('verse', verse);
                        if(typeof to_verse != 'undefined' && to_verse != null) formData.append('to_verse', to_verse);

                        if(typeof col1_p_length != 'undefined' && col1_p_length != null) formData.append('col1_p_length', col1_p_length);
                        //window.col1_p_length

                        
                        //let modo_read = 'por_text';
                        let modo_read = 'por_json';
                        let url_read_file = (modo_read == 'por_json') ? 'app/read_file_to_json.php' : 'app/read_file.php' ;

                        fetch(url_read_file,{
                            method: 'POST',
                            body: formData                            
                        })
                        //.then((response) => response.text()) //caso 'app/read_file.php'
                        .then((response) => response.json()) //caso 'app/read_file_to_json.php'
                        .then((dataRead) => {
                            
                              
                            
                            
                            //2 modos de hacer
                            //modo 1 - por .text()
                            if(modo_read == 'por_text'){
                               
                                var bookModule = dataRead;
                                console.log('6577. abajo bookModule:');
                                console.log(bookModule);

                                divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!//antes
                                console.log('lo reseteo en buildDivShow'); 
                                
                                //Book //si viene h2
                                if(bookModule.includes('<h2>')){
                                    //si tiene h2
                                    var arr_h2 = bookModule.split('<h2>');

                                    if(arr_h2[1].includes('</h2>')){
                                        var arr_h2_splited = arr_h2[1].split('</h2>');
                                        var BookName = arr_h2_splited[0];
                                        var arr_one_h4 = arr_h2_splited[1];
                                    }else{
                                        var arr_one_h4 = arr_h2[1].split('<h4>');
                                        var BookName = arr_one_h4[0];//desde inicio hasta el primer h4
                                    }

                                    if(BookName == '') BookName = bq.Books[book].FullName;
                                    //Book
                                    var h2 = document.createElement('h2');
                                    h2.append(BookName);

                                    arr_data_head.push(h2);

                                    var nb = (arr_one_h4.includes('<h4>')) ? arr_one_h4.split('<h4>') : console.error('no includes(<h4>)');//делю файл на главы
                                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                    //console.log(nb);
                                
                                }else{
                                    //si no viene h2
                                    var BookName = bq.Books[book].FullName ;
                                    
                                    //Book
                                    var h2 = document.createElement('h2');
                                    h2.append(BookName);

                                    arr_data_head.push(h2);
                                    //console.log(h2);

                                    var nb = (bookModule.includes('<h4>')) ? bookModule.split('<h4>') : console.error('no includes(<h4>)');//делю файл на главы
                                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                    //console.log(nb);                            
                                }

                                //si existe el capitulo
                                if(typeof nb[0] !== 'undefined'){//si existe texto devuelto pot php
                                    var ChapterId = chapter;

                                    var nb_chapter_verses = (nb[0].includes('<p>')) ? nb[0].split('<p>') : console.error('no includes(<p>)');
                                    //console.log(nb_chapter_verses);

                                    var only_verses_length = nb_chapter_verses.length - 1;
                                    //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                                    // console.log('only_ divId: '+divId);

                                    if(divId == '#col1'){
                                        window.col1_p_length = only_verses_length;
                                        //console.log('only_ col1_p_length: '+window.col1_p_length);
                                    }else{
                                        //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                                    }



                                    //Chapter, Verse
                                    nb_chapter_verses.forEach( (el,i) => {
                                        //console.log(el);
                        
                                        //Chapter
                                        if(i == 0){
                                            //console.log('es Chapter: '+el);

                                            if(el.includes('</h4>')){
                                                var arr_h4_text = (el.includes('</h4>')) ? el.split('</h4>') : console.error('no includes(</h4>)') ;
                                                var ChapterText = arr_h4_text[0];
                                            }else{
                                                var ChapterText = el;//ya que el indice es 0, el siguiente es '<p>'
                                            }
                                            //console.log('ChapterText: '+ChapterText);

                                            if(ChapterText == ''){
                                                ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                            }

                                            //Chapter
                                            var h4 = document.createElement('h4');
                                            h4.append(ChapterText);

                                            arr_data_head.push(h4);
                                            //console.log(h4);

                                            //divShow.append(h4);

                                            if(bq.HTMLFilter == 'Y'){
                                                h4.innerHTML = htmlEntities(h4.innerHTML);
                                            }
                                        }
                                        else{//Verse
                                            //console.log('es Verse: '+el);
                        
                                            if(el.includes('</p>')){
                                                var arr_p_text = (el.includes('</p>')) ? el.split('</p>') : console.error('no includes </p>') ;
                                                var p_Text = arr_p_text[0];
                                            }else{
                                                var p_Text = el;//ya que fue hecho el .split('<p>')
                                            }
                                            //console.log('p_Text: '+p_Text); 
                                            
                                            var arr_p = (p_Text.includes(' ')) ? p_Text.split(' ') : console.error("no includes ' '") ;
                                            var VerseId = arr_p[0];
                                            //console.log('VerseId: '+VerseId);
                        
                                            var VerseText = '';
                                            for(let index = 1; index < arr_p.length; index++){
                                                VerseText += arr_p[index] + ' ';
                                            }
                                            //console.log('VerseText: '+VerseText);
                        
                                            var p = document.createElement('p');
                                            p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                            p.setAttribute('data-verse',VerseId);
                            
                                            var a = document.createElement('a');
                                            a.href = '#';
                                            a.classList.add = 'blink';
                                            a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                            p.append(a);
                                            p.append(' '); 

                                            const span_vt = document.createElement('span');
                                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                            //Номера Стронга в стихах (RST+)
                                            if(bq.StrongNumbers == "Y"){
                                                let t = VerseText;
                                                var arr_t = (t.includes(' ')) ? t.split(' ') : alert('err 1');

                                                arr_t.forEach((el,i) => {    
                                                    
                                                    //element of string is Strong Number
                                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                        const span_strong = document.createElement('span');
                                                        if(btnStrongIsActive){
                                                            span_strong.className = 'strong show strongActive'; 
                                                        }else{
                                                            span_strong.className = 'strong'; 
                                                        }
                                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                        //si ultimo carácter es string
                                                        if(last_char != '' && isNaN(last_char)){
                                                            let el_number = el.substring(0,el.length-1);
                                                            let el_string = last_char;
                                                            span_strong.innerHTML = el_number;
                                                            p.append(span_strong);
                                                            p.append(el_string);
                                                        }else{//es number
                                                            span_strong.innerHTML = el;
                                                            p.append(span_strong);
                                                        }

                                                    }else{//is word
                                                        p.append(' ');
                                                        if(btnStrongIsActive){
                                                            if(el.includes('<S>')){
                                                                el = el.replace('<S>','<S class="show strongActive">');
                                                            }
                                                        }
                                                        p.append(el);
                                                    }
                                                });
                                                p.innerHTML.trim();

                                                //console.log('antes: ' + p.innerHTML);
                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                                //console.log('despues: '+p.innerHTML);

                                                if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                    p.querySelectorAll('.strongActive').forEach((el)=>{
                                                        el.addEventListener('click', ()=>{
                                                            //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                            //console.log('1. book: '+book);
                                                            //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                            var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                            if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                            }else{//rstStrong
                                                                lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                            }
                                                        });
                                                    }); 
                                                }

                                                arr_data_body.push(p);
                                                //console.log(p);
                                            }


                                            //Примечания редактора в стихах (RSTi2)
                                            if(bq.Notes == 'Y'){
                                                let t = VerseText;

                                                if(t.includes(bq.NoteSign)){// '*'
                                                    let arr_t0 = t.split(bq.NoteSign);
                                                    let before_Note = arr_t0[0];

                                                    if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                        let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                        let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                        let text_Note = arr_t2[0];
                                                        let after_Note = arr_t2[1];

                                                        const span_t = document.createElement('span');
                                                        span_t.className = 'tooltip';
                                                        span_t.setAttribute('data-tooltip',text_Note);
                                                        span_t.innerHTML = bq.NoteSign;

                                                        span_t.addEventListener('mouseenter', function(){
                                                            showTooltip(this);
                                                        });
                                                        span_t.addEventListener('mouseleave', function(){
                                                            hideTooltip(this);
                                                        });
                                                        /*
                                                        //antes
                                                        p.append(before_Note);
                                                        p.append(span_t);
                                                        p.append(after_Note);
                                                        */

                                                        before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                        span_vt.append(before_Note);
                                                        span_vt.append(span_t);
                                                        after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                        span_vt.append(after_Note);
                                                        //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                        p.append(span_vt);//antes
                                                    }
                                                }else{
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);

                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
                                                //p.append(span_vt);//antes
                                                //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                                arr_data_body.push(p);
                                                //console.log(p);
                                            }


                                            //Оглавления в стихах (NRT)
                                            if(bq.Titles == 'Y'){
                                                let t = VerseText;

                                                if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                    let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                    let before_Title = arr_t1[0];
                                                    let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                    let text_Title = arr_t2[0];
                                                    let after_Title = arr_t2[1];

                                                    const span_title = document.createElement('span');
                                                    span_title.className = 'verse_title';
                                                    span_title.innerHTML = text_Title;

                                                    p.append(before_Title);
                                                    p.append(span_title);
                                                    p.append(after_Title);
                                                }else{
                                                    p.append(VerseText);
                                                }

                                                arr_data_body.push(p);
                                                //console.log(p);

                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }

                                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                            if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                //p.append(VerseText);//antes
                                                span_vt.append(VerseText);
                                                p.append(span_vt);

                                                arr_data_body.push(p);
                                                //console.log(p);
                                                
                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }        
                                            
                                        }
                        
                                    });
                                    
                                    
                                    //Posle forEach...
                                    //=====================================================//
                                    // 1. inicio - Numeración base Española - y col's Rusa
                                    //=====================================================//
                                    if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                        //console.log('Numeración base es Española - y cols es Rusa');
                                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                        var arr_vstavka = [];
                                        var vstavka2 = [];
                                        
                                        //Miro la traducción con EnglishPsalms
                                        switch (parseInt(book)) {

                                            case 3: //Числа
                                                    if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 13){//13:1-33 => 13: +1
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                break;

                                            case 5: //Иисус Навин
                                                    if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                        addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                                
                                            case 8: //1Samuel (1Царств) 
                                                    if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                        //1 verse contiene 2 en ruso
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                        let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                        arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 23){//23:29 => 24:1
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                        addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 24){//24:1-22	=> 24: +1
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                break; 
                                            
                                            case 17: //Job 
                                                    if(chapter == 39){
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                        addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                                    }
                                                    if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                        addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 

                                            case 18: //Psalmos 
                                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 10){//10:2-18 => 9: +21
                                                        addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                                    //-1 : Х
                                                    if(
                                                        (chapter == 11) || 
                                                        (chapter >= 14 && chapter <= 17) || 
                                                        (chapter >= 23 && chapter <= 29) || 
                                                        (chapter >= 32 && chapter <= 33) || 
                                                        (chapter == 35) || 
                                                        (chapter == 37) || 
                                                        (chapter == 43) || 
                                                        (chapter == 50) || 
                                                        (chapter == 66) || 
                                                        (chapter >= 71 && chapter <= 74) || 
                                                        (chapter >= 78 && chapter <= 79) || 
                                                        (chapter == 82) || 
                                                        (chapter == 86) || 
                                                        (chapter == 87) || 
                                                        (chapter == 91) || 
                                                        (chapter >= 93 && chapter <= 101) || 
                                                        (chapter >= 103 && chapter <= 107) || 
                                                        (chapter >= 109 && chapter <= 114) || 
                                                        (chapter >= 117 && chapter <= 146)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                                    //-1 : +1
                                                    if(
                                                        (chapter == 12) || 
                                                        (chapter >= 18 && chapter <= 22) || 
                                                        (chapter >= 30 && chapter <= 31) || 
                                                        (chapter == 34) || 
                                                        (chapter == 36) || 
                                                        (chapter >= 38 && chapter <= 42) || 
                                                        (chapter >= 44 && chapter <= 49) || 
                                                        (chapter == 53) || 
                                                        (chapter >= 55 && chapter <= 59) || 
                                                        (chapter >= 61 && chapter <= 65) || 
                                                        (chapter >= 67 && chapter <= 70) || 
                                                        (chapter >= 75 && chapter <= 77) || 
                                                        (chapter >= 80 && chapter <= 81) || 
                                                        (chapter >= 83 && chapter <= 85) || 
                                                        (chapter >= 88 && chapter < 90) || 
                                                        (chapter == 92) || 
                                                        (chapter == 102) || 
                                                        (chapter == 108)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                        arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                        arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                                    }
                                                    //Formula
                                                    //-1 : +2 *
                                                    if(
                                                        (chapter >= 51 && chapter <= 52) ||
                                                        (chapter == 54) || 
                                                        (chapter == 60)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(5,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: +8
                                                    if(chapter == 115){//115:1-18 => 113: +8
                                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: X
                                                    if(chapter == 116){//116:1-9 => 114: Х
                                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                        // Sal.116:1-9 => Пс. 114:1-9
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                        // Sal.116:10-19 => Пс. 115:1-10
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-1: X (especial)
                                                    if(chapter == 147){//147:1-11 => 146:1-11
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // Sal.147:1-11 => Пс.146:1-11
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                        // Sal.147:12-20 => Пс. 147:1-9
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 19: //Притчи
                                                    if(chapter == 4){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                        
                                            case 21: //Cantares - Песня песней
                                                    if(chapter == 1){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'заглавие...';
                                                        arr_vstavka.splice(0,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//06:13 =>	07:1
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                        arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 22: //Isaías - Исаия
                                                    if(chapter == 3){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(19,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 26: //Daniel - Даниил
                                                    if(chapter == 3){//3:1-30 => 3:1-30
                                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 27: //Oseas - Осия
                                                    if(chapter == 13){//13:16 => 14:1
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 14){//14:1-9 => 14:2-10
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 31: //Jonas - Иона
                                                    if(chapter == 1){//1:17 => 2:1
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 2){//2:1-10 => 2:2-11
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 44: //Romanos - Римлянам
                                                    //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                                    if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 46: //2Corintios - 2-Коринфянам
                                                    //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(12,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                            
                                            default:
                                                //console.log('default en switch');
                                                break;
                                        }//fin switch
                                    }
                                    //=====================================================//
                                    // 1. fin - Numeración base Española - y col's Rusa
                                    //=====================================================//
                                    
                                    
                                    //=====================================================//
                                    // 2. inicio - Numeración base Rusa - y col's Española
                                    //=====================================================//
                                    if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                        //console.log('Numeración base Rusa - y cols Española');
                                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                        //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                        var arr_vstavka = [];
                                        var vstavka2 = [];
                                        
                                        //Miro la traducción con EnglishPsalms
                                        switch (parseInt(book)) {

                                            case 3: //Числа
                                                    if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                        addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 5: //Иисус Навин
                                                    if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                                
                                            case 8: //1Samuel (1Царств) 
                                                    if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                        //1 verse contiene 2 en ruso
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 23){//
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                        addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                            
                                            case 17: //Job 
                                                    if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 40){//40:1-19 => 40:6-24 
                                                        //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                        //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                        //console.log(vstavka2);
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                        //console.log(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 41){//40:1-26 => 41:9-34
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 

                                            case 18: //Psalmos 
                                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                                    //+1 : Х
                                                    if(
                                                        (chapter == 10) || 
                                                        (chapter >= 13 && chapter <= 16) || 
                                                        (chapter >= 22 && chapter <= 28) || 
                                                        (chapter >= 31 && chapter <= 32) || 
                                                        (chapter == 34) || 
                                                        (chapter == 36) || 
                                                        (chapter == 42) || 
                                                        (chapter == 49) || 
                                                        (chapter == 65) || 
                                                        (chapter >= 70 && chapter <= 73) || 
                                                        (chapter >= 77 && chapter <= 78) || 
                                                        (chapter == 81) || 
                                                        (chapter == 85) || 
                                                        (chapter == 86) || 
                                                        (chapter == 90) || 
                                                        (chapter >= 92 && chapter <= 100) || 
                                                        (chapter >= 102 && chapter <= 106) || 
                                                        (chapter >= 108 && chapter < 113) || 
                                                        (chapter >= 116 && chapter <= 138) ||
                                                        (chapter >= 140 && chapter <= 145)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                                    //+1 : -1
                                                    if(
                                                        (chapter == 11) || 
                                                        (chapter == 12) || 
                                                        (chapter >= 17 && chapter <= 21) ||
                                                        (chapter >= 29 && chapter <= 30) || 
                                                        (chapter == 33) || 
                                                        (chapter == 35) || 
                                                        (chapter >= 37 && chapter <= 41) || 
                                                        (chapter >= 43 && chapter <= 48) || 
                                                        (chapter == 52) || 
                                                        (chapter >= 54 && chapter <= 58) || 
                                                        (chapter >= 60 && chapter <= 64) || 
                                                        (chapter >= 66 && chapter <= 69) || 
                                                        (chapter >= 74 && chapter <= 76) || 
                                                        (chapter >= 79 && chapter <= 80) || 
                                                        (chapter >= 82 && chapter <= 84) || 
                                                        (chapter >= 87 && chapter < 89) || 
                                                        (chapter == 91) || 
                                                        (chapter == 101) || 
                                                        (chapter == 107) ||
                                                        (chapter == 139)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                                    if(
                                                        (chapter >= 50 && chapter <= 51) ||
                                                        (chapter == 53) || 
                                                        (chapter == 59)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                        arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 89){//89:6 => 90:5-6 
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 4){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //+2: -8
                                                    if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: X
                                                    if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                        addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula (especial)
                                                    if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula (especial)
                                                    if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;                                 

                                            case 19: //Притчи
                                                    if(chapter == 4){
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                            
                                            case 21: //Cantares - Песня песней
                                                    if(chapter == 1){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        //console.log(arr_vstavka);
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 0){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                        arr_data_body = [].concat(arr_vstavka);//ok
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//06:1-12 => 06:1-12	
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 7){//07:1 => 06:13	
                                                        addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 22: //Isaías - Исаия
                                                    if(chapter == 3){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 18){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 26: //Daniel - Даниил
                                                    if(chapter == 3){//3:1-30 => 3:1-30
                                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                        vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 4){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 27: //Oseas - Осия
                                                    if(chapter == 14){//14:1 => 13:16 
                                                        addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 31: //Jonas - Иона
                                                    if(chapter == 1){
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 2){// 2:1 => 1:17
                                                        addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 44: //Romanos - Римлянам
                                                    if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 46: //2Corintios - 2-Коринфянам
                                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 11){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            default:
                                                //console.log('default en switch');
                                                break;
                                        }//fin switch
                                    }
                                    //=====================================================//
                                    // 2. fin - Numeración base Rusa - y col's Española
                                    //=====================================================//
                                    

                                    //console.log('arr_data_head');
                                    //console.log(arr_data_head);

                                    //console.log('arr_data_body');
                                    //console.log(arr_data_body);

                                    arr_data_body.forEach((el,i)=>{//cambio data-verse
                                        el.setAttribute('data-verse', i + 1 );
                                    });

                                    arr_data_all = arr_data_head.concat(arr_data_body);
                                    arrDataDivShow.push(arr_data_all);
                                    console.log('arrDataDivShow:');
                                    console.log(arrDataDivShow);


                                    arr_data_all.forEach((el,i)=>{
                                        //console.log(el);
                                        //divShow.append(el);//antes
                                    });
                                    arr_data_head = [];
                                    arr_data_body = [];
                                    arr_data_all = [];
                                    

                                    window.iter_i++;
                                    if(window.iter_i < window.arr_trans.length){
                                        //console.log('iter_i: '+iter_i);
                                        showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                    }

                                    //si es ultimo elemento del array...
                                    if(countElementsInArray(arrDataDivShow) == arr_trans.length){
                                        console.log('--- llamo buildDivShow() ---');
                                        buildDivShow(arrDataDivShow);
                                    }

                                }else{
                                    //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                                    divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                                }                                

                            }// end por_text






                            
                            //modo 2 - por .json()
                            if(modo_read == 'por_json'){
                                console.log('7670. modo_read por_json');
                                
                                var bookModule = dataRead.chapterData.p_text_all;
                                // console.log('6577. abajo bookModule:');
                                // console.log(bookModule);

                                divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!//antes
                                // console.log('lo reseteo en buildDivShow'); 

                                var BookName = dataRead.chapterData.h2_text;
                                if(BookName == '') BookName = bq.Books[book].FullName;
                                //Book
                                var h2 = document.createElement('h2');
                                h2.append(BookName);

                                arr_data_head.push(h2);

                                var nb = dataRead.chapterData.p_text_all;
                                //console.log('abajo dataRead.chapterData.p_text_all:');
                                //console.log(dataRead.chapterData.p_text_all);

                                //console.log('abajo dataRead.chapterData.arr_p_verses:');
                                //console.log(dataRead.chapterData.arr_p_verses);

                                var arr_p_verses = (typeof dataRead.vstavkaData != 'undefined') ? dataRead.vstavkaData.arr_p_verses : [] ;
                                var arr_p_verses2 = (typeof dataRead.vstavkaData2 != 'undefined') ? dataRead.vstavkaData2.arr_p_verses : [] ;








                                //si existe el capitulo
                                if(typeof nb !== 'undefined'){//si existe texto devuelto pot php
                                    var ChapterId = chapter;

                                    //var nb_chapter_verses = (nb.includes('<p>')) ? nb.split('<p>') : console.error('no includes(<p>)');//as text
                                    var nb_chapter_verses = (dataRead.chapterData.arr_p_verses.length != 0) ? dataRead.chapterData.arr_p_verses : console.error('dataRead.chapterData.arr_p_verses.length = 0');//as json
                                    //console.log(nb_chapter_verses);

                                    var only_verses_length = nb_chapter_verses.length - 1;
                                    //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                                    // console.log('only_ divId: '+divId);

                                    if(divId == '#col1'){
                                        window.col1_p_length = only_verses_length;
                                        //console.log('only_ col1_p_length: '+window.col1_p_length);
                                    }else{
                                        //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                                    }



                                    //Chapter, Verse
                                    nb_chapter_verses.forEach( (el,i) => {
                                        //console.log(el);
                        
                                        //Chapter
                                        if(i == 0){
                                            //console.log('es Chapter: '+el);

                                            var ChapterText = dataRead.chapterData.h4_text;//ya que el indice es 0, el siguiente es '<p>'
                                            if(ChapterText == '') ChapterText = bq.Books[book].FullName + ' ' + chapter;

                                            //Chapter
                                            const h4 = document.createElement('h4');
                                            h4.append(ChapterText);

                                            arr_data_head.push(h4);
                                            //console.log(h4);

                                            if(bq.HTMLFilter == 'Y'){
                                                h4.innerHTML = htmlEntities(h4.innerHTML);
                                            }
                                        }
                                        else{//Verse
                                            //console.log('es Verse: '+el);
                        
                                            if(el.includes('</p>')){
                                                var arr_p_text = (el.includes('</p>')) ? el.split('</p>') : console.error('no includes </p>') ;
                                                var p_Text = arr_p_text[0];
                                            }else{
                                                var p_Text = el;//ya que fue hecho el .split('<p>')
                                            }
                                            //console.log('p_Text: '+p_Text); 
                                            
                                            var arr_p = (p_Text.includes(' ')) ? p_Text.split(' ') : console.error("no includes ' '") ;
                                            var VerseId = arr_p[0];
                                            //console.log('VerseId: '+VerseId);
                        
                                            var VerseText = '';
                                            for(let index = 1; index < arr_p.length; index++){
                                                VerseText += arr_p[index] + ' ';
                                            }
                                            //console.log('VerseText: '+VerseText);
                        
                                            var p = document.createElement('p');
                                            p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                            p.setAttribute('data-verse',VerseId);
                            
                                            var a = document.createElement('a');
                                            a.href = '#';
                                            a.classList.add = 'blink';
                                            a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                            p.append(a);
                                            p.append(' '); 

                                            const span_vt = document.createElement('span');
                                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                            //Номера Стронга в стихах (RST+)
                                            if(bq.StrongNumbers == "Y"){
                                                let t = VerseText;
                                                var arr_t = (t.includes(' ')) ? t.split(' ') : alert('err 1');

                                                arr_t.forEach((el,i) => {    
                                                    
                                                    //element of string is Strong Number
                                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                        const span_strong = document.createElement('span');
                                                        if(btnStrongIsActive){
                                                            span_strong.className = 'strong show strongActive'; 
                                                        }else{
                                                            span_strong.className = 'strong'; 
                                                        }
                                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                        //si ultimo carácter es string
                                                        if(last_char != '' && isNaN(last_char)){
                                                            let el_number = el.substring(0,el.length-1);
                                                            let el_string = last_char;
                                                            span_strong.innerHTML = el_number;
                                                            p.append(span_strong);
                                                            p.append(el_string);
                                                        }else{//es number
                                                            span_strong.innerHTML = el;
                                                            p.append(span_strong);
                                                        }

                                                    }else{//is word
                                                        p.append(' ');
                                                        if(btnStrongIsActive){
                                                            if(el.includes('<S>')){
                                                                el = el.replace('<S>','<S class="show strongActive">');
                                                            }
                                                        }
                                                        p.append(el);
                                                    }
                                                });
                                                p.innerHTML.trim();

                                                //console.log('antes: ' + p.innerHTML);
                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                                //console.log('despues: '+p.innerHTML);

                                                if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                    p.querySelectorAll('.strongActive').forEach((el)=>{
                                                        el.addEventListener('click', ()=>{
                                                            //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                            //console.log('1. book: '+book);
                                                            //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                            var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                            if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                            }else{//rstStrong
                                                                lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                            }
                                                        });
                                                    }); 
                                                }

                                                arr_data_body.push(p);
                                                //console.log(p);
                                            }


                                            //Примечания редактора в стихах (RSTi2)
                                            if(bq.Notes == 'Y'){
                                                let t = VerseText;

                                                if(t.includes(bq.NoteSign)){// '*'
                                                    let arr_t0 = t.split(bq.NoteSign);
                                                    let before_Note = arr_t0[0];

                                                    if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                        let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                        let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                        let text_Note = arr_t2[0];
                                                        let after_Note = arr_t2[1];

                                                        const span_t = document.createElement('span');
                                                        span_t.className = 'tooltip';
                                                        span_t.setAttribute('data-tooltip',text_Note);
                                                        span_t.innerHTML = bq.NoteSign;

                                                        span_t.addEventListener('mouseenter', function(){
                                                            showTooltip(this);
                                                        });
                                                        span_t.addEventListener('mouseleave', function(){
                                                            hideTooltip(this);
                                                        });
                                                        /*
                                                        //antes
                                                        p.append(before_Note);
                                                        p.append(span_t);
                                                        p.append(after_Note);
                                                        */

                                                        before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                        span_vt.append(before_Note);
                                                        span_vt.append(span_t);
                                                        after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                        span_vt.append(after_Note);
                                                        //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                        p.append(span_vt);//antes
                                                    }
                                                }else{
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);

                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
                                                //p.append(span_vt);//antes
                                                //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                                arr_data_body.push(p);
                                                //console.log(p);
                                            }


                                            //Оглавления в стихах (NRT)
                                            if(bq.Titles == 'Y'){
                                                let t = VerseText;

                                                if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                    let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                    let before_Title = arr_t1[0];
                                                    let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                    let text_Title = arr_t2[0];
                                                    let after_Title = arr_t2[1];

                                                    const span_title = document.createElement('span');
                                                    span_title.className = 'verse_title';
                                                    span_title.innerHTML = text_Title;

                                                    p.append(before_Title);
                                                    p.append(span_title);
                                                    p.append(after_Title);
                                                }else{
                                                    p.append(VerseText);
                                                }

                                                arr_data_body.push(p);
                                                //console.log(p);

                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }

                                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                            if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                //p.append(VerseText);//antes
                                                span_vt.append(VerseText);
                                                p.append(span_vt);

                                                arr_data_body.push(p);
                                                //console.log(p);
                                                
                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }        
                                            
                                        }
                        
                                    });
                                    
                                    
                                    //Posle forEach...
                                    //=====================================================//
                                    // 1. inicio - Numeración base Española - y col's Rusa
                                    //=====================================================//
                                    if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                        //console.log('Numeración base es Española - y cols es Rusa');
                                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                        var arr_vstavka = [];
                                        var vstavka2 = [];
                                        
                                        //Miro la traducción con EnglishPsalms
                                        switch (parseInt(book)) {

                                            case 3: //Числа
                                                    if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 13, 1);//add Num. 13:1
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 13){//13:1-33 => 13: +1
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                break;

                                            case 5: //Иисус Навин
                                                    if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                        addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 5, 16);//add Josue 5:16
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                                
                                            case 8: //1Samuel (1Царств) 
                                                    if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                        //1 verse contiene 2 en ruso
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                        let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                        arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 23){//23:29 => 24:1
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 24, 1 );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                        addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 24){//24:1-22	=> 24: +1
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                break; 
                                            
                                            case 17: //Job 
                                                    if(chapter == 39){
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                        addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 39, form_list_verses(31, 35) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                                    }
                                                    if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                        addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(20, 27) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 

                                            case 18: //Psalmos 
                                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    }
                                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 10){//10:2-18 => 9: +21
                                                        addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 9, form_list_verses(22, 39) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                                    //-1 : Х
                                                    if(
                                                        (chapter == 11) || 
                                                        (chapter >= 14 && chapter <= 17) || 
                                                        (chapter >= 23 && chapter <= 29) || 
                                                        (chapter >= 32 && chapter <= 33) || 
                                                        (chapter == 35) || 
                                                        (chapter == 37) || 
                                                        (chapter == 43) || 
                                                        (chapter == 50) || 
                                                        (chapter == 66) || 
                                                        (chapter >= 71 && chapter <= 74) || 
                                                        (chapter >= 78 && chapter <= 79) || 
                                                        (chapter == 82) || 
                                                        (chapter == 86) || 
                                                        (chapter == 87) || 
                                                        (chapter == 91) || 
                                                        (chapter >= 93 && chapter <= 101) || 
                                                        (chapter >= 103 && chapter <= 107) || 
                                                        (chapter >= 109 && chapter <= 114) || 
                                                        (chapter >= 117 && chapter <= 146)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                                    //-1 : +1
                                                    if(
                                                        (chapter == 12) || 
                                                        (chapter >= 18 && chapter <= 22) || 
                                                        (chapter >= 30 && chapter <= 31) || 
                                                        (chapter == 34) || 
                                                        (chapter == 36) || 
                                                        (chapter >= 38 && chapter <= 42) || 
                                                        (chapter >= 44 && chapter <= 49) || 
                                                        (chapter == 53) || 
                                                        (chapter >= 55 && chapter <= 59) || 
                                                        (chapter >= 61 && chapter <= 65) || 
                                                        (chapter >= 67 && chapter <= 70) || 
                                                        (chapter >= 75 && chapter <= 77) || 
                                                        (chapter >= 80 && chapter <= 81) || 
                                                        (chapter >= 83 && chapter <= 85) || 
                                                        (chapter >= 88 && chapter < 90) || 
                                                        (chapter == 92) || 
                                                        (chapter == 102) || 
                                                        (chapter == 108)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                        arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                        arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                                    }
                                                    //Formula
                                                    //-1 : +2 *
                                                    if(
                                                        (chapter >= 51 && chapter <= 52) ||
                                                        (chapter == 54) || 
                                                        (chapter == 60)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(5,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: +8
                                                    if(chapter == 115){//115:1-18 => 113: +8
                                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: X
                                                    if(chapter == 116){//116:1-9 => 114: Х
                                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                        // Sal.116:1-9 => Пс. 114:1-9
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(1, 9) );
                                                        // Sal.116:10-19 => Пс. 115:1-10
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, chapter-1, form_list_verses(1, 10) );
                                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-1: X (especial)
                                                    if(chapter == 147){//147:1-11 => 146:1-11
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // Sal.147:1-11 => Пс.146:1-11
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1, 11) );
                                                        // Sal.147:12-20 => Пс. 147:1-9
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, chapter, form_list_verses(1, 9) );
                                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 19: //Притчи
                                                    if(chapter == 4){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                        
                                            case 21: //Cantares - Песня песней
                                                    if(chapter == 1){
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'заглавие...';
                                                        arr_vstavka.splice(0,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//06:13 =>	07:1
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, 1 );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                        arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 22: //Isaías - Исаия
                                                    if(chapter == 3){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );//correcto!
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );//correcto!
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(19,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 26: //Daniel - Даниил
                                                    if(chapter == 3){//3:1-30 => 3:1-30
                                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(31, 33) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 27: //Oseas - Осия
                                                    if(chapter == 13){//13:16 => 14:1
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 14, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 14){//14:1-9 => 14:2-10
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(2, 10) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 31: //Jonas - Иона
                                                    if(chapter == 1){//1:17 => 2:1
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 2, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 2){//2:1-10 => 2:2-11
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(2, 11) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 44: //Romanos - Римлянам
                                                    //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                                    if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(24,  26) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 46: //2Corintios - 2-Коринфянам
                                                    //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        let p_vacio = document.createElement('p');
                                                        p_vacio.className = 'prim';
                                                        p_vacio.innerHTML = 'смотри стих выше...';
                                                        arr_vstavka.splice(12,0,p_vacio);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                            
                                            default:
                                                //console.log('default en switch');
                                                break;
                                        }//fin switch
                                    }
                                    //=====================================================//
                                    // 1. fin - Numeración base Española - y col's Rusa
                                    //=====================================================//
                                    
                                    
                                    //=====================================================//
                                    // 2. inicio - Numeración base Rusa - y col's Española
                                    //=====================================================//
                                    if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                        //console.log('Numeración base Rusa - y cols Española');
                                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                        //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                        var arr_vstavka = [];
                                        var vstavka2 = [];
                                        
                                        //Miro la traducción con EnglishPsalms
                                        switch (parseInt(book)) {

                                            case 3: //Числа
                                                    if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                        arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                        addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16); 
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 12, 16);
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 5: //Иисус Навин
                                                    if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 6, 1);
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                                
                                            case 8: //1Samuel (1Царств) 
                                                    if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                        //1 verse contiene 2 en ruso
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 23){//
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                        addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 23, 29 );//cojo último verse del capitulo anterior
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 
                                            
                                            case 17: //Job 
                                                    if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(1, 5) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 40){//40:1-19 => 40:6-24 
                                                        //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                        //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                        //console.log(vstavka2);
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                        //console.log(arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 41){//40:1-26 => 41:9-34
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 41, form_list_verses(9, 34) );
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break; 

                                            case 18: //Psalmos 
                                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, 20) );
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 10, form_list_verses(1, 18) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                                    //+1 : Х
                                                    if(
                                                        (chapter == 10) || 
                                                        (chapter >= 13 && chapter <= 16) || 
                                                        (chapter >= 22 && chapter <= 28) || 
                                                        (chapter >= 31 && chapter <= 32) || 
                                                        (chapter == 34) || 
                                                        (chapter == 36) || 
                                                        (chapter == 42) || 
                                                        (chapter == 49) || 
                                                        (chapter == 65) || 
                                                        (chapter >= 70 && chapter <= 73) || 
                                                        (chapter >= 77 && chapter <= 78) || 
                                                        (chapter == 81) || 
                                                        (chapter == 85) || 
                                                        (chapter == 86) || 
                                                        (chapter == 90) || 
                                                        (chapter >= 92 && chapter <= 100) || 
                                                        (chapter >= 102 && chapter <= 106) || 
                                                        (chapter >= 108 && chapter < 113) || 
                                                        (chapter >= 116 && chapter <= 138) ||
                                                        (chapter >= 140 && chapter <= 145)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                                    //+1 : -1
                                                    if(
                                                        (chapter == 11) || 
                                                        (chapter == 12) || 
                                                        (chapter >= 17 && chapter <= 21) ||
                                                        (chapter >= 29 && chapter <= 30) || 
                                                        (chapter == 33) || 
                                                        (chapter == 35) || 
                                                        (chapter >= 37 && chapter <= 41) || 
                                                        (chapter >= 43 && chapter <= 48) || 
                                                        (chapter == 52) || 
                                                        (chapter >= 54 && chapter <= 58) || 
                                                        (chapter >= 60 && chapter <= 64) || 
                                                        (chapter >= 66 && chapter <= 69) || 
                                                        (chapter >= 74 && chapter <= 76) || 
                                                        (chapter >= 79 && chapter <= 80) || 
                                                        (chapter >= 82 && chapter <= 84) || 
                                                        (chapter >= 87 && chapter < 89) || 
                                                        (chapter == 91) || 
                                                        (chapter == 101) || 
                                                        (chapter == 107) ||
                                                        (chapter == 139)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                                    if(
                                                        (chapter >= 50 && chapter <= 51) ||
                                                        (chapter == 53) || 
                                                        (chapter == 59)
                                                    ){
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                        arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //2en1
                                                    if(chapter == 89){//89:6 => 90:5-6 
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 4){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //+2: -8
                                                    if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula
                                                    //-2: X
                                                    if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                        addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula (especial)
                                                    if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    //Formula (especial)
                                                    if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(12, 20) );
                                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;                                 

                                            case 19: //Притчи
                                                    if(chapter == 4){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;
                                            
                                            case 21: //Cantares - Песня песней
                                                    if(chapter == 1){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                                        //console.log(arr_vstavka);
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 0){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                        arr_data_body = [].concat(arr_vstavka);//ok
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 6){//06:1-12 => 06:1-12	
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 7){//07:1 => 06:13	
                                                        addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)-1, 13 );
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 22: //Isaías - Исаия
                                                    if(chapter == 3){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );//correcto!
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length+1) );//correcto!
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 18){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                        arr_data_body = [].concat(arr_vstavka);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 26: //Daniel - Даниил
                                                    if(chapter == 3){//3:1-30 => 3:1-30
                                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, 30) );
                                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 4, form_list_verses(1, 3) );
                                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                        addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 4){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 27: //Oseas - Осия
                                                    if(chapter == 13){//13:1-15 => 13:1-15 // en rv60 le quito el último verse ya que no esta en rst. lo paso al siguiente capitulo.	
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 14){//14:1 => 13:16 
                                                        addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 13, 16);
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 31: //Jonas - Иона
                                                    if(chapter == 1){
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length));//correcto!
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length));//correcto!
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                    if(chapter == 2){// 2:1 => 1:17
                                                        addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 1, 17);
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 44: //Romanos - Римлянам
                                                    if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 16, form_list_verses(25,  27) );
                                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                                        addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            case 46: //2Corintios - 2-Коринфянам
                                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                        var new_arr = [];
                                                        arr_vstavka.map((el,i,arr) => {
                                                            if(i == 11){
                                                                const p_new = document.createElement('p');
                                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                new_arr.push(p_new); 
                                                            }else{
                                                                new_arr.push(el);
                                                            }
                                                        });
                                                        new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                        //console.log(new_arr);
                                                        arr_vstavka = new_arr;
                                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                        arr_data_body.splice(col1_p_length);
                                                    }
                                                break;

                                            default:
                                                //console.log('default en switch');
                                                break;
                                        }//fin switch
                                    }
                                    //=====================================================//
                                    // 2. fin - Numeración base Rusa - y col's Española
                                    //=====================================================//
                                    

                                    //console.log('arr_data_head');
                                    //console.log(arr_data_head);

                                    //console.log('arr_data_body');
                                    //console.log(arr_data_body);

                                    arr_data_body.forEach((el,i)=>{//cambio data-verse
                                        el.setAttribute('data-verse', i + 1 );
                                    });

                                    arr_data_all = arr_data_head.concat(arr_data_body);
                                    arrDataDivShow.push(arr_data_all);
                                    //console.log('arrDataDivShow:');
                                    //console.log(arrDataDivShow);

                                    //arr_data_all.forEach((el,i)=>{
                                    //    //document.querySelector('#col1 .colsInner').append(el);
                                    //    //console.log(el);
                                    //    //divShow.append(el);//antes
                                    //});
                                    arr_data_head = [];
                                    arr_data_body = [];
                                    arr_data_all = [];
                                    

                                    window.iter_i++;
                                    if(window.iter_i < window.arr_trans.length){
                                        //console.log('iter_i: '+iter_i);
                                        showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                    }

                                    //si es ultimo elemento del array...
                                    if(countElementsInArray(arrDataDivShow) == arr_trans.length){
                                        console.log('--- llamo buildDivShow() ---');
                                        buildDivShow(arrDataDivShow);
                                        console.log('--- despues de llamar buildDivShow() ---');
                                    }


                                }else{
                                    //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                                    divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                                } 

                            }// end por_json

                        })
                        .then(() => {
                            mySizeWindow();
                            mySizeVerse();
                        })
                        .then(() => {
                            
                            if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                                //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                                //styles of other verses
                                if(to_verseNumber !== null && to_verseNumber != ""){
                                    //console.log('hay to_verseNumber');
                                    if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                            Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                                if(i == parseInt(verseNumber)) {
                                                    el.classList.add('active_first');                
                                                }else if(i == parseInt(to_verseNumber)) {
                                                    el.classList.add('active_last');                
                                                }else{
                                                    el.classList.add('active_middle');                
                                                }
                                            });
                                        }
                                    } 
                                }else{
                                    //console.log('no hay to_verseNumber. reviso verseNumber');
                                    //only one verse of each translation
                                    if(verseNumber !== null && verseNumber != ""){
                                        document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                            el.classList.add('active_one');
                                        });
                                    }
                                }                
                            
                                //scroll to verse o verses activos
                                //scrollToVerse(verseNumber, to_verseNumber);
                            }

                            if(verseView !== null && verseView != ""){
                                //console.log('hay verseView');

                                //styles of other verses of col1
                                if(to_verseNumber !== null && to_verseNumber != ""){
                                    //console.log('hay to_verseNumber');
                                    if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                            Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                                if(i == parseInt(verseNumber)) {
                                                    el.classList.add('active_first');                
                                                }else if(i == parseInt(to_verseNumber)) {
                                                    el.classList.add('active_last');                
                                                }else{
                                                    el.classList.add('active_middle');                
                                                }
                                            });
                                        }
                                    } 
                                }else{
                                    //console.log('no hay to_verseNumber. reviso verseNumber');
                                    //only one verse of each translation
                                    if(verseNumber !== null && verseNumber != ""){
                                        document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                            el.classList.add('active_one');
                                        });
                                    }
                                }                
                            }
                        })
                        .then(() => {
                            //si hay versiculo marcado con amarillo...
                            if(verseNumber !== null &&  verseNumber != "" ){
                                //scroll to verse o verses activos
                                scrollToVerse(verseNumber, to_verseNumber);

                                //y si con el versiculo marcado existe verse de la vista...
                                if(verseView !== null && verseView != ""){
                                    //scroll to verseView
                                    scrollToVerseView(verseView);
                                }
                            }else{
                                //console.log('no hay verseNumber');
                                if(verseView !== null && verseView != ""){
                                    //scroll to verseView
                                    scrollToVerseView(verseView);
                                }
                            }
                            
                        })
                        .then(() => {
                            mySizeWindow();
                            mySizeVerse();
                            addListenerToPA();//listen links p > a
                        })
                        .catch((error) => {
                            // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                            console.log('error promesa en fetch() modo old. error: '+error);
                        });

                    }else{//si no está el id de book en el modulo...
                        
                        document.querySelectorAll('.colsInner').forEach(el=>{
                            if(el.childElementCount == 0 || el.textContent == ''){
                                var p = document.createElement('p');
                                p.className = 'prim';
                                p.innerHTML = `3.1 En este módulo no existe el libro indicado.`;
                                el.append(p);
                                //alert(' vacio');
                            }else{
                                //alert(' no vacio');
                            }
                        });
                    }            
                

            }else{            
                //modo old de verdad
            
                //saco ajustes de este modulo en json
                url_bq = `modules/text/${Translation}/bibleqt.json`;
                fetch(url_bq)
                .then((response) => response.json())
                .then((bq) => {
                    //console.log(' abajo bq:');
                    //console.log(bq);

                    //window.bq = bq;
                    if(divTrans != null){
                        // divTrans.innerHTML = bq.BibleShortName;
                        divTransDesk.innerHTML = bq.BibleShortName;
                        divTransMob.innerHTML = bq.BibleShortName;
                    }
                    
                    //si el id de book está entre numero de books del modulo, lo muestro
                    if(parseInt(book) < bq.BookQty){//0-65 < 66
                        
                        //url del libro necesario
                        url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm';  

                        fetch(url)
                        .then((response) => response.text())
                        .then((bookModule) => {
                            
                            //console.log(bookModule);
                            divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!

                            var nb = bookModule.split('<h4>');//делю файл на главы
                            //console.log(nb);
                            
                            nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                            //console.log(nb);

                            //Book
                            if(bookModule.includes('<h2>')){
                                var arr_h2 = bookModule.split('<h2>');

                                if(arr_h2[1].includes('</h2>')){
                                    var arr_h2_text = arr_h2[1].split('</h2>');
                                    var BookName = arr_h2_text[0];
                                }else{
                                    var BookName = arr_h2[1];
                                }
                                BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                                //console.log('BookName: '+BookName); 
                                
                                //Book
                                var h2 = document.createElement('h2');
                                h2.append(BookName);

                                arr_data_head.push(h2);
                                //console.log(h2);

                                if(bq.HTMLFilter == 'Y'){
                                    h2.innerHTML = htmlEntities(h2.innerHTML)
                                }
                            }

                            //si existe el capitulo
                            if(typeof nb[chapter] !== 'undefined'){
                                var ChapterId = chapter;

                                var nb_chapter_verses = nb[chapter].split('<p>');
                                //console.log(nb_chapter_verses);

                                var only_verses_length = nb_chapter_verses.length - 1;
                                //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                                // console.log('only_ divId: '+divId);

                                if(divId == '#col1'){
                                    window.col1_p_length = only_verses_length;
                                    //console.log('only_ col1_p_length: '+window.col1_p_length);
                                }else{
                                    //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                                }



                                //Chapter, Verse
                                nb_chapter_verses.forEach( (el,i) => {
                                    //console.log(el);
                    
                                    //Chapter
                                    if(i == 0){
                                        //console.log('es Chapter: '+el);

                                        if(el.includes('</h4>')){
                                            var arr_h4_text = el.split('</h4>');
                                            var ChapterText = arr_h4_text[0];
                                        }else{
                                            var ChapterText = el;
                                        }
                                        //console.log('ChapterText: '+ChapterText);

                                        if(ChapterText == ''){
                                            ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                        }

                                        //Chapter
                                        var h4 = document.createElement('h4');
                                        h4.append(ChapterText);

                                        arr_data_head.push(h4);
                                        //console.log(h4);

                                        //divShow.append(h4);

                                        if(bq.HTMLFilter == 'Y'){
                                            h4.innerHTML = htmlEntities(h4.innerHTML);
                                        }
                                    }
                                    else{//Verse
                                        //console.log('es Verse: '+el);
                    
                                        if(el.includes('</p>')){
                                            var arr_p_text = el.split('</p>');
                                            var p_Text = arr_p_text[0];
                                        }else{
                                            var p_Text = el;
                                        }
                                        //console.log('p_Text: '+p_Text); 
                    
                                        var arr_p = p_Text.split(' ');
                                        var VerseId = arr_p[0];
                                        //console.log('VerseId: '+VerseId);
                    
                                        var VerseText = '';
                                        for(let index = 1; index < arr_p.length; index++){
                                            VerseText += arr_p[index] + ' ';
                                        }
                                        //console.log('VerseText: '+VerseText);
                    
                                        var p = document.createElement('p');
                                        p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                        p.setAttribute('data-verse',VerseId);
                        
                                        var a = document.createElement('a');
                                        a.href = '#';
                                        a.classList.add = 'blink';
                                        a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                        p.append(a);
                                        p.append(' '); 

                                        const span_vt = document.createElement('span');
                                        span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                        //Номера Стронга в стихах (RST+)
                                        if(bq.StrongNumbers == "Y"){
                                            let t = VerseText;
                                            var arr_t = t.split(' ');

                                            arr_t.forEach((el,i) => {    
                                                
                                                //element of string is Strong Number
                                                if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                    const span_strong = document.createElement('span');
                                                    if(btnStrongIsActive){
                                                        span_strong.className = 'strong show strongActive'; 
                                                    }else{
                                                        span_strong.className = 'strong'; 
                                                    }
                                                    let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                    //si ultimo carácter es string
                                                    if(last_char != '' && isNaN(last_char)){
                                                        let el_number = el.substring(0,el.length-1);
                                                        let el_string = last_char;
                                                        span_strong.innerHTML = el_number;
                                                        p.append(span_strong);
                                                        p.append(el_string);
                                                    }else{//es number
                                                        span_strong.innerHTML = el;
                                                        p.append(span_strong);
                                                    }

                                                }else{//is word
                                                    p.append(' ');
                                                    if(btnStrongIsActive){
                                                        if(el.includes('<S>')){
                                                            el = el.replace('<S>','<S class="show strongActive">');
                                                        }
                                                    }
                                                    p.append(el);
                                                }
                                            });
                                            p.innerHTML.trim();

                                            //console.log('antes: ' + p.innerHTML);
                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                            //console.log('despues: '+p.innerHTML);

                                            if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                p.querySelectorAll('.strongActive').forEach((el)=>{
                                                    el.addEventListener('click', ()=>{
                                                        //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                        //console.log('1. book: '+book);
                                                        //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                        var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                        if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                            getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                        }else{//rstStrong
                                                            lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                            getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                        }
                                                    });
                                                }); 
                                            }

                                            arr_data_body.push(p);
                                            //console.log(p);
                                        }


                                        //Примечания редактора в стихах (RSTi2)
                                        if(bq.Notes == 'Y'){
                                            let t = VerseText;

                                            if(t.includes(bq.NoteSign)){// '*'
                                                let arr_t0 = t.split(bq.NoteSign);
                                                let before_Note = arr_t0[0];

                                                if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                    let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                    let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                    let text_Note = arr_t2[0];
                                                    let after_Note = arr_t2[1];

                                                    const span_t = document.createElement('span');
                                                    span_t.className = 'tooltip';
                                                    span_t.setAttribute('data-tooltip',text_Note);
                                                    span_t.innerHTML = bq.NoteSign;

                                                    span_t.addEventListener('mouseenter', function(){
                                                        showTooltip(this);
                                                    });
                                                    span_t.addEventListener('mouseleave', function(){
                                                        hideTooltip(this);
                                                    });
                                                    /*
                                                    //antes
                                                    p.append(before_Note);
                                                    p.append(span_t);
                                                    p.append(after_Note);
                                                    */

                                                    before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                    span_vt.append(before_Note);
                                                    span_vt.append(span_t);
                                                    after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                    span_vt.append(after_Note);
                                                    //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                    p.append(span_vt);//antes
                                                }
                                            }else{
                                                //p.append(VerseText);//antes
                                                span_vt.append(VerseText);
                                                p.append(span_vt);

                                                if(bq.HTMLFilter == 'Y'){
                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                }
                                            }
                                            //p.append(span_vt);//antes
                                            //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                            arr_data_body.push(p);
                                            //console.log(p);
                                        }


                                        //Оглавления в стихах (NRT)
                                        if(bq.Titles == 'Y'){
                                            let t = VerseText;

                                            if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                let before_Title = arr_t1[0];
                                                let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                let text_Title = arr_t2[0];
                                                let after_Title = arr_t2[1];

                                                const span_title = document.createElement('span');
                                                span_title.className = 'verse_title';
                                                span_title.innerHTML = text_Title;

                                                p.append(before_Title);
                                                p.append(span_title);
                                                p.append(after_Title);
                                            }else{
                                                p.append(VerseText);
                                            }

                                            arr_data_body.push(p);
                                            //console.log(p);

                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                        }

                                        //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                        if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                            //p.append(VerseText);//antes
                                            span_vt.append(VerseText);
                                            p.append(span_vt);

                                            arr_data_body.push(p);
                                            //console.log(p);
                                            
                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                        }        
                                        
                                    }
                    
                                });
                                
                                
                                //Posle forEach...
                                //=====================================================//
                                // 1. inicio - Numeración base Española - y col's Rusa
                                //=====================================================//
                                if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                    //console.log('Numeración base es Española - y cols es Rusa');
                                    //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                    var arr_vstavka = [];
                                    var vstavka2 = [];
                                    
                                    //Miro la traducción con EnglishPsalms
                                    switch (parseInt(book)) {

                                        case 3: //Числа
                                                if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 13){//13:1-33 => 13: +1
                                                    arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                }
                                            break;

                                        case 5: //Иисус Навин
                                                if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                    addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break; 
                                            
                                        case 8: //1Samuel (1Царств) 
                                                if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                    //1 verse contiene 2 en ruso
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                    let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                    arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 23){//23:29 => 24:1
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                    addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 24){//24:1-22	=> 24: +1
                                                    arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                }
                                            break; 
                                        
                                        case 17: //Job 
                                                if(chapter == 39){
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                    addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                                }
                                                if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                    addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break; 

                                        case 18: //Psalmos 
                                                if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                    arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                }
                                                if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                    arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 10){//10:2-18 => 9: +21
                                                    addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                                //-1 : Х
                                                if(
                                                    (chapter == 11) || 
                                                    (chapter >= 14 && chapter <= 17) || 
                                                    (chapter >= 23 && chapter <= 29) || 
                                                    (chapter >= 32 && chapter <= 33) || 
                                                    (chapter == 35) || 
                                                    (chapter == 37) || 
                                                    (chapter == 43) || 
                                                    (chapter == 50) || 
                                                    (chapter == 66) || 
                                                    (chapter >= 71 && chapter <= 74) || 
                                                    (chapter >= 78 && chapter <= 79) || 
                                                    (chapter == 82) || 
                                                    (chapter == 86) || 
                                                    (chapter == 87) || 
                                                    (chapter == 91) || 
                                                    (chapter >= 93 && chapter <= 101) || 
                                                    (chapter >= 103 && chapter <= 107) || 
                                                    (chapter >= 109 && chapter <= 114) || 
                                                    (chapter >= 117 && chapter <= 146)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                                //-1 : +1
                                                if(
                                                    (chapter == 12) || 
                                                    (chapter >= 18 && chapter <= 22) || 
                                                    (chapter >= 30 && chapter <= 31) || 
                                                    (chapter == 34) || 
                                                    (chapter == 36) || 
                                                    (chapter >= 38 && chapter <= 42) || 
                                                    (chapter >= 44 && chapter <= 49) || 
                                                    (chapter == 53) || 
                                                    (chapter >= 55 && chapter <= 59) || 
                                                    (chapter >= 61 && chapter <= 65) || 
                                                    (chapter >= 67 && chapter <= 70) || 
                                                    (chapter >= 75 && chapter <= 77) || 
                                                    (chapter >= 80 && chapter <= 81) || 
                                                    (chapter >= 83 && chapter <= 85) || 
                                                    (chapter >= 88 && chapter < 90) || 
                                                    (chapter == 92) || 
                                                    (chapter == 102) || 
                                                    (chapter == 108)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //2en1
                                                if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                    arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                    arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                                }
                                                //Formula
                                                //-1 : +2 *
                                                if(
                                                    (chapter >= 51 && chapter <= 52) ||
                                                    (chapter == 54) || 
                                                    (chapter == 60)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //2en1
                                                if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                    let p_vacio = document.createElement('p');
                                                    p_vacio.className = 'prim';
                                                    p_vacio.innerHTML = 'смотри стих выше...';
                                                    arr_vstavka.splice(5,0,p_vacio);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //-2: +8
                                                if(chapter == 115){//115:1-18 => 113: +8
                                                    addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //-2: X
                                                if(chapter == 116){//116:1-9 => 114: Х
                                                    addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                    // Sal.116:1-9 => Пс. 114:1-9
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                    // Sal.116:10-19 => Пс. 115:1-10
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                    arr_vstavka = arr_vstavka.concat(vstavka2);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //-1: X (especial)
                                                if(chapter == 147){//147:1-11 => 146:1-11
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    // Sal.147:1-11 => Пс.146:1-11
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                    // Sal.147:12-20 => Пс. 147:1-9
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                    arr_vstavka = arr_vstavka.concat(vstavka2);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 19: //Притчи
                                                if(chapter == 4){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = [].concat(arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;
                                    
                                        case 21: //Cantares - Песня песней
                                                if(chapter == 1){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    let p_vacio = document.createElement('p');
                                                    p_vacio.className = 'prim';
                                                    p_vacio.innerHTML = 'заглавие...';
                                                    arr_vstavka.splice(0,0,p_vacio);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 6){//06:13 =>	07:1
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                    arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 22: //Isaías - Исаия
                                                if(chapter == 3){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    let p_vacio = document.createElement('p');
                                                    p_vacio.className = 'prim';
                                                    p_vacio.innerHTML = 'смотри стих выше...';
                                                    arr_vstavka.splice(19,0,p_vacio);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 26: //Daniel - Даниил
                                                if(chapter == 3){//3:1-30 => 3:1-30
                                                    //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                    addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 27: //Oseas - Осия
                                                if(chapter == 13){//13:16 => 14:1
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 14){//14:1-9 => 14:2-10
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 31: //Jonas - Иона
                                                if(chapter == 1){//1:17 => 2:1
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 2){//2:1-10 => 2:2-11
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 44: //Romanos - Римлянам
                                                //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                                if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 46: //2Corintios - 2-Коринфянам
                                                //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                                if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                    let p_vacio = document.createElement('p');
                                                    p_vacio.className = 'prim';
                                                    p_vacio.innerHTML = 'смотри стих выше...';
                                                    arr_vstavka.splice(12,0,p_vacio);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;
                                        
                                        default:
                                            //console.log('default en switch');
                                            break;
                                    }//fin switch
                                }
                                //=====================================================//
                                // fin - Numeración base Española - y col's Rusa
                                //=====================================================//
                                
                                
                                //=====================================================//
                                // 2. inicio - Numeración base Rusa - y col's Española
                                //=====================================================//
                                if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                    //console.log('Numeración base Rusa - y cols Española');
                                    //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                    //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                    var arr_vstavka = [];
                                    var vstavka2 = [];
                                    
                                    //Miro la traducción con EnglishPsalms
                                    switch (parseInt(book)) {

                                        case 3: //Числа
                                                if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                    addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 5: //Иисус Навин
                                                if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break; 
                                            
                                        case 8: //1Samuel (1Царств) 
                                                if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                    //1 verse contiene 2 en ruso
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                    arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 23){//
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                    addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break; 
                                        
                                        case 17: //Job 
                                                if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 40){//40:1-19 => 40:6-24 
                                                    //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                    //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                    //console.log(vstavka2);
                                                    arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                    //console.log(arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 41){//40:1-26 => 41:9-34
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                    arr_data_body = [].concat(arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break; 

                                        case 18: //Psalmos 
                                                if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                    arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                    arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                    addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                                //+1 : Х
                                                if(
                                                    (chapter == 10) || 
                                                    (chapter >= 13 && chapter <= 16) || 
                                                    (chapter >= 22 && chapter <= 28) || 
                                                    (chapter >= 31 && chapter <= 32) || 
                                                    (chapter == 34) || 
                                                    (chapter == 36) || 
                                                    (chapter == 42) || 
                                                    (chapter == 49) || 
                                                    (chapter == 65) || 
                                                    (chapter >= 70 && chapter <= 73) || 
                                                    (chapter >= 77 && chapter <= 78) || 
                                                    (chapter == 81) || 
                                                    (chapter == 85) || 
                                                    (chapter == 86) || 
                                                    (chapter == 90) || 
                                                    (chapter >= 92 && chapter <= 100) || 
                                                    (chapter >= 102 && chapter <= 106) || 
                                                    (chapter >= 108 && chapter < 113) || 
                                                    (chapter >= 116 && chapter <= 138) ||
                                                    (chapter >= 140 && chapter <= 145)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                                //+1 : -1
                                                if(
                                                    (chapter == 11) || 
                                                    (chapter == 12) || 
                                                    (chapter >= 17 && chapter <= 21) ||
                                                    (chapter >= 29 && chapter <= 30) || 
                                                    (chapter == 33) || 
                                                    (chapter == 35) || 
                                                    (chapter >= 37 && chapter <= 41) || 
                                                    (chapter >= 43 && chapter <= 48) || 
                                                    (chapter == 52) || 
                                                    (chapter >= 54 && chapter <= 58) || 
                                                    (chapter >= 60 && chapter <= 64) || 
                                                    (chapter >= 66 && chapter <= 69) || 
                                                    (chapter >= 74 && chapter <= 76) || 
                                                    (chapter >= 79 && chapter <= 80) || 
                                                    (chapter >= 82 && chapter <= 84) || 
                                                    (chapter >= 87 && chapter < 89) || 
                                                    (chapter == 91) || 
                                                    (chapter == 101) || 
                                                    (chapter == 107) ||
                                                    (chapter == 139)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                    arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                                if(
                                                    (chapter >= 50 && chapter <= 51) ||
                                                    (chapter == 53) || 
                                                    (chapter == 59)
                                                ){
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                    arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //2en1
                                                if(chapter == 89){//89:6 => 90:5-6 
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                    var new_arr = [];
                                                    arr_vstavka.map((el,i,arr) => {
                                                        if(i == 4){
                                                            const p_new = document.createElement('p');
                                                            p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                            new_arr.push(p_new); 
                                                        }else{
                                                            new_arr.push(el);
                                                        }
                                                    });
                                                    new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                    //console.log(new_arr);
                                                    arr_vstavka = new_arr;
                                                    arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //+2: -8
                                                if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                    arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                    addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula
                                                //-2: X
                                                if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                    addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula (especial)
                                                if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                    addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                //Formula (especial)
                                                if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                    arr_data_body = arr_vstavka.concat(arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;                                 

                                        case 19: //Притчи
                                                if(chapter == 4){
                                                    //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                    arr_data_body = [].concat(arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;
                                        
                                        case 21: //Cantares - Песня песней
                                                if(chapter == 1){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    //console.log(arr_vstavka);
                                                    var new_arr = [];
                                                    arr_vstavka.map((el,i,arr) => {
                                                        if(i == 0){
                                                            const p_new = document.createElement('p');
                                                            p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                            new_arr.push(p_new); 
                                                        }else{
                                                            new_arr.push(el);
                                                        }
                                                    });
                                                    new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                    //console.log(new_arr);
                                                    arr_vstavka = new_arr;
                                                    //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                    arr_data_body = [].concat(arr_vstavka);//ok
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 6){//06:1-12 => 06:1-12	
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 7){//07:1 => 06:13	
                                                    addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 22: //Isaías - Исаия
                                                if(chapter == 3){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                    var new_arr = [];
                                                    arr_vstavka.map((el,i,arr) => {
                                                        if(i == 18){
                                                            const p_new = document.createElement('p');
                                                            p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                            new_arr.push(p_new); 
                                                        }else{
                                                            new_arr.push(el);
                                                        }
                                                    });
                                                    new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                    //console.log(new_arr);
                                                    arr_vstavka = new_arr;
                                                    //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                    arr_data_body = [].concat(arr_vstavka);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 26: //Daniel - Даниил
                                                if(chapter == 3){//3:1-30 => 3:1-30
                                                    //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                    vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                    arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                    addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 4){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 27: //Oseas - Осия
                                                if(chapter == 14){//14:1 => 13:16 
                                                    addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 31: //Jonas - Иона
                                                if(chapter == 1){
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                                if(chapter == 2){// 2:1 => 1:17
                                                    addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 44: //Romanos - Римлянам
                                                if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                    arr_data_body = arr_data_body.concat(arr_vstavka);
                                                    addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        case 46: //2Corintios - 2-Коринфянам
                                                if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                    arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                    var new_arr = [];
                                                    arr_vstavka.map((el,i,arr) => {
                                                        if(i == 11){
                                                            const p_new = document.createElement('p');
                                                            p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                            new_arr.push(p_new); 
                                                        }else{
                                                            new_arr.push(el);
                                                        }
                                                    });
                                                    new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                    //console.log(new_arr);
                                                    arr_vstavka = new_arr;
                                                    arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                    arr_data_body.splice(col1_p_length);
                                                }
                                            break;

                                        default:
                                            //console.log('default en switch');
                                            break;
                                    }//fin switch
                                }
                                //=====================================================//
                                // inicio - Numeración base Rusa - y col's Española
                                //=====================================================//
                                

                                //console.log('arr_data_head');
                                //console.log(arr_data_head);

                                //console.log('arr_data_body');
                                //console.log(arr_data_body);

                                arr_data_body.forEach((el,i)=>{//cambio data-verse
                                    el.setAttribute('data-verse', i + 1 );
                                });

                                arr_data_all = arr_data_head.concat(arr_data_body);

                                arr_data_all.forEach((el,i)=>{
                                    //document.querySelector('#col1 .colsInner').append(el);
                                    //console.log(el);
                                    divShow.append(el);
                                });
                                arr_data_head = [];
                                arr_data_body = [];
                                arr_data_all = [];
                                

                                window.iter_i++;
                                if(window.iter_i < window.arr_trans.length){
                                    //console.log('iter_i: '+iter_i);
                                    //showChapterText3(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                    showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                }

                            }else{
                                //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                                divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                            }
                        })
                        .then(() => {
                            mySizeWindow();
                            mySizeVerse();
                            /*
                            //si es ultimo elemento, añado padding-bottom
                            let p_last = divShow.querySelector('p:last-child');
                            let mb_h = divShow.offsetHeight - p_last.offsetHeight;
                            console.log('mb_h: '+mb_h)
                            p_last.style.marginBottom = mb_h + 'px';
                            p_last.style.background = 'lightgreen';
                            */
                        })
                        .then(() => {
                            
                            if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                                //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                                //styles of other verses
                                if(to_verseNumber !== null && to_verseNumber != ""){
                                    //console.log('hay to_verseNumber');
                                    if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                            Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                                if(i == parseInt(verseNumber)) {
                                                    el.classList.add('active_first');                
                                                }else if(i == parseInt(to_verseNumber)) {
                                                    el.classList.add('active_last');                
                                                }else{
                                                    el.classList.add('active_middle');                
                                                }
                                            });
                                        }
                                    } 
                                }else{
                                    //console.log('no hay to_verseNumber. reviso verseNumber');
                                    //only one verse of each translation
                                    if(verseNumber !== null && verseNumber != ""){
                                        document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                            el.classList.add('active_one');
                                        });
                                    }
                                }                
                            
                                //scroll to verse o verses activos
                                //scrollToVerse(verseNumber, to_verseNumber);
                            }

                            if(verseView !== null && verseView != ""){
                                //console.log('hay verseView');

                                //styles of other verses of col1
                                if(to_verseNumber !== null && to_verseNumber != ""){
                                    //console.log('hay to_verseNumber');
                                    if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                        for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                            Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                                if(i == parseInt(verseNumber)) {
                                                    el.classList.add('active_first');                
                                                }else if(i == parseInt(to_verseNumber)) {
                                                    el.classList.add('active_last');                
                                                }else{
                                                    el.classList.add('active_middle');                
                                                }
                                            });
                                        }
                                    } 
                                }else{
                                    //console.log('no hay to_verseNumber. reviso verseNumber');
                                    //only one verse of each translation
                                    if(verseNumber !== null && verseNumber != ""){
                                        document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                            el.classList.add('active_one');
                                        });
                                    }
                                }                
                            }
                        })
                        .then(() => {
                            //si hay versiculo marcado con amarillo...
                            if(verseNumber !== null &&  verseNumber != "" ){
                                //scroll to verse o verses activos
                                scrollToVerse(verseNumber, to_verseNumber);

                                //y si con el versiculo marcado existe verse de la vista...
                                if(verseView !== null && verseView != ""){
                                    //scroll to verseView
                                    scrollToVerseView(verseView);
                                }
                            }else{
                                //console.log('no hay verseNumber');
                                if(verseView !== null && verseView != ""){
                                    //scroll to verseView
                                    scrollToVerseView(verseView);
                                }
                            }
                            
                        })
                        .then(() => {
                            mySizeWindow();
                            mySizeVerse();
                            addListenerToPA();//listen links p > a
                        })
                        .catch((error) => {
                            // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                            console.log('error promesa en fetch() modo old. error: '+error);
                        });

                    }else{//si no está el id de book en el modulo...
                        document.querySelectorAll('.colsInner').forEach(el=>{
                            if(el.childElementCount == 0 || el.textContent == ''){
                                var p = document.createElement('p');
                                p.className = 'prim';
                                p.innerHTML = `3.2 En este módulo no existe el libro indicado.`;
                                el.append(p);
                                //alert(' vacio');
                            }else{
                                //alert(' no vacio');
                            }
                        });
                    }            
                });
            
            }

        }//fin - modo old
        


    }//end --- typeof Translation
    else{
        console.log('la traducción no está seleccionada. Translation: '+Translation); 
        //alert(`La traducción no está seleccionada. Selecciónala presionando sobre el símbolo '+' o nombre corto de la traducción.`);       
    }


}

function showChapterText4(Translation, divId, book, chapter, verseNumber = null, to_verseNumber = null, verseView = null, indexColToBuild = null){
    console.log('');
    console.log('=== function showChapterText4() new === divId: ' + divId);

    if(modo_fetch_chapter == 'by_text'){
        viaByText_showChapterText4(Translation, divId, book, chapter, verseNumber, to_verseNumber, verseView, indexColToBuild);
    }else if(modo_fetch_chapter == 'by_json'){
        viaByJson_showChapterText4(Translation, divId, book, chapter, verseNumber, to_verseNumber, verseView, indexColToBuild);
    }
}




function viaByText_showChapterText4(Translation, divId, book, chapter, verseNumber, to_verseNumber, verseView, indexColToBuild){
    console.log('=== viaByText_showChapterText4 ===');

    var divTrans = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransDesk = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransMob = document.querySelector(divId+' .colsHead .colsHeadInner .partMob .mob_trans');
    var divShow = document.querySelector(divId+' .colsInner');//donde se ve el texto de la Biblia
    //divShow.innerHTML = '';//antes
    
    //reseteo todas las columnas con sig. func
    if(indexColToBuild == null){
        clearAllDivShow();//hacerlo SOLO cuando se cargan todos los cols ya que borra el el contenido de todas cols cando se recarga solo 1 col al cambiar solo la trans de una col!
    }    

    var btnStrongIsActive = false;
    if(btnStrong.classList.contains('btn_active')){
        btnStrongIsActive = true;
    }

    window.base_ep = div_trans1.dataset.base_ep;
    //console.log('base_ep: '+base_ep);

    window.arr_data_head = [];//incluye h2 y h4
    window.arr_data_body = [];//incluye p
    window.arr_data_all = [];//incluye todo: h2 y h4 y p


    if(Translation != null){
                
        var objTrans = arrFavTransObj.find(v => v.Translation === Translation);
        console.log('objTrans: ',objTrans);

        
        //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
        if(typeof objTrans != 'undefined' && objTrans != null && objTrans != '' ){
            //console.log('objTrans está creado. abajo objTrans: ');
            //console.log(objTrans);


            //saco ajustes de este modulo en json               
            var bq = objTrans;
            //console.log(' abajo bq:');
            //console.log(bq);

            //window.bq = bq;
            if(divTrans != null){
                // divTrans.innerHTML = bq.BibleShortName;
                divTransDesk.innerHTML = (typeof bq != 'undefined') ? bq.BibleShortName : '---';
                divTransMob.innerHTML = (typeof bq != 'undefined') ? bq.BibleShortName : '---';
            }
            
            //si el id de book está entre numero de books del modulo, lo muestro
            if(typeof bq.Books[book] != 'undefined'){//0-65 < 66
                
                //url del libro necesario
                url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm';  

                //si no existe objeto lo creo
                if(typeof obj_bible_files[Translation] == 'undefined'){
                    obj_bible_files[Translation] = {};
                    obj_bible_files[Translation].Books = [];
                }

                //si existe objeto con Translation. Saco datos del objeto
                if(typeof obj_bible_files[Translation] != 'undefined'){
                    if(typeof obj_bible_files[Translation].Books != 'undefined'){
                        if(typeof obj_bible_files[Translation].Books[book] != 'undefined'){

                            if(obj_bible_files[Translation].Books[book].fileName == bq.Books[book].PathName && obj_bible_files[Translation].Books[book].fileContent != ''){
                                //console.log(`--- --- starting from myPromise --- divId: ${divId}  --- Translation: ${Translation} `);
                                
                                // Registra el tiempo de inicio
                                const tiempoInicio = new Date().getTime();
                                //console.log('obj_bible_files --- tiempoInicio: '+tiempoInicio);

                                var myPromise = new Promise(function(resolve, reject){
                                    resolve('ok');
                                });

                                myPromise
                                .then((data) => {//data = ok
                                    //console.log(' --- if: ');

                                    if(data == 'ok'){
                                        var bookModule = obj_bible_files[Translation].Books[book].fileContent;
                                    }            
                                    
                                    //console.log(bookModule);
                                    divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!
            
                                    var nb = bookModule.split('<h4>');//делю файл на главы
                                    //console.log(nb);
                                    
                                    nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                    //console.log(nb);
            
                                    //Book
                                    if(bookModule.includes('<h2>')){
                                        var arr_h2 = bookModule.split('<h2>');
            
                                        if(arr_h2[1].includes('</h2>')){
                                            var arr_h2_text = arr_h2[1].split('</h2>');
                                            var BookName = arr_h2_text[0];
                                        }else{
                                            var BookName = arr_h2[1];
                                        }
                                        BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                                        //console.log('BookName: '+BookName); 
                                        
                                        //Book
                                        var h2 = document.createElement('h2');
                                        h2.append(BookName);
            
                                        arr_data_head.push(h2);
                                        //console.log(h2);
            
                                        if(bq.HTMLFilter == 'Y'){
                                            h2.innerHTML = htmlEntities(h2.innerHTML)
                                        }
                                    }
            
                                    //si existe el capitulo
                                    if(typeof nb[chapter] !== 'undefined'){
                                        var ChapterId = chapter;
            
                                        var nb_chapter_verses = nb[chapter].split('<p>');
                                        //console.log(nb_chapter_verses);
            
                                        var only_verses_length = nb_chapter_verses.length - 1;
                                        //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                                        // console.log('only_ divId: '+divId);
            
                                        if(divId == '#col1'){
                                            window.col1_p_length = only_verses_length;
                                        }           
            
            
                                        //Chapter, Verse
                                        nb_chapter_verses.forEach( (el,i) => {
                                            //console.log(el);
                            
                                            //Chapter
                                            if(i == 0){
                                                //console.log('es Chapter: '+el);
            
                                                if(el.includes('</h4>')){
                                                    var arr_h4_text = el.split('</h4>');
                                                    var ChapterText = arr_h4_text[0];
                                                }else{
                                                    var ChapterText = el;
                                                }
                                                //console.log('ChapterText: '+ChapterText);
            
                                                if(ChapterText == ''){
                                                    ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                                }
            
                                                //Chapter
                                                var h4 = document.createElement('h4');
                                                h4.append(ChapterText);
            
                                                arr_data_head.push(h4);
                                                //console.log(h4);
            
                                                //divShow.append(h4);
            
                                                if(bq.HTMLFilter == 'Y'){
                                                    h4.innerHTML = htmlEntities(h4.innerHTML);
                                                }
                                            }
                                            else{//Verse
                                                //console.log('es Verse: '+el);
                            
                                                if(el.includes('</p>')){
                                                    var arr_p_text = el.split('</p>');
                                                    var p_Text = arr_p_text[0];
                                                }else{
                                                    var p_Text = el;
                                                }
                                                //console.log('p_Text: '+p_Text); 
                            
                                                var arr_p = p_Text.split(' ');
                                                var VerseId = arr_p[0];
                                                //console.log('VerseId: '+VerseId);
                            
                                                var VerseText = '';
                                                for(let index = 1; index < arr_p.length; index++){
                                                    VerseText += arr_p[index] + ' ';
                                                }
                                                //console.log('VerseText: '+VerseText);
                            
                                                var p = document.createElement('p');
                                                p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                                p.setAttribute('data-verse',VerseId);
                                
                                                var a = document.createElement('a');
                                                a.href = '#';
                                                a.classList.add = 'blink';
                                                a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                                p.append(a);
                                                p.append(' '); 
            
                                                const span_vt = document.createElement('span');
                                                span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
            
            
                                                //Номера Стронга в стихах (RST+)
                                                if(bq.StrongNumbers == "Y"){
                                                    let t = VerseText;
                                                    var arr_t = t.split(' ');
            
                                                    arr_t.forEach((el,i) => {    
                                                        
                                                        //element of string is Strong Number
                                                        if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                            const span_strong = document.createElement('span');
                                                            if(btnStrongIsActive){
                                                                span_strong.className = 'strong show strongActive'; 
                                                            }else{
                                                                span_strong.className = 'strong'; 
                                                            }
                                                            let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
            
                                                            //si ultimo carácter es string
                                                            if(last_char != '' && isNaN(last_char)){
                                                                let el_number = el.substring(0,el.length-1);
                                                                let el_string = last_char;
                                                                span_strong.innerHTML = el_number;
                                                                p.append(span_strong);
                                                                p.append(el_string);
                                                            }else{//es number
                                                                span_strong.innerHTML = el;
                                                                p.append(span_strong);
                                                            }
            
                                                        }else{//is word
                                                            p.append(' ');
                                                            if(btnStrongIsActive){
                                                                if(el.includes('<S>')){
                                                                    el = el.replace('<S>','<S class="show strongActive">');
                                                                }
                                                            }
                                                            p.append(el);
                                                        }
                                                    });
                                                    p.innerHTML.trim();
            
                                                    //console.log('antes: ' + p.innerHTML);
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                    //console.log('despues: '+p.innerHTML);
            
                                                    if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                        p.querySelectorAll('.strongActive').forEach((el)=>{
                                                            el.addEventListener('click', ()=>{
                                                                //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                                //console.log('1. book: '+book);
                                                                //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                                var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;
            
                                                                if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                    getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                                }else{//rstStrong
                                                                    lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                    getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                                }
                                                            });
                                                        }); 
                                                    }
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                }
            
            
                                                //Примечания редактора в стихах (RSTi2)
                                                if(bq.Notes == 'Y'){
                                                    let t = VerseText;
            
                                                    if(t.includes(bq.NoteSign)){// '*'
                                                        let arr_t0 = t.split(bq.NoteSign);
                                                        let before_Note = arr_t0[0];
            
                                                        if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                            let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                            let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                            let text_Note = arr_t2[0];
                                                            let after_Note = arr_t2[1];
            
                                                            const span_t = document.createElement('span');
                                                            span_t.className = 'tooltip';
                                                            span_t.setAttribute('data-tooltip',text_Note);
                                                            span_t.innerHTML = bq.NoteSign;
            
                                                            span_t.addEventListener('mouseenter', function(){
                                                                showTooltip(this);
                                                            });
                                                            span_t.addEventListener('mouseleave', function(){
                                                                hideTooltip(this);
                                                            });
                                                            /*
                                                            //antes
                                                            p.append(before_Note);
                                                            p.append(span_t);
                                                            p.append(after_Note);
                                                            */
            
                                                            before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                            span_vt.append(before_Note);
                                                            span_vt.append(span_t);
                                                            after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                            span_vt.append(after_Note);
                                                            //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;
            
                                                            p.append(span_vt);//antes
                                                        }
                                                    }else{
                                                        //p.append(VerseText);//antes
                                                        span_vt.append(VerseText);
                                                        p.append(span_vt);
            
                                                        if(bq.HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    //p.append(span_vt);//antes
                                                    //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                }
            
            
                                                //Оглавления в стихах (NRT)
                                                if(bq.Titles == 'Y'){
                                                    let t = VerseText;
            
                                                    if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                        let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                        let before_Title = arr_t1[0];
                                                        let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                        let text_Title = arr_t2[0];
                                                        let after_Title = arr_t2[1];
            
                                                        const span_title = document.createElement('span');
                                                        span_title.className = 'verse_title';
                                                        span_title.innerHTML = text_Title;
            
                                                        p.append(before_Title);
                                                        p.append(span_title);
                                                        p.append(after_Title);
                                                    }else{
                                                        p.append(VerseText);
                                                    }
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
            
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
            
                                                //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);
            
                                                    arr_data_body.push(p);
                                                    //console.log(p);
                                                    
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }        
                                                
                                            }
                            
                                        });
                                        
                                        
                                        //Posle forEach...
                                        //=====================================================//
                                        // 1. inicio - Numeración base Española - y col's Rusa
                                        //=====================================================//
                                        if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                            //console.log('Numeración base es Española - y cols es Rusa');
                                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                            var arr_vstavka = [];
                                            var vstavka2 = [];
                                            
                                            //Miro la traducción con EnglishPsalms
                                            switch (parseInt(book)) {
            
                                                case 3: //Числа
                                                        if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 13){//13:1-33 => 13: +1
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                    break;
            
                                                case 5: //Иисус Навин
                                                        if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                            addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                    
                                                case 8: //1Samuel (1Царств) 
                                                        if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                            //1 verse contiene 2 en ruso
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                            let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                            arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 23){//23:29 => 24:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                            addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 24){//24:1-22	=> 24: +1
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                    break; 
                                                
                                                case 17: //Job 
                                                        if(chapter == 39){
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                            addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                                        }
                                                        if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                            addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
            
                                                case 18: //Psalmos 
                                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                        }
                                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                            arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 10){//10:2-18 => 9: +21
                                                            addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                                        //-1 : Х
                                                        if(
                                                            (chapter == 11) || 
                                                            (chapter >= 14 && chapter <= 17) || 
                                                            (chapter >= 23 && chapter <= 29) || 
                                                            (chapter >= 32 && chapter <= 33) || 
                                                            (chapter == 35) || 
                                                            (chapter == 37) || 
                                                            (chapter == 43) || 
                                                            (chapter == 50) || 
                                                            (chapter == 66) || 
                                                            (chapter >= 71 && chapter <= 74) || 
                                                            (chapter >= 78 && chapter <= 79) || 
                                                            (chapter == 82) || 
                                                            (chapter == 86) || 
                                                            (chapter == 87) || 
                                                            (chapter == 91) || 
                                                            (chapter >= 93 && chapter <= 101) || 
                                                            (chapter >= 103 && chapter <= 107) || 
                                                            (chapter >= 109 && chapter <= 114) || 
                                                            (chapter >= 117 && chapter <= 146)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                                        //-1 : +1
                                                        if(
                                                            (chapter == 12) || 
                                                            (chapter >= 18 && chapter <= 22) || 
                                                            (chapter >= 30 && chapter <= 31) || 
                                                            (chapter == 34) || 
                                                            (chapter == 36) || 
                                                            (chapter >= 38 && chapter <= 42) || 
                                                            (chapter >= 44 && chapter <= 49) || 
                                                            (chapter == 53) || 
                                                            (chapter >= 55 && chapter <= 59) || 
                                                            (chapter >= 61 && chapter <= 65) || 
                                                            (chapter >= 67 && chapter <= 70) || 
                                                            (chapter >= 75 && chapter <= 77) || 
                                                            (chapter >= 80 && chapter <= 81) || 
                                                            (chapter >= 83 && chapter <= 85) || 
                                                            (chapter >= 88 && chapter < 90) || 
                                                            (chapter == 92) || 
                                                            (chapter == 102) || 
                                                            (chapter == 108)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                            arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                            arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                                        }
                                                        //Formula
                                                        //-1 : +2 *
                                                        if(
                                                            (chapter >= 51 && chapter <= 52) ||
                                                            (chapter == 54) || 
                                                            (chapter == 60)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(5,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: +8
                                                        if(chapter == 115){//115:1-18 => 113: +8
                                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: X
                                                        if(chapter == 116){//116:1-9 => 114: Х
                                                            addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                            // Sal.116:1-9 => Пс. 114:1-9
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                            // Sal.116:10-19 => Пс. 115:1-10
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-1: X (especial)
                                                        if(chapter == 147){//147:1-11 => 146:1-11
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            // Sal.147:1-11 => Пс.146:1-11
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                            // Sal.147:12-20 => Пс. 147:1-9
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                            arr_vstavka = arr_vstavka.concat(vstavka2);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 19: //Притчи
                                                        if(chapter == 4){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                            
                                                case 21: //Cantares - Песня песней
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'заглавие...';
                                                            arr_vstavka.splice(0,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//06:13 =>	07:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                            arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 22: //Isaías - Исаия
                                                        if(chapter == 3){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(19,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 26: //Daniel - Даниил
                                                        if(chapter == 3){//3:1-30 => 3:1-30
                                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                            addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 27: //Oseas - Осия
                                                        if(chapter == 13){//13:16 => 14:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 14){//14:1-9 => 14:2-10
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 31: //Jonas - Иона
                                                        if(chapter == 1){//1:17 => 2:1
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 2){//2:1-10 => 2:2-11
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 44: //Romanos - Римлянам
                                                        //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                                        if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 46: //2Corintios - 2-Коринфянам
                                                        //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            let p_vacio = document.createElement('p');
                                                            p_vacio.className = 'prim';
                                                            p_vacio.innerHTML = 'смотри стих выше...';
                                                            arr_vstavka.splice(12,0,p_vacio);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                                
                                                default:
                                                    //console.log('default en switch');
                                                    break;
                                            }//fin switch
                                        }
                                        //=====================================================//
                                        // fin - Numeración base Española - y col's Rusa
                                        //=====================================================//
                                        
                                        
                                        //=====================================================//
                                        // 2. inicio - Numeración base Rusa - y col's Española
                                        //=====================================================//
                                        if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                            //console.log('Numeración base Rusa - y cols Española');
                                            //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                            //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                            var arr_vstavka = [];
                                            var vstavka2 = [];
                                            
                                            //Miro la traducción con EnglishPsalms
                                            switch (parseInt(book)) {
            
                                                case 3: //Числа
                                                        if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                            addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 5: //Иисус Навин
                                                        if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                    
                                                case 8: //1Samuel (1Царств) 
                                                        if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                            //1 verse contiene 2 en ruso
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 23){//
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                            addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
                                                
                                                case 17: //Job 
                                                        if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 40){//40:1-19 => 40:6-24 
                                                            //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                            //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                            //console.log(vstavka2);
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                            //console.log(arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 41){//40:1-26 => 41:9-34
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break; 
            
                                                case 18: //Psalmos 
                                                        if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                                        //+1 : Х
                                                        if(
                                                            (chapter == 10) || 
                                                            (chapter >= 13 && chapter <= 16) || 
                                                            (chapter >= 22 && chapter <= 28) || 
                                                            (chapter >= 31 && chapter <= 32) || 
                                                            (chapter == 34) || 
                                                            (chapter == 36) || 
                                                            (chapter == 42) || 
                                                            (chapter == 49) || 
                                                            (chapter == 65) || 
                                                            (chapter >= 70 && chapter <= 73) || 
                                                            (chapter >= 77 && chapter <= 78) || 
                                                            (chapter == 81) || 
                                                            (chapter == 85) || 
                                                            (chapter == 86) || 
                                                            (chapter == 90) || 
                                                            (chapter >= 92 && chapter <= 100) || 
                                                            (chapter >= 102 && chapter <= 106) || 
                                                            (chapter >= 108 && chapter < 113) || 
                                                            (chapter >= 116 && chapter <= 138) ||
                                                            (chapter >= 140 && chapter <= 145)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                                        //+1 : -1
                                                        if(
                                                            (chapter == 11) || 
                                                            (chapter == 12) || 
                                                            (chapter >= 17 && chapter <= 21) ||
                                                            (chapter >= 29 && chapter <= 30) || 
                                                            (chapter == 33) || 
                                                            (chapter == 35) || 
                                                            (chapter >= 37 && chapter <= 41) || 
                                                            (chapter >= 43 && chapter <= 48) || 
                                                            (chapter == 52) || 
                                                            (chapter >= 54 && chapter <= 58) || 
                                                            (chapter >= 60 && chapter <= 64) || 
                                                            (chapter >= 66 && chapter <= 69) || 
                                                            (chapter >= 74 && chapter <= 76) || 
                                                            (chapter >= 79 && chapter <= 80) || 
                                                            (chapter >= 82 && chapter <= 84) || 
                                                            (chapter >= 87 && chapter < 89) || 
                                                            (chapter == 91) || 
                                                            (chapter == 101) || 
                                                            (chapter == 107) ||
                                                            (chapter == 139)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                                        if(
                                                            (chapter >= 50 && chapter <= 51) ||
                                                            (chapter == 53) || 
                                                            (chapter == 59)
                                                        ){
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                            arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //2en1
                                                        if(chapter == 89){//89:6 => 90:5-6 
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 4){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //+2: -8
                                                        if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula
                                                        //-2: X
                                                        if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                            addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula (especial)
                                                        if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                            addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        //Formula (especial)
                                                        if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                            arr_data_body = arr_vstavka.concat(arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;                                 
            
                                                case 19: //Притчи
                                                        if(chapter == 4){
                                                            //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
                                                
                                                case 21: //Cantares - Песня песней
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            //console.log(arr_vstavka);
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 0){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                            arr_data_body = [].concat(arr_vstavka);//ok
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 6){//06:1-12 => 06:1-12	
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 7){//07:1 => 06:13	
                                                            addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 22: //Isaías - Исаия
                                                        if(chapter == 3){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 18){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                            arr_data_body = [].concat(arr_vstavka);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 26: //Daniel - Даниил
                                                        if(chapter == 3){//3:1-30 => 3:1-30
                                                            //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                            vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                            arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                            addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 4){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 27: //Oseas - Осия
                                                        if(chapter == 14){//14:1 => 13:16 
                                                            addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 31: //Jonas - Иона
                                                        if(chapter == 1){
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                        if(chapter == 2){// 2:1 => 1:17
                                                            addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 44: //Romanos - Римлянам
                                                        if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                            arr_data_body = arr_data_body.concat(arr_vstavka);
                                                            addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                case 46: //2Corintios - 2-Коринфянам
                                                        if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                            arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                            var new_arr = [];
                                                            arr_vstavka.map((el,i,arr) => {
                                                                if(i == 11){
                                                                    const p_new = document.createElement('p');
                                                                    p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                                    new_arr.push(p_new); 
                                                                }else{
                                                                    new_arr.push(el);
                                                                }
                                                            });
                                                            new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                            //console.log(new_arr);
                                                            arr_vstavka = new_arr;
                                                            arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                            arr_data_body.splice(col1_p_length);
                                                        }
                                                    break;
            
                                                default:
                                                    //console.log('default en switch');
                                                    break;
                                            }//fin switch
                                        }
                                        //=====================================================//
                                        // inicio - Numeración base Rusa - y col's Española
                                        //=====================================================//
                                        
            
                                        //console.log('arr_data_head');
                                        //console.log(arr_data_head);
            
                                        //console.log('arr_data_body');
                                        //console.log(arr_data_body);
            
                                        arr_data_body.forEach((el,i)=>{//cambio data-verse
                                            el.setAttribute('data-verse', i + 1 );
                                        });
            
                                        arr_data_all = arr_data_head.concat(arr_data_body);
                                        //console.log('11664. arr_data_all: ',arr_data_all);

                                        arrDataDivShow.push(arr_data_all);
                                        //console.log('11667. arrDataDivShow:',arrDataDivShow);

            
                                        //arr_data_all.forEach((el,i)=>{//antes
                                        //    //console.log(el);
                                        //    divShow.append(el);
                                        //});


                                        arr_data_head = [];
                                        arr_data_body = [];
                                        arr_data_all = [];

                                        arr_trans = arr_trans.filter(el => el);//new
                                        clearColsEmpty();//new
            
                                        //window.iter_i++;
                                        //if(window.iter_i < window.arr_trans.length){
                                        //    //console.log('iter_i: '+iter_i);
                                        //    showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                        //}

                                        window.iter_i++;
                                        if(window.iter_i < window.arr_trans.length && indexColToBuild == null){//recargo todas las columnas 
                                            //console.log('iter_i: '+iter_i);
                                            showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                        }
                    
                                        //si es ultimo elemento del array...
                                        if(countElementsInArray(arrDataDivShow) == arr_trans.length){
                                            //console.log('--- llamo buildDivShow() ---');
                                            buildDivShow(arrDataDivShow, indexColToBuild);
                                        }                                        
            
                                    }else{
                                        //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                                        divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                                    }
                                })
                                .then(() => {
                                    mySizeWindow();
                                    mySizeVerse();
                                })
                                .then(() => {
                                    
                                    if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                                        //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');
                                        //styles of other verses
                                        if(to_verseNumber !== null && to_verseNumber != ""){
                                            //console.log('hay to_verseNumber');
                                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                    Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                                        if(i == parseInt(verseNumber)) {
                                                            el.classList.add('active_first');                
                                                        }else if(i == parseInt(to_verseNumber)) {
                                                            el.classList.add('active_last');                
                                                        }else{
                                                            el.classList.add('active_middle');                
                                                        }
                                                    });
                                                }
                                            } 
                                        }else{
                                            //console.log('no hay to_verseNumber. reviso verseNumber');
                                            //only one verse of each translation
                                            if(verseNumber !== null && verseNumber != ""){
                                                document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                                    el.classList.add('active_one');
                                                });
                                            }
                                        }
                                    }
            
                                    if(verseView !== null && verseView != ""){
                                        //console.log('hay verseView');
                                        //styles of other verses of col1
                                        if(to_verseNumber !== null && to_verseNumber != ""){
                                            //console.log('hay to_verseNumber');
                                            if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                                for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                                    Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                                        if(i == parseInt(verseNumber)) {
                                                            el.classList.add('active_first');                
                                                        }else if(i == parseInt(to_verseNumber)) {
                                                            el.classList.add('active_last');                
                                                        }else{
                                                            el.classList.add('active_middle');                
                                                        }
                                                    });
                                                }
                                            } 
                                        }else{
                                            //console.log('no hay to_verseNumber. reviso verseNumber');
                                            //only one verse of each translation
                                            if(verseNumber !== null && verseNumber != ""){
                                                document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                                    el.classList.add('active_one');
                                                });
                                            }
                                        }                
                                    }
                                })
                                .then(() => {
                                    //si hay versiculo marcado con amarillo...
                                    if(verseNumber !== null &&  verseNumber != "" ){
                                        //scroll to verse o verses activos
                                        scrollToVerse(verseNumber, to_verseNumber);
                                        //y si con el versiculo marcado existe verse de la vista...
                                        if(verseView !== null && verseView != ""){
                                            //scroll to verseView
                                            scrollToVerseView(verseView);
                                        }
                                    }else{
                                        //console.log('no hay verseNumber');
                                        if(verseView !== null && verseView != ""){
                                            //scroll to verseView
                                            scrollToVerseView(verseView);
                                        }
                                    }
                                    
                                })
                                .then(() => {
                                    mySizeWindow();
                                    mySizeVerse();
                                    addListenerToPA();//listen links p > a

                                    //console.log(`--- --- ending myPromise --- divId: ${divId}  --- Translation: ${Translation} `);
                                    // Registra el tiempo de finalización
                                    //const tiempoFin = new Date().getTime();
                                    // Calcula el tiempo de ejecución en milisegundos
                                    //const tiempoEjecucion = (tiempoFin - tiempoInicio) / 1000;//
                                    //console.log('obj_bible_files --- tiempoFin: '+tiempoFin);
                                    //console.log('obj_bible_files --- tiempoEjecucion: '+tiempoEjecucion+' sec.');
                                    //mostrarTamanioObjeto(obj_bible_files);

                                })
                                .catch((error) => {
                                    // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                                    console.log('error promesa en myPromise con obj_bible_files. error: '+error);
                                });

                            }else{
                                console.log('No coincide el nombre del fichero o fileContent está vacío');
                            }

                        }else{
                            //console.log('no esxiste obj_bible_files book');
                        }
                    }
                }
                
                //si no existe objeto con Translation. hago fetch()
                if(typeof obj_bible_files[Translation].Books[book] == 'undefined'){

                    //start de tiempo para calcular cuanto tarda
                    const tiempoInicioFetch = new Date().getTime();
                    //console.log('fetch() --- tiempoInicioFetch: '+tiempoInicioFetch);

                    //url del libro necesario
                    url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm'; 

                    fetch(url)
                    .then((response) => response.text())
                    .then((bookModule) => {

                        if(crear_objeto_obj_bible_files){
                            obj_bible_files[Translation].Books[book] = {
                                'fileName': bq.Books[book].PathName, 
                                'fileContent': bookModule
                            };
                            //console.log('abajo obj_bible_files:');
                            //console.log(obj_bible_files);
                        }
                        
                        //console.log(bookModule);
                        divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!

                        var nb = bookModule.split('<h4>');//делю файл на главы
                        //console.log(nb);
                        
                        nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                        //console.log(nb);

                        //Book
                        if(bookModule.includes('<h2>')){
                            var arr_h2 = bookModule.split('<h2>');

                            if(arr_h2[1].includes('</h2>')){
                                var arr_h2_text = arr_h2[1].split('</h2>');
                                var BookName = arr_h2_text[0];
                            }else{
                                var BookName = arr_h2[1];
                            }
                            BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                            //console.log('BookName: '+BookName); 
                            
                            //Book
                            var h2 = document.createElement('h2');
                            h2.append(BookName);

                            arr_data_head.push(h2);
                            //console.log(h2);

                            if(bq.HTMLFilter == 'Y'){
                                h2.innerHTML = htmlEntities(h2.innerHTML)
                            }
                        }

                        //si existe el capitulo
                        if(typeof nb[chapter] !== 'undefined'){
                            var ChapterId = chapter;

                            var nb_chapter_verses = nb[chapter].split('<p>');
                            //console.log(nb_chapter_verses);

                            var only_verses_length = nb_chapter_verses.length - 1;
                            //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                            // console.log('only_ divId: '+divId);

                            if(divId == '#col1'){
                                window.col1_p_length = only_verses_length;
                                //console.log('only_ col1_p_length: '+window.col1_p_length);
                            }else{
                                //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                            }



                            //Chapter, Verse
                            nb_chapter_verses.forEach( (el,i) => {
                                //console.log(el);
                
                                //Chapter
                                if(i == 0){
                                    //console.log('es Chapter: '+el);

                                    if(el.includes('</h4>')){
                                        var arr_h4_text = el.split('</h4>');
                                        var ChapterText = arr_h4_text[0];
                                    }else{
                                        var ChapterText = el;
                                    }
                                    //console.log('ChapterText: '+ChapterText);

                                    if(ChapterText == ''){
                                        ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                    }

                                    //Chapter
                                    var h4 = document.createElement('h4');
                                    h4.append(ChapterText);

                                    arr_data_head.push(h4);
                                    //console.log(h4);

                                    //divShow.append(h4);

                                    if(bq.HTMLFilter == 'Y'){
                                        h4.innerHTML = htmlEntities(h4.innerHTML);
                                    }
                                }
                                else{//Verse
                                    //console.log('es Verse: '+el);
                
                                    if(el.includes('</p>')){
                                        var arr_p_text = el.split('</p>');
                                        var p_Text = arr_p_text[0];
                                    }else{
                                        var p_Text = el;
                                    }
                                    //console.log('p_Text: '+p_Text); 
                
                                    var arr_p = p_Text.split(' ');
                                    var VerseId = arr_p[0];
                                    //console.log('VerseId: '+VerseId);
                
                                    var VerseText = '';
                                    for(let index = 1; index < arr_p.length; index++){
                                        VerseText += arr_p[index] + ' ';
                                    }
                                    //console.log('VerseText: '+VerseText);
                
                                    var p = document.createElement('p');
                                    p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                    p.setAttribute('data-verse',VerseId);
                    
                                    var a = document.createElement('a');
                                    a.href = '#';
                                    a.classList.add = 'blink';
                                    a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                    p.append(a);
                                    p.append(' '); 

                                    const span_vt = document.createElement('span');
                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                    //Номера Стронга в стихах (RST+)
                                    if(bq.StrongNumbers == "Y"){
                                        let t = VerseText;
                                        var arr_t = t.split(' ');

                                        arr_t.forEach((el,i) => {    
                                            
                                            //element of string is Strong Number
                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                const span_strong = document.createElement('span');
                                                if(btnStrongIsActive){
                                                    span_strong.className = 'strong show strongActive'; 
                                                }else{
                                                    span_strong.className = 'strong'; 
                                                }
                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                //si ultimo carácter es string
                                                if(last_char != '' && isNaN(last_char)){
                                                    let el_number = el.substring(0,el.length-1);
                                                    let el_string = last_char;
                                                    span_strong.innerHTML = el_number;
                                                    p.append(span_strong);
                                                    p.append(el_string);
                                                }else{//es number
                                                    span_strong.innerHTML = el;
                                                    p.append(span_strong);
                                                }

                                            }else{//is word
                                                p.append(' ');
                                                if(btnStrongIsActive){
                                                    if(el.includes('<S>')){
                                                        el = el.replace('<S>','<S class="show strongActive">');
                                                    }
                                                }
                                                p.append(el);
                                            }
                                        });
                                        p.innerHTML.trim();

                                        //console.log('antes: ' + p.innerHTML);
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                        //console.log('despues: '+p.innerHTML);

                                        if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                            p.querySelectorAll('.strongActive').forEach((el)=>{
                                                el.addEventListener('click', ()=>{
                                                    //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                    //console.log('1. book: '+book);
                                                    //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                    var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                    if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                        getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                    }else{//rstStrong
                                                        lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                        getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                    }
                                                });
                                            }); 
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Примечания редактора в стихах (RSTi2)
                                    if(bq.Notes == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.NoteSign)){// '*'
                                            let arr_t0 = t.split(bq.NoteSign);
                                            let before_Note = arr_t0[0];

                                            if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                let text_Note = arr_t2[0];
                                                let after_Note = arr_t2[1];

                                                const span_t = document.createElement('span');
                                                span_t.className = 'tooltip';
                                                span_t.setAttribute('data-tooltip',text_Note);
                                                span_t.innerHTML = bq.NoteSign;

                                                span_t.addEventListener('mouseenter', function(){
                                                    showTooltip(this);
                                                });
                                                span_t.addEventListener('mouseleave', function(){
                                                    hideTooltip(this);
                                                });
                                                /*
                                                //antes
                                                p.append(before_Note);
                                                p.append(span_t);
                                                p.append(after_Note);
                                                */

                                                before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                span_vt.append(before_Note);
                                                span_vt.append(span_t);
                                                after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                span_vt.append(after_Note);
                                                //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                p.append(span_vt);//antes
                                            }
                                        }else{
                                            //p.append(VerseText);//antes
                                            span_vt.append(VerseText);
                                            p.append(span_vt);

                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                        }
                                        //p.append(span_vt);//antes
                                        //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Оглавления в стихах (NRT)
                                    if(bq.Titles == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                            let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                            let before_Title = arr_t1[0];
                                            let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                            let text_Title = arr_t2[0];
                                            let after_Title = arr_t2[1];

                                            const span_title = document.createElement('span');
                                            span_title.className = 'verse_title';
                                            span_title.innerHTML = text_Title;

                                            p.append(before_Title);
                                            p.append(span_title);
                                            p.append(after_Title);
                                        }else{
                                            p.append(VerseText);
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);

                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }

                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                    if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                        //p.append(VerseText);//antes
                                        span_vt.append(VerseText);
                                        p.append(span_vt);

                                        arr_data_body.push(p);
                                        //console.log(p);
                                        
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }        
                                    
                                }
                
                            });
                            
                            
                            //Posle forEach...
                            //=====================================================//
                            // 1. inicio - Numeración base Española - y col's Rusa
                            //=====================================================//
                            if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                //console.log('Numeración base es Española - y cols es Rusa');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//13:1-33 => 13: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//23:29 => 24:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//24:1-22	=> 24: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                            }
                                            if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 10){//10:2-18 => 9: +21
                                                addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                            //-1 : Х
                                            if(
                                                (chapter == 11) || 
                                                (chapter >= 14 && chapter <= 17) || 
                                                (chapter >= 23 && chapter <= 29) || 
                                                (chapter >= 32 && chapter <= 33) || 
                                                (chapter == 35) || 
                                                (chapter == 37) || 
                                                (chapter == 43) || 
                                                (chapter == 50) || 
                                                (chapter == 66) || 
                                                (chapter >= 71 && chapter <= 74) || 
                                                (chapter >= 78 && chapter <= 79) || 
                                                (chapter == 82) || 
                                                (chapter == 86) || 
                                                (chapter == 87) || 
                                                (chapter == 91) || 
                                                (chapter >= 93 && chapter <= 101) || 
                                                (chapter >= 103 && chapter <= 107) || 
                                                (chapter >= 109 && chapter <= 114) || 
                                                (chapter >= 117 && chapter <= 146)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                            //-1 : +1
                                            if(
                                                (chapter == 12) || 
                                                (chapter >= 18 && chapter <= 22) || 
                                                (chapter >= 30 && chapter <= 31) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter >= 38 && chapter <= 42) || 
                                                (chapter >= 44 && chapter <= 49) || 
                                                (chapter == 53) || 
                                                (chapter >= 55 && chapter <= 59) || 
                                                (chapter >= 61 && chapter <= 65) || 
                                                (chapter >= 67 && chapter <= 70) || 
                                                (chapter >= 75 && chapter <= 77) || 
                                                (chapter >= 80 && chapter <= 81) || 
                                                (chapter >= 83 && chapter <= 85) || 
                                                (chapter >= 88 && chapter < 90) || 
                                                (chapter == 92) || 
                                                (chapter == 102) || 
                                                (chapter == 108)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                            }
                                            //Formula
                                            //-1 : +2 *
                                            if(
                                                (chapter >= 51 && chapter <= 52) ||
                                                (chapter == 54) || 
                                                (chapter == 60)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(5,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: +8
                                            if(chapter == 115){//115:1-18 => 113: +8
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 116){//116:1-9 => 114: Х
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                // Sal.116:1-9 => Пс. 114:1-9
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                // Sal.116:10-19 => Пс. 115:1-10
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-1: X (especial)
                                            if(chapter == 147){//147:1-11 => 146:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                // Sal.147:1-11 => Пс.146:1-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                // Sal.147:12-20 => Пс. 147:1-9
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'заглавие...';
                                                arr_vstavka.splice(0,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:13 =>	07:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(19,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 13){//13:16 => 14:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 14){//14:1-9 => 14:2-10
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){//1:17 => 2:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){//2:1-10 => 2:2-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                            if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(12,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // fin - Numeración base Española - y col's Rusa
                            //=====================================================//
                            
                            
                            //=====================================================//
                            // 2. inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                //console.log('Numeración base Rusa - y cols Española');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-19 => 40:6-24 
                                                //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                //console.log(vstavka2);
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                //console.log(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 41){//40:1-26 => 41:9-34
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                            //+1 : Х
                                            if(
                                                (chapter == 10) || 
                                                (chapter >= 13 && chapter <= 16) || 
                                                (chapter >= 22 && chapter <= 28) || 
                                                (chapter >= 31 && chapter <= 32) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter == 42) || 
                                                (chapter == 49) || 
                                                (chapter == 65) || 
                                                (chapter >= 70 && chapter <= 73) || 
                                                (chapter >= 77 && chapter <= 78) || 
                                                (chapter == 81) || 
                                                (chapter == 85) || 
                                                (chapter == 86) || 
                                                (chapter == 90) || 
                                                (chapter >= 92 && chapter <= 100) || 
                                                (chapter >= 102 && chapter <= 106) || 
                                                (chapter >= 108 && chapter < 113) || 
                                                (chapter >= 116 && chapter <= 138) ||
                                                (chapter >= 140 && chapter <= 145)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                            //+1 : -1
                                            if(
                                                (chapter == 11) || 
                                                (chapter == 12) || 
                                                (chapter >= 17 && chapter <= 21) ||
                                                (chapter >= 29 && chapter <= 30) || 
                                                (chapter == 33) || 
                                                (chapter == 35) || 
                                                (chapter >= 37 && chapter <= 41) || 
                                                (chapter >= 43 && chapter <= 48) || 
                                                (chapter == 52) || 
                                                (chapter >= 54 && chapter <= 58) || 
                                                (chapter >= 60 && chapter <= 64) || 
                                                (chapter >= 66 && chapter <= 69) || 
                                                (chapter >= 74 && chapter <= 76) || 
                                                (chapter >= 79 && chapter <= 80) || 
                                                (chapter >= 82 && chapter <= 84) || 
                                                (chapter >= 87 && chapter < 89) || 
                                                (chapter == 91) || 
                                                (chapter == 101) || 
                                                (chapter == 107) ||
                                                (chapter == 139)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                            if(
                                                (chapter >= 50 && chapter <= 51) ||
                                                (chapter == 53) || 
                                                (chapter == 59)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 89){//89:6 => 90:5-6 
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 4){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+2: -8
                                            if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;                                 

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //console.log(arr_vstavka);
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 0){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                arr_data_body = [].concat(arr_vstavka);//ok
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:1-12 => 06:1-12	
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//07:1 => 06:13	
                                                addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 18){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 14){//14:1 => 13:16 
                                                addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){// 2:1 => 1:17
                                                addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 11){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            

                            //console.log('arr_data_head');
                            //console.log(arr_data_head);

                            //console.log('arr_data_body');
                            //console.log(arr_data_body);

                            arr_data_body.forEach((el,i)=>{//cambio data-verse
                                el.setAttribute('data-verse', i + 1 );
                            });

                            arr_data_all = arr_data_head.concat(arr_data_body);
                            //console.log('12861. arr_data_all: ',arr_data_all);

                            arrDataDivShow.push(arr_data_all);
                            //console.log('12864. arrDataDivShow:',arrDataDivShow);


                            //arr_data_all.forEach((el,i)=>{//antes
                            //    //document.querySelector('#col1 .colsInner').append(el);
                            //    //console.log(el);
                            //    divShow.append(el);
                            //});


                            arr_data_head = [];
                            arr_data_body = [];
                            arr_data_all = [];

                            arr_trans = arr_trans.filter(el => el);//new
                            clearColsEmpty();//new                

                            //window.iter_i++;
                            //if(window.iter_i < window.arr_trans.length){
                            //    //console.log('iter_i: '+iter_i);
                            //    showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                            //}

                            window.iter_i++;
                            if(window.iter_i < window.arr_trans.length && indexColToBuild == null){//recargo todas las columnas 
                                //console.log('iter_i: '+iter_i);
                                showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                            }
        
                            //si es ultimo elemento del array...
                            if(countElementsInArray(arrDataDivShow) == arr_trans.length){
                                //console.log('--- llamo buildDivShow() ---');
                                buildDivShow(arrDataDivShow, indexColToBuild);
                            }                                        


                        }else{
                            //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                            divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                        }
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                    })
                    .then(() => {
                        
                        if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                            //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                            //styles of other verses
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        
                            //scroll to verse o verses activos
                            //scrollToVerse(verseNumber, to_verseNumber);
                        }

                        if(verseView !== null && verseView != ""){
                            //console.log('hay verseView');

                            //styles of other verses of col1
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        }
                    })
                    .then(() => {
                        //si hay versiculo marcado con amarillo...
                        if(verseNumber !== null &&  verseNumber != "" ){
                            //scroll to verse o verses activos
                            scrollToVerse(verseNumber, to_verseNumber);
                            //y si con el versiculo marcado existe verse de la vista...
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }else{
                            //console.log('no hay verseNumber');
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }
                        
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                        addListenerToPA();//listen links p > a
                        
                        //console.log('2. ending fetch()');
                        // Registra el tiempo de finalización
                        //const tiempoFinFetch = new Date().getTime();
                        // Calcula el tiempo de ejecución en milisegundos
                        //const tiempoEjecucionFetch = (tiempoFinFetch - tiempoInicioFetch) / 1000;//
                        //console.log('fetch() --- tiempoFinFetch: '+tiempoFinFetch);
                        //console.log('fetch() --- tiempoEjecucionFetch: '+tiempoEjecucionFetch+' sec.');

                    })
                    .catch(error => { 
                        //Código a realizar cuando se rechaza la promesa
                        console.log('error promesa en fetch() con obj_bible_files. error: '+error);
                    });                    
                }
                //console.log('despues de fetch --- abajo obj_bible_files:');
                //console.log(obj_bible_files); 


            }else{//si no está el id de book en el modulo...
                document.querySelectorAll('.colsInner').forEach(el=>{
                    if(el.childElementCount == 0 || el.textContent == ''){
                        var p = document.createElement('p');
                        p.className = 'prim';
                        p.innerHTML = `2. En este módulo no existe el libro indicado.`;
                        el.append(p);
                        //alert(' vacio');
                    }else{
                        //alert(' no vacio');
                    }
                });
            }
    
        }else{//MODO OLD. como en Text3()
            console.log('MODO OLD. como en Text3()');

            //saco ajustes de este modulo en json
            url_bq = `modules/text/${Translation}/bibleqt.json`;
            fetch(url_bq)
            .then((response) => response.json())
            .then((bq) => {
                //console.log(' abajo bq:');
                //console.log(bq);

                //window.bq = bq;
                if(divTrans != null){
                    // divTrans.innerHTML = bq.BibleShortName;
                    divTransDesk.innerHTML = bq.BibleShortName;
                    divTransMob.innerHTML = bq.BibleShortName;
                }
                
                //si el id de book está entre numero de books del modulo, lo muestro
                if(parseInt(book) < bq.BookQty){//0-65 < 66
                    
                    //url del libro necesario
                    url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm';  

                    fetch(url)
                    .then((response) => response.text())
                    .then((bookModule) => {
                        
                        //console.log(bookModule);
                        divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!

                        var nb = bookModule.split('<h4>');//делю файл на главы
                        //console.log(nb);
                        
                        nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                        //console.log(nb);

                        //Book
                        if(bookModule.includes('<h2>')){
                            var arr_h2 = bookModule.split('<h2>');

                            if(arr_h2[1].includes('</h2>')){
                                var arr_h2_text = arr_h2[1].split('</h2>');
                                var BookName = arr_h2_text[0];
                            }else{
                                var BookName = arr_h2[1];
                            }
                            BookName = (BookName == '') ? bq.Books[book].FullName : BookName ;
                            //console.log('BookName: '+BookName); 
                            
                            //Book
                            var h2 = document.createElement('h2');
                            h2.append(BookName);

                            arr_data_head.push(h2);
                            //console.log(h2);

                            if(bq.HTMLFilter == 'Y'){
                                h2.innerHTML = htmlEntities(h2.innerHTML)
                            }
                        }

                        //si existe el capitulo
                        if(typeof nb[chapter] !== 'undefined'){
                            var ChapterId = chapter;

                            var nb_chapter_verses = nb[chapter].split('<p>');
                            //console.log(nb_chapter_verses);

                            var only_verses_length = nb_chapter_verses.length - 1;
                            //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                            // console.log('only_ divId: '+divId);

                            if(divId == '#col1'){
                                window.col1_p_length = only_verses_length;
                                //console.log('only_ col1_p_length: '+window.col1_p_length);
                            }else{
                                //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                            }



                            //Chapter, Verse
                            nb_chapter_verses.forEach( (el,i) => {
                                //console.log(el);
                
                                //Chapter
                                if(i == 0){
                                    //console.log('es Chapter: '+el);

                                    if(el.includes('</h4>')){
                                        var arr_h4_text = el.split('</h4>');
                                        var ChapterText = arr_h4_text[0];
                                    }else{
                                        var ChapterText = el;
                                    }
                                    //console.log('ChapterText: '+ChapterText);

                                    if(ChapterText == ''){
                                        ChapterText = bq.Books[book].FullName + ' ' + chapter;
                                    }

                                    //Chapter
                                    var h4 = document.createElement('h4');
                                    h4.append(ChapterText);

                                    arr_data_head.push(h4);
                                    //console.log(h4);

                                    //divShow.append(h4);

                                    if(bq.HTMLFilter == 'Y'){
                                        h4.innerHTML = htmlEntities(h4.innerHTML);
                                    }
                                }
                                else{//Verse
                                    //console.log('es Verse: '+el);
                
                                    if(el.includes('</p>')){
                                        var arr_p_text = el.split('</p>');
                                        var p_Text = arr_p_text[0];
                                    }else{
                                        var p_Text = el;
                                    }
                                    //console.log('p_Text: '+p_Text); 
                
                                    var arr_p = p_Text.split(' ');
                                    var VerseId = arr_p[0];
                                    //console.log('VerseId: '+VerseId);
                
                                    var VerseText = '';
                                    for(let index = 1; index < arr_p.length; index++){
                                        VerseText += arr_p[index] + ' ';
                                    }
                                    //console.log('VerseText: '+VerseText);
                
                                    var p = document.createElement('p');
                                    p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                    p.setAttribute('data-verse',VerseId);
                    
                                    var a = document.createElement('a');
                                    a.href = '#';
                                    a.classList.add = 'blink';
                                    a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                    p.append(a);
                                    p.append(' '); 

                                    const span_vt = document.createElement('span');
                                    span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                                    //Номера Стронга в стихах (RST+)
                                    if(bq.StrongNumbers == "Y"){
                                        let t = VerseText;
                                        var arr_t = t.split(' ');

                                        arr_t.forEach((el,i) => {    
                                            
                                            //element of string is Strong Number
                                            if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                const span_strong = document.createElement('span');
                                                if(btnStrongIsActive){
                                                    span_strong.className = 'strong show strongActive'; 
                                                }else{
                                                    span_strong.className = 'strong'; 
                                                }
                                                let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                                //si ultimo carácter es string
                                                if(last_char != '' && isNaN(last_char)){
                                                    let el_number = el.substring(0,el.length-1);
                                                    let el_string = last_char;
                                                    span_strong.innerHTML = el_number;
                                                    p.append(span_strong);
                                                    p.append(el_string);
                                                }else{//es number
                                                    span_strong.innerHTML = el;
                                                    p.append(span_strong);
                                                }

                                            }else{//is word
                                                p.append(' ');
                                                if(btnStrongIsActive){
                                                    if(el.includes('<S>')){
                                                        el = el.replace('<S>','<S class="show strongActive">');
                                                    }
                                                }
                                                p.append(el);
                                            }
                                        });
                                        p.innerHTML.trim();

                                        //console.log('antes: ' + p.innerHTML);
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                        //console.log('despues: '+p.innerHTML);

                                        if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                            p.querySelectorAll('.strongActive').forEach((el)=>{
                                                el.addEventListener('click', ()=>{
                                                    //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                                    //console.log('1. book: '+book);
                                                    //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                                    var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                                    if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                        getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                                    }else{//rstStrong
                                                        lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                        getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                                    }
                                                });
                                            }); 
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Примечания редактора в стихах (RSTi2)
                                    if(bq.Notes == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.NoteSign)){// '*'
                                            let arr_t0 = t.split(bq.NoteSign);
                                            let before_Note = arr_t0[0];

                                            if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                let text_Note = arr_t2[0];
                                                let after_Note = arr_t2[1];

                                                const span_t = document.createElement('span');
                                                span_t.className = 'tooltip';
                                                span_t.setAttribute('data-tooltip',text_Note);
                                                span_t.innerHTML = bq.NoteSign;

                                                span_t.addEventListener('mouseenter', function(){
                                                    showTooltip(this);
                                                });
                                                span_t.addEventListener('mouseleave', function(){
                                                    hideTooltip(this);
                                                });
                                                /*
                                                //antes
                                                p.append(before_Note);
                                                p.append(span_t);
                                                p.append(after_Note);
                                                */

                                                before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                span_vt.append(before_Note);
                                                span_vt.append(span_t);
                                                after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                span_vt.append(after_Note);
                                                //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                                p.append(span_vt);//antes
                                            }
                                        }else{
                                            //p.append(VerseText);//antes
                                            span_vt.append(VerseText);
                                            p.append(span_vt);

                                            if(bq.HTMLFilter == 'Y'){
                                                p.innerHTML = htmlEntities(p.innerHTML);
                                            }
                                        }
                                        //p.append(span_vt);//antes
                                        //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                        arr_data_body.push(p);
                                        //console.log(p);
                                    }


                                    //Оглавления в стихах (NRT)
                                    if(bq.Titles == 'Y'){
                                        let t = VerseText;

                                        if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                            let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                            let before_Title = arr_t1[0];
                                            let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                            let text_Title = arr_t2[0];
                                            let after_Title = arr_t2[1];

                                            const span_title = document.createElement('span');
                                            span_title.className = 'verse_title';
                                            span_title.innerHTML = text_Title;

                                            p.append(before_Title);
                                            p.append(span_title);
                                            p.append(after_Title);
                                        }else{
                                            p.append(VerseText);
                                        }

                                        arr_data_body.push(p);
                                        //console.log(p);

                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }

                                    //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                    if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                        //p.append(VerseText);//antes
                                        span_vt.append(VerseText);
                                        p.append(span_vt);

                                        arr_data_body.push(p);
                                        //console.log(p);
                                        
                                        if(bq.HTMLFilter == 'Y'){
                                            p.innerHTML = htmlEntities(p.innerHTML);
                                        }
                                    }        
                                    
                                }
                
                            });
                            
                            
                            //Posle forEach...
                            //=====================================================//
                            // 1. inicio - Numeración base Española - y col's Rusa
                            //=====================================================//
                            if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                                //console.log('Numeración base es Española - y cols es Rusa');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//Числа 12:16 => Num. 13:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//13:1-33 => 13: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                                addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                                let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                                arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//23:29 => 24:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                                addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//24:1-22	=> 24: +1
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                                addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                            }
                                            if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                                addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 10){//10:2-18 => 9: +21
                                                addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                            //-1 : Х
                                            if(
                                                (chapter == 11) || 
                                                (chapter >= 14 && chapter <= 17) || 
                                                (chapter >= 23 && chapter <= 29) || 
                                                (chapter >= 32 && chapter <= 33) || 
                                                (chapter == 35) || 
                                                (chapter == 37) || 
                                                (chapter == 43) || 
                                                (chapter == 50) || 
                                                (chapter == 66) || 
                                                (chapter >= 71 && chapter <= 74) || 
                                                (chapter >= 78 && chapter <= 79) || 
                                                (chapter == 82) || 
                                                (chapter == 86) || 
                                                (chapter == 87) || 
                                                (chapter == 91) || 
                                                (chapter >= 93 && chapter <= 101) || 
                                                (chapter >= 103 && chapter <= 107) || 
                                                (chapter >= 109 && chapter <= 114) || 
                                                (chapter >= 117 && chapter <= 146)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                            //-1 : +1
                                            if(
                                                (chapter == 12) || 
                                                (chapter >= 18 && chapter <= 22) || 
                                                (chapter >= 30 && chapter <= 31) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter >= 38 && chapter <= 42) || 
                                                (chapter >= 44 && chapter <= 49) || 
                                                (chapter == 53) || 
                                                (chapter >= 55 && chapter <= 59) || 
                                                (chapter >= 61 && chapter <= 65) || 
                                                (chapter >= 67 && chapter <= 70) || 
                                                (chapter >= 75 && chapter <= 77) || 
                                                (chapter >= 80 && chapter <= 81) || 
                                                (chapter >= 83 && chapter <= 85) || 
                                                (chapter >= 88 && chapter < 90) || 
                                                (chapter == 92) || 
                                                (chapter == 102) || 
                                                (chapter == 108)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                                arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                                arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                            }
                                            //Formula
                                            //-1 : +2 *
                                            if(
                                                (chapter >= 51 && chapter <= 52) ||
                                                (chapter == 54) || 
                                                (chapter == 60)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(5,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: +8
                                            if(chapter == 115){//115:1-18 => 113: +8
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 116){//116:1-9 => 114: Х
                                                addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                                // Sal.116:1-9 => Пс. 114:1-9
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                                // Sal.116:10-19 => Пс. 115:1-10
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-1: X (especial)
                                            if(chapter == 147){//147:1-11 => 146:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                // Sal.147:1-11 => Пс.146:1-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                                // Sal.147:12-20 => Пс. 147:1-9
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                                arr_vstavka = arr_vstavka.concat(vstavka2);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'заглавие...';
                                                arr_vstavka.splice(0,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:13 =>	07:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                                arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(19,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                                addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 13){//13:16 => 14:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 14){//14:1-9 => 14:2-10
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){//1:17 => 2:1
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){//2:1-10 => 2:2-11
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                            if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                let p_vacio = document.createElement('p');
                                                p_vacio.className = 'prim';
                                                p_vacio.innerHTML = 'смотри стих выше...';
                                                arr_vstavka.splice(12,0,p_vacio);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // fin - Numeración base Española - y col's Rusa
                            //=====================================================//
                            
                            
                            //=====================================================//
                            // 2. inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                                //console.log('Numeración base Rusa - y cols Española');
                                //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                                //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                                var arr_vstavka = [];
                                var vstavka2 = [];
                                
                                //Miro la traducción con EnglishPsalms
                                switch (parseInt(book)) {

                                    case 3: //Числа
                                            if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 13){//Числа 13:1 => Num.12:16 
                                                addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16);
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 5: //Иисус Навин
                                            if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                        
                                    case 8: //1Samuel (1Царств) 
                                            if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                                //1 verse contiene 2 en ruso
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 23){//
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                                addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 
                                    
                                    case 17: //Job 
                                            if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 40){//40:1-19 => 40:6-24 
                                                //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                                //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                                //console.log(vstavka2);
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                                //console.log(arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 41){//40:1-26 => 41:9-34
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break; 

                                    case 18: //Psalmos 
                                            if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                            //+1 : Х
                                            if(
                                                (chapter == 10) || 
                                                (chapter >= 13 && chapter <= 16) || 
                                                (chapter >= 22 && chapter <= 28) || 
                                                (chapter >= 31 && chapter <= 32) || 
                                                (chapter == 34) || 
                                                (chapter == 36) || 
                                                (chapter == 42) || 
                                                (chapter == 49) || 
                                                (chapter == 65) || 
                                                (chapter >= 70 && chapter <= 73) || 
                                                (chapter >= 77 && chapter <= 78) || 
                                                (chapter == 81) || 
                                                (chapter == 85) || 
                                                (chapter == 86) || 
                                                (chapter == 90) || 
                                                (chapter >= 92 && chapter <= 100) || 
                                                (chapter >= 102 && chapter <= 106) || 
                                                (chapter >= 108 && chapter < 113) || 
                                                (chapter >= 116 && chapter <= 138) ||
                                                (chapter >= 140 && chapter <= 145)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                            //+1 : -1
                                            if(
                                                (chapter == 11) || 
                                                (chapter == 12) || 
                                                (chapter >= 17 && chapter <= 21) ||
                                                (chapter >= 29 && chapter <= 30) || 
                                                (chapter == 33) || 
                                                (chapter == 35) || 
                                                (chapter >= 37 && chapter <= 41) || 
                                                (chapter >= 43 && chapter <= 48) || 
                                                (chapter == 52) || 
                                                (chapter >= 54 && chapter <= 58) || 
                                                (chapter >= 60 && chapter <= 64) || 
                                                (chapter >= 66 && chapter <= 69) || 
                                                (chapter >= 74 && chapter <= 76) || 
                                                (chapter >= 79 && chapter <= 80) || 
                                                (chapter >= 82 && chapter <= 84) || 
                                                (chapter >= 87 && chapter < 89) || 
                                                (chapter == 91) || 
                                                (chapter == 101) || 
                                                (chapter == 107) ||
                                                (chapter == 139)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                            if(
                                                (chapter >= 50 && chapter <= 51) ||
                                                (chapter == 53) || 
                                                (chapter == 59)
                                            ){
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                                arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //2en1
                                            if(chapter == 89){//89:6 => 90:5-6 
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 4){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //+2: -8
                                            if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula
                                            //-2: X
                                            if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                                addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                                addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            //Formula (especial)
                                            if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                                arr_data_body = arr_vstavka.concat(arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;                                 

                                    case 19: //Притчи
                                            if(chapter == 4){
                                                //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-2) );
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio(), vstavka_vacio());
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;
                                    
                                    case 21: //Cantares - Песня песней
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                //console.log(arr_vstavka);
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 0){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                                arr_data_body = [].concat(arr_vstavka);//ok
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 6){//06:1-12 => 06:1-12	
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 7){//07:1 => 06:13	
                                                addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 22: //Isaías - Исаия
                                            if(chapter == 3){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 18){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                                arr_data_body = [].concat(arr_vstavka);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 26: //Daniel - Даниил
                                            if(chapter == 3){//3:1-30 => 3:1-30
                                                //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                                vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                                arr_data_body = [].concat(arr_vstavka, vstavka2);
                                                addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 4){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 27: //Oseas - Осия
                                            if(chapter == 14){//14:1 => 13:16 
                                                addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 31: //Jonas - Иона
                                            if(chapter == 1){
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, form_list_verses(1, col1_p_length));
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                            if(chapter == 2){// 2:1 => 1:17
                                                addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 44: //Romanos - Римлянам
                                            if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                                arr_data_body = arr_data_body.concat(arr_vstavka);
                                                addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    case 46: //2Corintios - 2-Коринфянам
                                            if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                                arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                                var new_arr = [];
                                                arr_vstavka.map((el,i,arr) => {
                                                    if(i == 11){
                                                        const p_new = document.createElement('p');
                                                        p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                        new_arr.push(p_new); 
                                                    }else{
                                                        new_arr.push(el);
                                                    }
                                                });
                                                new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                                //console.log(new_arr);
                                                arr_vstavka = new_arr;
                                                arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                                arr_data_body.splice(col1_p_length);
                                            }
                                        break;

                                    default:
                                        //console.log('default en switch');
                                        break;
                                }//fin switch
                            }
                            //=====================================================//
                            // inicio - Numeración base Rusa - y col's Española
                            //=====================================================//
                            

                            //console.log('arr_data_head');
                            //console.log(arr_data_head);

                            //console.log('arr_data_body');
                            //console.log(arr_data_body);

                            arr_data_body.forEach((el,i)=>{//cambio data-verse
                                el.setAttribute('data-verse', i + 1 );
                            });

                            arr_data_all = arr_data_head.concat(arr_data_body);

                            arr_data_all.forEach((el,i)=>{
                                //console.log(el);
                                divShow.append(el);
                            });
                            arr_data_head = [];
                            arr_data_body = [];
                            arr_data_all = [];
                            

                            window.iter_i++;
                            if(window.iter_i < window.arr_trans.length){
                                //console.log('iter_i: '+iter_i);
                                //showChapterText3(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                                showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                            }

                        }else{
                            //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                            divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                        }
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                        /*
                        //si es ultimo elemento, añado padding-bottom
                        let p_last = divShow.querySelector('p:last-child');
                        let mb_h = divShow.offsetHeight - p_last.offsetHeight;
                        console.log('mb_h: '+mb_h)
                        p_last.style.marginBottom = mb_h + 'px';
                        p_last.style.background = 'lightgreen';
                        */
                    })
                    .then(() => {
                        
                        if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                            //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                            //styles of other verses
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        
                            //scroll to verse o verses activos
                            //scrollToVerse(verseNumber, to_verseNumber);
                        }

                        if(verseView !== null && verseView != ""){
                            //console.log('hay verseView');

                            //styles of other verses of col1
                            if(to_verseNumber !== null && to_verseNumber != ""){
                                //console.log('hay to_verseNumber');
                                if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                                    for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                        Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                            if(i == parseInt(verseNumber)) {
                                                el.classList.add('active_first');                
                                            }else if(i == parseInt(to_verseNumber)) {
                                                el.classList.add('active_last');                
                                            }else{
                                                el.classList.add('active_middle');                
                                            }
                                        });
                                    }
                                } 
                            }else{
                                //console.log('no hay to_verseNumber. reviso verseNumber');
                                //only one verse of each translation
                                if(verseNumber !== null && verseNumber != ""){
                                    document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                        el.classList.add('active_one');
                                    });
                                }
                            }                
                        }
                    })
                    .then(() => {
                        //si hay versiculo marcado con amarillo...
                        if(verseNumber !== null &&  verseNumber != "" ){
                            //scroll to verse o verses activos
                            scrollToVerse(verseNumber, to_verseNumber);

                            //y si con el versiculo marcado existe verse de la vista...
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }else{
                            //console.log('no hay verseNumber');
                            if(verseView !== null && verseView != ""){
                                //scroll to verseView
                                scrollToVerseView(verseView);
                            }
                        }
                        
                    })
                    .then(() => {
                        mySizeWindow();
                        mySizeVerse();
                        addListenerToPA();//listen links p > a
                    })
                    .catch((error) => {
                        // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                        console.log('error promesa en fetch() modo old. error: '+error);
                    });

                }else{//si no está el id de book en el modulo...
                    document.querySelectorAll('.colsInner').forEach(el=>{
                        if(el.childElementCount == 0 || el.textContent == ''){
                            var p = document.createElement('p');
                            p.className = 'prim';
                            p.innerHTML = `3.2 En este módulo no existe el libro indicado.`;
                            el.append(p);
                            //alert(' vacio');
                        }else{
                            //alert(' no vacio');
                        }
                    });
                }            
            })
            .catch(error => {
                console.log('14212. Error: ', error);
            });

        }//fin - modo old

    }//end --- typeof Translation
    else{
        console.log('la traducción no está seleccionada. Translation: '+Translation); 
        //alert(`La traducción no está seleccionada. Selecciónala presionando sobre el símbolo '+' o nombre corto de la traducción.`);       
    }    

}






function viaByJson_showChapterText4(Translation, divId, book, chapter, verseNumber, to_verseNumber, verseView, indexColToBuild){
    console.log('=== viaByJson_showChapterText4 === ');

    var divTrans = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransDesk = document.querySelector(divId+' .colsHead .colsHeadInner .partDesk .desk_trans');//ej: RST+
    var divTransMob = document.querySelector(divId+' .colsHead .colsHeadInner .partMob .mob_trans');
    var divShow = document.querySelector(divId+' .colsInner');//donde se ve el texto de la Biblia
    //divShow.innerHTML = '';//antes
    
    //reseteo todas las columnas con sig. func
    if(indexColToBuild == null){
        clearAllDivShow();//hacerlo SOLO cuando se cargan todos los cols ya que borra el el contenido de todas cols cando se recarga solo 1 col al cambiar solo la trans de una col!
    }    

    var btnStrongIsActive = false;
    if(btnStrong.classList.contains('btn_active')){
        btnStrongIsActive = true;
    }

    window.base_ep = div_trans1.dataset.base_ep;
    //console.log('base_ep: '+base_ep);

    window.arr_data_head = [];//incluye h2 y h4
    window.arr_data_body = [];//incluye p
    window.arr_data_all = [];//incluye todo: h2 y h4 y p
    
    
    if(Translation != null){

        //console.log('saco datos por json por fetch()');
        
        var objTrans = arrFavTransObj.find(v => v.Translation === Translation);//para test
        
        if(typeof objTrans == 'undefined'){
            console.log('objTrans todavia no existe. return false.');
            return false;//test
        }

        //saco ajustes de este modulo en json               
        var bq = objTrans;
        //console.log(' abajo bq:');
        //console.log(bq);

        //window.bq = bq;
        if(divTrans != null){
            // divTrans.innerHTML = bq.BibleShortName;
            divTransDesk.innerHTML = bq.BibleShortName;
            divTransMob.innerHTML = bq.BibleShortName;
        }
        
        //si el id de book está entre numero de books del modulo, lo muestro
        //if(parseInt(book) < bq.BookQty){//0-65 < 66 //antes
        if(typeof bq.Books[book] != 'undefined'){//0-65 < 66    
            
            //url del libro necesario
            url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//nrt_01.htm'; //new

            if(url.includes('no_disponible.htm')){
                //console.log('url includes no_disponible.htm');
                showTextInAllDivShow('<p class="prim_error_compare">Для сравнения текста переводов необходимо указать книги, имеющиеся в выбранных переводах Библии.</p>');
                divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                return false;
            } 

            //Meto parametros para sacar datos por el fetch de solo un capitulo en vez de todo el fichero
            let formData = new FormData();
            formData.append('url', '../'+url );
            formData.append('base_ep', base_ep);
            formData.append('bq_EnglishPsalms', bq.EnglishPsalms);
            if(book != null) formData.append('book', book);
            formData.append('chapter', chapter);
            //AKI NO HACE FALTA NI VERSENUMBER NI TO_VERSENUMBER YA QUE MUESTRO TODO EL CAPITULO Y ALLI VOY AL VERSE INDICADO!!!
            //if(typeof verseNumber != 'undefined' && verseNumber != null) formData.append('verse', verseNumber);
            //if(typeof to_verseNumber != 'undefined' && to_verseNumber != null) formData.append('to_verse', to_verseNumber);
            if(typeof col1_p_length != 'undefined' && col1_p_length != null) formData.append('col1_p_length', col1_p_length);
            
            fetch('app/read_file_to_json.php',{
                method: 'POST',
                body: formData
            })
            .then((response) => response.json())
            .then((dataRead) => {

                //console.log('10197. abajo dataRead');
                //console.log(dataRead);
                
                //var bookModule = dataRead.chapterData.p_text_all;//NO HACE FALTA AQUI!!!
                // console.log('6577. abajo bookModule:');
                // console.log(bookModule);

                divShow.innerHTML = '';//IMPORTANTE! PARA QUE NO SE DUPLIQUE EL CONTENIDO DE UNA TRANS!//antes
                //console.log('lo reseteo en buildDivShow'); 

                var BookName = dataRead.chapterData.h2_text;
                if(BookName == '') BookName = bq.Books[book].FullName;
                
                //Book
                var h2 = document.createElement('h2');
                h2.append(BookName);

                arr_data_head.push(h2);

                var nb = dataRead.chapterData;
                // var nb = dataRead.chapterData.p_text_all;//ANTES
                //console.log('abajo dataRead.chapterData.p_text_all:');
                //console.log(dataRead.chapterData.p_text_all);
                //console.log('abajo dataRead.chapterData.arr_p_verses:');
                //console.log(dataRead.chapterData.arr_p_verses);

                var arr_p_verses = (typeof dataRead.vstavkaData != 'undefined') ? dataRead.vstavkaData.arr_p_verses : [] ;
                var arr_p_verses2 = (typeof dataRead.vstavkaData2 != 'undefined') ? dataRead.vstavkaData2.arr_p_verses : [] ;

                //si existe el capitulo
                if(typeof nb !== 'undefined'){//si existe texto devuelto pot php
                    
                    if(chapter > nb.ChapterQty) chapter = nb.ChapterQty;
                    if(verseNumber != null && verseNumber > nb.VerseQty) verseNumber = nb.VerseQty;
                    
                    var ChapterId = chapter;

                    //var nb_chapter_verses = (nb.includes('<p>')) ? nb.split('<p>') : console.error('no includes(<p>)');//as text
                    var nb_chapter_verses = (dataRead.chapterData.arr_p_verses.length != 0) ? dataRead.chapterData.arr_p_verses : console.error('dataRead.chapterData.arr_p_verses.length = 0');//as json
                    //console.log(nb_chapter_verses);

                    var only_verses_length = nb_chapter_verses.length - 1;
                    //console.log(`Translation: ${divId} --- divId: ${divId} --- book: ${book} --- chapter: ${chapter} --- only_verses_length: ${only_verses_length}`);
                    // console.log('only_ divId: '+divId);

                    if(divId == '#col1'){
                        window.col1_p_length = only_verses_length;
                        //console.log('only_ col1_p_length: '+window.col1_p_length);
                    }else{
                        //console.log('no es col1. only_ col1_p_length: '+window.col1_p_length);
                    }



                    //Chapter, Verse
                    nb_chapter_verses.forEach( (el,i) => {
                        //console.log(el);
        
                        //Chapter
                        if(i == 0){
                            //console.log('es Chapter: '+el);

                            var ChapterText = dataRead.chapterData.h4_text;//ya que el indice es 0, el siguiente es '<p>'
                            if(ChapterText == '') ChapterText = bq.Books[book].FullName + ' ' + chapter;

                            //Chapter
                            const h4 = document.createElement('h4');
                            h4.append(ChapterText);

                            arr_data_head.push(h4);
                            //console.log(h4);

                            if(bq.HTMLFilter == 'Y'){
                                h4.innerHTML = htmlEntities(h4.innerHTML);
                            }
                        }
                        else{//Verse
                            //console.log('es Verse: '+el);
        
                            if(el.includes('</p>')){
                                var arr_p_text = (el.includes('</p>')) ? el.split('</p>') : console.error('no includes </p>') ;
                                var p_Text = arr_p_text[0];
                            }else{
                                var p_Text = el;//ya que fue hecho el .split('<p>')
                            }
                            //console.log('p_Text: '+p_Text); 
                            
                            var arr_p = (p_Text.includes(' ')) ? p_Text.split(' ') : console.error("no includes ' '") ;
                            var VerseId = arr_p[0];
                            //console.log('VerseId: '+VerseId);
        
                            var VerseText = '';
                            for(let index = 1; index < arr_p.length; index++){
                                VerseText += arr_p[index] + ' ';
                            }
                            //console.log('VerseText: '+VerseText);
        
                            var p = document.createElement('p');
                            p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                            p.setAttribute('data-verse',VerseId);
            
                            var a = document.createElement('a');
                            a.href = '#';
                            a.classList.add = 'blink';
                            a.innerHTML = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                            p.append(a);
                            p.append(' '); 

                            const span_vt = document.createElement('span');
                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


                            //Номера Стронга в стихах (RST+)
                            if(bq.StrongNumbers == "Y"){
                                let t = VerseText;
                                var arr_t = (t.includes(' ')) ? t.split(' ') : alert('err 1');

                                arr_t.forEach((el,i) => {    
                                    
                                    //element of string is Strong Number
                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                        const span_strong = document.createElement('span');
                                        if(btnStrongIsActive){
                                            span_strong.className = 'strong show strongActive'; 
                                        }else{
                                            span_strong.className = 'strong'; 
                                        }
                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                                        //si ultimo carácter es string
                                        if(last_char != '' && isNaN(last_char)){
                                            let el_number = el.substring(0,el.length-1);
                                            let el_string = last_char;
                                            span_strong.innerHTML = el_number;
                                            p.append(span_strong);
                                            p.append(el_string);
                                        }else{//es number
                                            span_strong.innerHTML = el;
                                            p.append(span_strong);
                                        }

                                    }else{//is word
                                        p.append(' ');
                                        if(btnStrongIsActive){
                                            if(el.includes('<S>')){
                                                el = el.replace('<S>','<S class="show strongActive">');
                                            }
                                        }
                                        p.append(el);
                                    }
                                });
                                p.innerHTML.trim();

                                //console.log('antes: ' + p.innerHTML);
                                if(bq.HTMLFilter == 'Y'){
                                    p.innerHTML = htmlEntities(p.innerHTML);
                                }
                                //console.log('despues: '+p.innerHTML);

                                if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                    p.querySelectorAll('.strongActive').forEach((el)=>{
                                        el.addEventListener('click', ()=>{
                                            //console.log('1. bq.StrongFirstLetter: '+bq.StrongFirstLetter);
                                            //console.log('1. book: '+book);
                                            //console.log('m --- 1. el.innerHTML: '+el.innerHTML);
                                            var paramfirstLetter = (bq.StrongFirstLetter == 'Y') ? 'Y' : 'N' ;

                                            if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                getStrongNumber(el.innerHTML, null, paramfirstLetter);
                                            }else{//rstStrong
                                                lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                getStrongNumber(el.innerHTML, lang, paramfirstLetter);
                                            }
                                        });
                                    }); 
                                }

                                arr_data_body.push(p);
                                //console.log(p);
                            }


                            //Примечания редактора в стихах (RSTi2)
                            if(bq.Notes == 'Y'){
                                let t = VerseText;

                                if(t.includes(bq.NoteSign)){// '*'
                                    let arr_t0 = t.split(bq.NoteSign);
                                    let before_Note = arr_t0[0];

                                    if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                        let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                        let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                        let text_Note = arr_t2[0];
                                        let after_Note = arr_t2[1];

                                        const span_t = document.createElement('span');
                                        span_t.className = 'tooltip';
                                        span_t.setAttribute('data-tooltip',text_Note);
                                        span_t.innerHTML = bq.NoteSign;

                                        span_t.addEventListener('mouseenter', function(){
                                            showTooltip(this);
                                        });
                                        span_t.addEventListener('mouseleave', function(){
                                            hideTooltip(this);
                                        });
                                        /*
                                        //antes
                                        p.append(before_Note);
                                        p.append(span_t);
                                        p.append(after_Note);
                                        */

                                        before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                        span_vt.append(before_Note);
                                        span_vt.append(span_t);
                                        after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                        span_vt.append(after_Note);
                                        //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                                        p.append(span_vt);//antes
                                    }
                                }else{
                                    //p.append(VerseText);//antes
                                    span_vt.append(VerseText);
                                    p.append(span_vt);

                                    if(bq.HTMLFilter == 'Y'){
                                        p.innerHTML = htmlEntities(p.innerHTML);
                                    }
                                }
                                //p.append(span_vt);//antes
                                //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

                                arr_data_body.push(p);
                                //console.log(p);
                            }


                            //Оглавления в стихах (NRT)
                            if(bq.Titles == 'Y'){
                                let t = VerseText;

                                if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                    let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                    let before_Title = arr_t1[0];
                                    let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                    let text_Title = arr_t2[0];
                                    let after_Title = arr_t2[1];

                                    const span_title = document.createElement('span');
                                    span_title.className = 'verse_title';
                                    span_title.innerHTML = text_Title;

                                    p.append(before_Title);
                                    p.append(span_title);
                                    p.append(after_Title);
                                }else{
                                    p.append(VerseText);
                                }

                                arr_data_body.push(p);
                                //console.log(p);

                                if(bq.HTMLFilter == 'Y'){
                                    p.innerHTML = htmlEntities(p.innerHTML);
                                }
                            }

                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                            if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                //p.append(VerseText);//antes
                                span_vt.append(VerseText);
                                p.append(span_vt);

                                arr_data_body.push(p);
                                //console.log(p);
                                
                                if(bq.HTMLFilter == 'Y'){
                                    p.innerHTML = htmlEntities(p.innerHTML);
                                }
                            }        
                            
                        }
        
                    });
                    
                    
                    //Posle forEach...
                    //=====================================================//
                    // 1. inicio - Numeración base Española - y col's Rusa
                    //=====================================================//
                    if(base_ep == 'Y' && bq.EnglishPsalms == 'N'){//numeración rusa
                        //console.log('Numeración base es Española - y cols es Rusa');
                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                        var arr_vstavka = [];
                        var vstavka2 = [];
                        
                        //Miro la traducción con EnglishPsalms
                        switch (parseInt(book)) {

                            case 3: //Числа
                                    if(chapter == 12){//Числа 12:16 => Num. 13:1
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 1);//add Num. 13:1
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 13, 1);//add Num. 13:1
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 13, 16);//se añade capitulo 13 al verse 13 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 13){//13:1-33 => 13: +1
                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                    }
                                break;

                            case 5: //Иисус Навин
                                    if(chapter == 5){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 6){//Ис.Нав.6:1 => Josue 5:16 | 6:2-27 =>	6: -1
                                        addChapterToHead(bq, book, 5);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 5, 16);//add Josue 5:16
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 5, 16);//add Josue 5:16
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 6, 2);//se añade capitulo 6 al verse 2 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break; 
                                
                            case 8: //1Samuel (1Царств) 
                                    if(chapter == 20){//20:42-а	=> 20:42:00 | 20:42-б => 20:43:00
                                        //1 verse contiene 2 en ruso
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 20, form_list_verses(1, col1_p_length+1) );                                       
                                        let arr_mezclado = mergeVerses(arr_vstavka, 42);//se meclan 42 y el siguiente 43.
                                        arr_data_body = [].concat(arr_mezclado, arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 23){//23:29 => 24:1
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 24, 1 );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 24, 1 );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);//añado al final un versiculo
                                        addChapterToVerse(arr_data_body, bq, book, 24, 29);//se añade capitulo 24 al verse 29 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 24){//24:1-22	=> 24: +1
                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                    }
                                break; 
                            
                            case 17: //Job 
                                    if(chapter == 39){
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 40){//40:1-5 => 39:31-35 | 40:6-24 =>	40: -5
                                        addChapterToHead(bq, book, 39);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 39, form_list_verses(31, 35) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 39, form_list_verses(31, 35) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 40, 6);//se añade capitulo 40 al verse 6 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);//[p....] - elimino versículos sobrantes a partir de el último hasta el fin
                                    }
                                    if(chapter == 41){//41:1-8 => 40:20-27 | 41:9-34 =>	41: -8
                                        addChapterToHead(bq, book, 40);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(20, 27) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(20, 27) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 41, 9);//se añade capitulo 41 al verse 9 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break; 

                            case 18: //Psalmos 
                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                    }
                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                        arr_data_body.splice(0, 1);//[p....] - elimino primer versículo
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 10){//10:2-18 => 9: +21
                                        addChapterToHead(bq, book, 9);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 9, form_list_verses(22, 39) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 9, form_list_verses(22, 39) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:1 
                                    //-1 : Х
                                    if(
                                        (chapter == 11) || 
                                        (chapter >= 14 && chapter <= 17) || 
                                        (chapter >= 23 && chapter <= 29) || 
                                        (chapter >= 32 && chapter <= 33) || 
                                        (chapter == 35) || 
                                        (chapter == 37) || 
                                        (chapter == 43) || 
                                        (chapter == 50) || 
                                        (chapter == 66) || 
                                        (chapter >= 71 && chapter <= 74) || 
                                        (chapter >= 78 && chapter <= 79) || 
                                        (chapter == 82) || 
                                        (chapter == 86) || 
                                        (chapter == 87) || 
                                        (chapter == 91) || 
                                        (chapter >= 93 && chapter <= 101) || 
                                        (chapter >= 103 && chapter <= 107) || 
                                        (chapter >= 109 && chapter <= 114) || 
                                        (chapter >= 117 && chapter <= 146)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1, col1_p_length) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                                    //-1 : +1
                                    if(
                                        (chapter == 12) || 
                                        (chapter >= 18 && chapter <= 22) || 
                                        (chapter >= 30 && chapter <= 31) || 
                                        (chapter == 34) || 
                                        (chapter == 36) || 
                                        (chapter >= 38 && chapter <= 42) || 
                                        (chapter >= 44 && chapter <= 49) || 
                                        (chapter == 53) || 
                                        (chapter >= 55 && chapter <= 59) || 
                                        (chapter >= 61 && chapter <= 65) || 
                                        (chapter >= 67 && chapter <= 70) || 
                                        (chapter >= 75 && chapter <= 77) || 
                                        (chapter >= 80 && chapter <= 81) || 
                                        (chapter >= 83 && chapter <= 85) || 
                                        (chapter >= 88 && chapter < 90) || 
                                        (chapter == 92) || 
                                        (chapter == 102) || 
                                        (chapter == 108)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1+1, col1_p_length+1) );// desde 2 versiculo
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //2en1
                                    if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(2, 6) );// desde 2 versiculo
                                        arr_data_body = arr_vstavka.concat(vstavka_vacio('arriba'),arr_data_body);
                                        arr_data_body.splice(col1_p_length);//1 verse español contiene 2 en ruso
                                    }
                                    //Formula
                                    //-1 : +2 *
                                    if(
                                        (chapter >= 51 && chapter <= 52) ||
                                        (chapter == 54) || 
                                        (chapter == 60)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1+2, col1_p_length+2) );// desde 3 versiculo
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //2en1
                                    if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(2, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(2, col1_p_length) );
                                        let p_vacio = document.createElement('p');
                                        p_vacio.className = 'prim';
                                        p_vacio.innerHTML = 'смотри стих выше...';
                                        arr_vstavka.splice(5,0,p_vacio);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //-2: +8
                                    if(chapter == 115){//115:1-18 => 113: +8
                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(1+8, col1_p_length+8) );// desde 9 versiculo
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //-2: X
                                    if(chapter == 116){//116:1-9 => 114: Х
                                        addChapterToHead(bq, book, parseInt(chapter)-2);//si el verse vstavka es primero
                                        // Sal.116:1-9 => Пс. 114:1-9
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(1, 9) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(1, 9) );
                                        // Sal.116:10-19 => Пс. 115:1-10
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 10) );
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, chapter-1, form_list_verses(1, 10) );
                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 115, 10);//se añade capitulo 115 al verse 10 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //-1: X (especial)
                                    if(chapter == 147){//147:1-11 => 146:1-11
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // Sal.147:1-11 => Пс.146:1-11
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(1, 11) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(1, 11) );
                                        // Sal.147:12-20 => Пс. 147:1-9
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 9) );
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, chapter, form_list_verses(1, 9) );
                                        arr_vstavka = arr_vstavka.concat(vstavka2);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 147, 12);//se añade capitulo 147 al verse 12 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 19: //Притчи
                                    if(chapter == 4){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_data_body = [].concat(arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;
                        
                            case 21: //Cantares - Песня песней
                                    if(chapter == 1){
                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        let p_vacio = document.createElement('p');
                                        p_vacio.className = 'prim';
                                        p_vacio.innerHTML = 'заглавие...';
                                        arr_vstavka.splice(0,0,p_vacio);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 6){//06:13 =>	07:1
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, 1 );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, 1 );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 7, 13);//se añade capitulo 7 al verse 13 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1+1, col1_p_length+1) );
                                        arr_data_body = [].concat(arr_vstavka,arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 22: //Isaías - Исаия
                                    if(chapter == 3){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );//correcto!
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );//correcto!
                                        let p_vacio = document.createElement('p');
                                        p_vacio.className = 'prim';
                                        p_vacio.innerHTML = 'смотри стих выше...';
                                        arr_vstavka.splice(19,0,p_vacio);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 26: //Daniel - Даниил
                                    if(chapter == 3){//3:1-30 => 3:1-30
                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                                        addChapterToHead(bq, book, parseInt(chapter)-1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-1, form_list_verses(31, 33) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-1, form_list_verses(31, 33) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 4, 4);//se añade capitulo 4 al verse 4 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 27: //Oseas - Осия
                                    if(chapter == 13){//13:16 => 14:1
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 14, 1);
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 14, 1);
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 14, 16);//se añade capitulo 14 al verse 16 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 14){//14:1-9 => 14:2-10
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 10) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(2, 10) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 31: //Jonas - Иона
                                    if(chapter == 1){//1:17 => 2:1
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 2, 1);
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 2, 1);
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 2, 17);//se añade capitulo 2 al verse 17 español que es 1 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 2){//2:1-10 => 2:2-11
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(2, 11) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(2, 11) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 44: //Romanos - Римлянам
                                    //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                                    if(chapter == 16){// 16:25-27 => 14:24-26                                          
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter-2, form_list_verses(24,  26) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter-2, form_list_verses(24,  26) );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 14, 25);//se añade capitulo 14 al verse 25 español que es 24-26 ruso
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 46: //2Corintios - 2-Коринфянам
                                    //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        let p_vacio = document.createElement('p');
                                        p_vacio.className = 'prim';
                                        p_vacio.innerHTML = 'смотри стих выше...';
                                        arr_vstavka.splice(12,0,p_vacio);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;
                            
                            default:
                                //console.log('default en switch');
                                break;
                        }//fin switch
                    }
                    //=====================================================//
                    // 1. fin - Numeración base Española - y col's Rusa
                    //=====================================================//
                    
                    
                    //=====================================================//
                    // 2. inicio - Numeración base Rusa - y col's Española
                    //=====================================================//
                    if(base_ep == 'N' && bq.EnglishPsalms == 'Y'){//numeración Española
                        //console.log('Numeración base Rusa - y cols Española');
                        //var col1_p_length = document.querySelectorAll('#col1 .colsInner p').length;//antes
                        //console.log(' --- dentro de bloque Numeración base Rusa - y cols Española --- col1_p_length: '+col1_p_length);//test
                        var arr_vstavka = [];
                        var vstavka2 = [];
                        
                        //Miro la traducción con EnglishPsalms
                        switch (parseInt(book)) {

                            case 3: //Числа
                                    if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length));
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 13){//Числа 13:1 => Num.12:16 
                                        addChapterToHead(bq, book, 12);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 12, 16); 
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 12, 16);
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 13, 2);//result Num.13:1 => Números 13 Num.13:1
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 5: //Иисус Навин
                                    if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 6, 1);
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 6, 1);
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 6, 16);//se añade capitulo 5 al verse 16 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1+1, col1_p_length+1));
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break; 
                                
                            case 8: //1Samuel (1Царств) 
                                    if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                                        //1 verse contiene 2 en ruso
                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_data_body = [].concat(arr_vstavka,vstavka_vacio('arriba'));
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 23){//
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 24){//1Цар.24:1 => 1S.23:29
                                        addChapterToHead(bq, book, 23);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 23, 29 );//cojo último verse del capitulo anterior
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 23, 29 );//cojo último verse del capitulo anterior
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 24, 2);//se añade capitulo 24 al verse 2 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break; 
                            
                            case 17: //Job 
                                    if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(1, 5) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(1, 5) );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 40, 31);//se añade capitulo 40 al verse 31 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 40){//40:1-19 => 40:6-24 
                                        //console.log(arr_data_body);//arr_data_body trae todos los verses del capitulo  40:1-24
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 40, form_list_verses(6, 24) );//trae 8 verses 40:6-24
                                        //console.log(arr_vstavka);//trae 8 verses 40:6-24
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 41, form_list_verses(1, 8) );//trae 8 verses 41:1-8
                                        //console.log(vstavka2);
                                        arr_data_body = [].concat(arr_vstavka, vstavka2);//[]. reescribe y une 40:6-24 con 41:1-8 
                                        //console.log(arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 41, 20);//se añade capitulo 41 al verse 20 ruso que es 1 español                                        
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 41){//40:1-26 => 41:9-34
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 41, form_list_verses(9, 34) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 41, form_list_verses(9, 34) );
                                        arr_data_body = [].concat(arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break; 

                            case 18: //Psalmos 
                                    if(chapter >= 3 && chapter <= 8){//3:1 - 9:20 =>	Х : +1 *
                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length-1) );
                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 20) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, 20) );
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 10, form_list_verses(1, 18) );
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 10, form_list_verses(1, 18) );
                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka, vstavka2);
                                        addChapterToVerse(arr_data_body, bq, book, 10, 22);//se añade capitulo 10 al verse 22 ruso que es 1 español 
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                                    //+1 : Х
                                    if(
                                        (chapter == 10) || 
                                        (chapter >= 13 && chapter <= 16) || 
                                        (chapter >= 22 && chapter <= 28) || 
                                        (chapter >= 31 && chapter <= 32) || 
                                        (chapter == 34) || 
                                        (chapter == 36) || 
                                        (chapter == 42) || 
                                        (chapter == 49) || 
                                        (chapter == 65) || 
                                        (chapter >= 70 && chapter <= 73) || 
                                        (chapter >= 77 && chapter <= 78) || 
                                        (chapter == 81) || 
                                        (chapter == 85) || 
                                        (chapter == 86) || 
                                        (chapter == 90) || 
                                        (chapter >= 92 && chapter <= 100) || 
                                        (chapter >= 102 && chapter <= 106) || 
                                        (chapter >= 108 && chapter < 113) || 
                                        (chapter >= 116 && chapter <= 138) ||
                                        (chapter >= 140 && chapter <= 145)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula Esp => Rus //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                                    //+1 : -1
                                    if(
                                        (chapter == 11) || 
                                        (chapter == 12) || 
                                        (chapter >= 17 && chapter <= 21) ||
                                        (chapter >= 29 && chapter <= 30) || 
                                        (chapter == 33) || 
                                        (chapter == 35) || 
                                        (chapter >= 37 && chapter <= 41) || 
                                        (chapter >= 43 && chapter <= 48) || 
                                        (chapter == 52) || 
                                        (chapter >= 54 && chapter <= 58) || 
                                        (chapter >= 60 && chapter <= 64) || 
                                        (chapter >= 66 && chapter <= 69) || 
                                        (chapter >= 74 && chapter <= 76) || 
                                        (chapter >= 79 && chapter <= 80) || 
                                        (chapter >= 82 && chapter <= 84) || 
                                        (chapter >= 87 && chapter < 89) || 
                                        (chapter == 91) || 
                                        (chapter == 101) || 
                                        (chapter == 107) ||
                                        (chapter == 139)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-1) );
                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                                    if(
                                        (chapter >= 50 && chapter <= 51) ||
                                        (chapter == 53) || 
                                        (chapter == 59)
                                    ){
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length-2) );
                                        arr_data_body = [].concat(vstavka_vacio(),vstavka_vacio(), arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //2en1
                                    if(chapter == 89){//89:6 => 90:5-6 
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        //arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, col1_p_length) );
                                        var new_arr = [];
                                        arr_vstavka.map((el,i,arr) => {
                                            if(i == 4){
                                                const p_new = document.createElement('p');
                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                new_arr.push(p_new); 
                                            }else{
                                                new_arr.push(el);
                                            }
                                        });
                                        new_arr.splice(5, 0);//elimino verse 6 (90:6) 
                                        //console.log(new_arr);
                                        arr_vstavka = new_arr;
                                        arr_data_body = [].concat(vstavka_vacio(), arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //+2: -8
                                    if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, 8) );
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, parseInt(chapter)+2, form_list_verses(1, 18) );
                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                        addChapterToVerse(arr_data_body, bq, book, 115, 9);//se añade capitulo 115 al verse 9 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula
                                    //-2: X
                                    if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                                        addChapterToHead(bq, book, parseInt(chapter)+2);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+2, form_list_verses(1, 9) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(10, 19) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula (especial)
                                    if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                                        addChapterToHead(bq, book, parseInt(chapter)+1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)+1, form_list_verses(1, 11) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    //Formula (especial)
                                    if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(12, 20) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(12, 20) );
                                        arr_data_body = arr_vstavka.concat(arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;                                 

                            case 19: //Притчи
                                    if(chapter == 4){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_data_body = [].concat(arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;
                            
                            case 21: //Cantares - Песня песней
                                    if(chapter == 1){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length) );
                                        //console.log(arr_vstavka);
                                        var new_arr = [];
                                        arr_vstavka.map((el,i,arr) => {
                                            if(i == 0){
                                                const p_new = document.createElement('p');
                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                new_arr.push(p_new); 
                                            }else{
                                                new_arr.push(el);
                                            }
                                        });
                                        new_arr.splice(1, 1);//elimino verse  (Cantar 1:2) 
                                        //console.log(new_arr);
                                        arr_vstavka = new_arr;
                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));//mal
                                        arr_data_body = [].concat(arr_vstavka);//ok
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 6){//06:1-12 => 06:1-12	
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 7){//07:1 => 06:13	
                                        addChapterToHead(bq, book, 6);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, parseInt(chapter)-1, 13 );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, parseInt(chapter)-1, 13 );
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 7, 2);//se añade capitulo 7 al verse 2 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 22: //Isaías - Исаия
                                    if(chapter == 3){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );//correcto!
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length+1) );//correcto!
                                        var new_arr = [];
                                        arr_vstavka.map((el,i,arr) => {
                                            if(i == 18){
                                                const p_new = document.createElement('p');
                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                new_arr.push(p_new); 
                                            }else{
                                                new_arr.push(el);
                                            }
                                        });
                                        new_arr.splice(19, 1);//elimino verse  (Is.3:19) 
                                        //console.log(new_arr);
                                        arr_vstavka = new_arr;
                                        //arr_data_body = [].concat(arr_vstavka, vstavka_vacio('arriba'));
                                        arr_data_body = [].concat(arr_vstavka);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 26: //Daniel - Даниил
                                    if(chapter == 3){//3:1-30 => 3:1-30
                                        //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, 30) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, 30) );
                                        // vstavka2 = for_parseVerse(Translation, bq, bookModule, book, 4, form_list_verses(1, 3) );
                                        vstavka2 = for_parseVerse_json(Translation, bq, arr_p_verses2, book, 4, form_list_verses(1, 3) );
                                        arr_data_body = [].concat(arr_vstavka, vstavka2);
                                        addChapterToVerse(arr_data_body, bq, book, 4, 31);//se añade capitulo 4 al verse 31 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 4){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(4, col1_p_length+3) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(4, col1_p_length+3) );
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 27: //Oseas - Осия
                                    if(chapter == 13){//13:1-15 => 13:1-15 // en rv60 le quito el último verse ya que no esta en rst. lo paso al siguiente capitulo.	
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 14){//14:1 => 13:16 
                                        addChapterToHead(bq, book, 13);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 13, 16);
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 13, 16);
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 14, 2);//se añade capitulo 14 al verse 2 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 31: //Jonas - Иона
                                    if(chapter == 1){
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length));//correcto!
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length));//correcto!
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                    if(chapter == 2){// 2:1 => 1:17
                                        addChapterToHead(bq, book, 1);//si el verse vstavka es primero
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 1, 17);
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 1, 17);
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        addChapterToVerse(arr_data_body, bq, book, 2, 2);//se añade capitulo 2 al verse 2 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 44: //Romanos - Римлянам
                                    if(chapter == 14){// 14:24-26 => 16:25-27                                       
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, 16, form_list_verses(25,  27) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, 16, form_list_verses(25,  27) );
                                        arr_data_body = arr_data_body.concat(arr_vstavka);
                                        addChapterToVerse(arr_data_body, bq, book, 16, 24);//se añade capitulo 14 al verse 24 ruso que es 1 español
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            case 46: //2Corintios - 2-Коринфянам
                                    if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                                        // arr_vstavka = for_parseVerse(Translation, bq, bookModule, book, chapter, form_list_verses(1, col1_p_length+1) );
                                        arr_vstavka = for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, form_list_verses(1, col1_p_length+1) );
                                        var new_arr = [];
                                        arr_vstavka.map((el,i,arr) => {
                                            if(i == 11){
                                                const p_new = document.createElement('p');
                                                p_new.innerHTML = arr[i].innerHTML + '<br>' + arr[i+1].innerHTML;
                                                new_arr.push(p_new); 
                                            }else{
                                                new_arr.push(el);
                                            }
                                        });
                                        new_arr.splice(12, 1);//elimino verse  (Is.3:19) 
                                        //console.log(new_arr);
                                        arr_vstavka = new_arr;
                                        arr_data_body = [].concat(arr_vstavka, arr_data_body);
                                        arr_data_body.splice(col1_p_length);
                                    }
                                break;

                            default:
                                //console.log('default en switch');
                                break;
                        }//fin switch
                    }
                    //=====================================================//
                    // 2. fin - Numeración base Rusa - y col's Española
                    //=====================================================//
                    

                    //console.log('arr_data_head');
                    //console.log(arr_data_head);

                    //console.log('arr_data_body');
                    //console.log(arr_data_body);

                    arr_data_body.forEach((el,i)=>{//cambio data-verse
                        el.setAttribute('data-verse', i + 1 );
                    });

                    arr_data_all = arr_data_head.concat(arr_data_body);
                    //console.log('11335. arr_data_all: ',arr_data_all);
                    
                    arrDataDivShow.push(arr_data_all);                   
                    //obj_DataDivShow[Translation] = {"divId": divId, "Translation": Translation, "data": arr_data_all};
                    //console.log('11335. arrDataDivShow:',arrDataDivShow);

                    arr_data_head = [];
                    arr_data_body = [];
                    arr_data_all = [];

                    arr_trans = arr_trans.filter(el => el);
                    clearColsEmpty();
                    

                    window.iter_i++;
                    if(window.iter_i < window.arr_trans.length && indexColToBuild == null){//recargo todas las columnas 
                        //console.log('iter_i: '+iter_i);
                        showChapterText4(arr_trans[iter_i],'#'+arr_divShow[iter_i], book, chapter, verseNumber, to_verseNumber, verseView);
                    }

                    //si es ultimo elemento del array...
                    if(countElementsInArray(arrDataDivShow) == arr_trans.length){
                        //console.log('--- llamo buildDivShow() ---');
                        buildDivShow(arrDataDivShow, indexColToBuild);
                    }

                }else{
                    //console.log(' no existe capítulo '+chapter+' del módulo '+book);
                    divShow.innerHTML = '<p class="prim">Текущий модуль Библии не содержит стихов для выбранной книги.</p>';
                }

            })
            .then(() => {
                mySizeWindow();
                mySizeVerse();
            })
            .then(() => {
                
                if(verseNumber !== null &&  verseNumber != "" && verseView == null){
                    //console.log('verseNumber !== null &&  verseNumber != "" && verseView == null');

                    //styles of other verses
                    if(to_verseNumber !== null && to_verseNumber != ""){
                        //console.log('hay to_verseNumber');
                        if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                            for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                Array.from(document.querySelectorAll('[data-verse="'+i+'"]')).forEach(el=>{
                                    if(i == parseInt(verseNumber)) {
                                        el.classList.add('active_first');                
                                    }else if(i == parseInt(to_verseNumber)) {
                                        el.classList.add('active_last');                
                                    }else{
                                        el.classList.add('active_middle');                
                                    }
                                });
                            }
                        } 
                    }else{
                        //console.log('no hay to_verseNumber. reviso verseNumber');
                        //only one verse of each translation
                        if(verseNumber !== null && verseNumber != ""){
                            document.querySelectorAll('[data-verse="'+verseNumber+'"]').forEach(el=>{
                                el.classList.add('active_one');
                            });
                        }
                    }                
                
                    //scroll to verse o verses activos
                    //scrollToVerse(verseNumber, to_verseNumber);
                }

                if(verseView !== null && verseView != ""){
                    //console.log('hay verseView');

                    //styles of other verses of col1
                    if(to_verseNumber !== null && to_verseNumber != ""){
                        //console.log('hay to_verseNumber');
                        if(parseInt(verseNumber) < parseInt(to_verseNumber)){
                            for (let i = parseInt(verseNumber); i <= parseInt(to_verseNumber); i++) {
                                Array.from(document.querySelectorAll('#col1 .colsInner [data-verse="'+i+'"]')).forEach(el=>{
                                    if(i == parseInt(verseNumber)) {
                                        el.classList.add('active_first');                
                                    }else if(i == parseInt(to_verseNumber)) {
                                        el.classList.add('active_last');                
                                    }else{
                                        el.classList.add('active_middle');                
                                    }
                                });
                            }
                        } 
                    }else{
                        //console.log('no hay to_verseNumber. reviso verseNumber');
                        //only one verse of each translation
                        if(verseNumber !== null && verseNumber != ""){
                            document.querySelectorAll('.colsInner [data-verse="'+verseNumber+'"]').forEach(el=>{
                                el.classList.add('active_one');
                            });
                        }
                    }                
                }
            })
            .then(() => {
                //si hay versiculo marcado con amarillo...
                if(verseNumber !== null &&  verseNumber != "" ){
                    //scroll to verse o verses activos
                    scrollToVerse(verseNumber, to_verseNumber);

                    //y si con el versiculo marcado existe verse de la vista...
                    if(verseView !== null && verseView != ""){
                        //scroll to verseView
                        scrollToVerseView(verseView);
                    }
                }else{
                    //console.log('no hay verseNumber');
                    if(verseView !== null && verseView != ""){
                        //scroll to verseView
                        scrollToVerseView(verseView);
                    }
                }
                
            })
            .then(() => {
                mySizeWindow();
                mySizeVerse();
                addListenerToPA();//listen links p > a
            })
            .catch((error) => {
                // Manejar cualquier error que pueda ocurrir durante la solicitud o el procesamiento de la respuesta
                console.log('error promesa en fetch() modo old. error: '+error);
            });

        }else{//si no está el id de book en el modulo...
            document.querySelectorAll('.colsInner').forEach(el=>{
                if(el.childElementCount == 0 || el.textContent == ''){
                    var p = document.createElement('p');
                    p.className = 'prim';
                    p.innerHTML = `3.3 En este módulo no existe el libro indicado.`;
                    el.append(p);
                    //alert(' vacio');
                }else{
                    //alert(' no vacio');
                    el.innerHTML = `<p class="prim_error_compare">Для сравнения текста переводов необходимо указать книги, имеющиеся в выбранных переводах Библии.</p>`;
                }
            });
        }

    }//end --- typeof Translation
    else{
        console.log('la traducción no está seleccionada. Translation: '+Translation); 
        //alert(`La traducción no está seleccionada. Selecciónala presionando sobre el símbolo '+' o nombre corto de la traducción.`);       
    }

}









function form_list_verses(from_verse, to_verse){
    var lista_verses = [];
    for (let i = from_verse; i <= to_verse; i++) {
        lista_verses.push(i);                                                    
        //console.log('abajo lista_verses');
        //console.log(lista_verses);
    }
    return lista_verses;
}

function vstavka_vacio(direccion){
    //var arr = [];
    let p_vacio = document.createElement('p');
    p_vacio.className = 'prim';

    if(direccion == 'arriba'){
        p_vacio.innerHTML = 'смотри стих выше...';
    }else if(direccion == 'abajo'){
        p_vacio.innerHTML = 'смотри стих ниже...';
    }else{
        p_vacio.innerHTML = 'эквивалент стиха отсутствует в данном переводе...';
    } 
    
    //console.log('vstavka_vacio arr:');
    //console.log(p_vacio);
    return p_vacio;
}

function addChapterToHead(bq, book, chapter){
    arr_data_head.pop();//elimino h2 (Numeros 13)
    const h2_new = document.createElement('h4');
    h2_new.innerHTML = bq.Books[book].FullName + ' ' + chapter;
    //console.log(h2_new);
    
    let result = arr_data_head.push(h2_new); 
    //console.log(result);

    return result; 
}

function addChapterToVerse(arr_data_body, bq, book, chapter, verseNumber){
    let arr_new = [];
    arr_data_body.forEach((el,i) => {
        if(i == verseNumber-1){           
            const h2_vstavka = '<span class="h4_ch">'+bq.Books[book].FullName + ' ' + chapter + '</span>';
            el.innerHTML = h2_vstavka + el.innerHTML;
            //console.log('nuevo el.innerHTML: '+el.innerHTML);
            arr_new.push(el);
        }else{
            arr_new.push(el);
        }
    });
    //console.log('abajo arr_new: ');
    //console.log(arr_new);
    
    arr_data_body = arr_new; 
    //console.log(arr_data_body);
    return arr_data_body; 
}


function mergeVerses(arr_data_body, verseNumber){
    var new_arr = [];
    arr_data_body.map((el,i,arr) => {
        if(i == verseNumber-1){
            const p_vstavka = '<br>' + arr[i+1].innerHTML;
            el.innerHTML = arr[i].innerHTML + p_vstavka;
            new_arr.push(el); 
        }else{
            new_arr.push(el);
        }
    });
    new_arr.splice(verseNumber-1, 0);//elimino verse verseNumber ya que lo sustituyo con el mezclado 
    //console.log(new_arr);

    arr_data_body = new_arr;
    return arr_data_body;
}





function for_parseVerse_json(Translation, bq, arr_p_verses, book, chapter, arr_verses ){
    var a = [];

    //Hay solo un verse
    if(typeof arr_verses == 'number'){// 1 vez
        //console.log('[if]--- hay un verse');
        // a = parseVerse(Translation, bq, bookModule, book, chapter, arr_verses );// 1 vez
        a = parseVerse_json(Translation, bq, arr_p_verses, book, chapter, arr_verses );// 1 vez
        //console.log('antes a: ');
        //console.log(a);
    }
    else if(typeof arr_verses == 'object'){//hay más verses
        //console.log('[else] --- hay arr_verses: '+arr_verses);
        for (let i = 0; i < arr_verses.length; i++) {
            a[i] = parseVerse_json(Translation, bq, arr_p_verses, book, chapter, arr_verses[i]);
            //console.log('a: ');
            //console.log(a);
        }
        //console.log('antes a: ');
        //console.log(a);

        a = a.flat(1);//The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.        
        //console.log('despues a: ');
        //console.log(a);

    }
    //console.log('return a: ');
    //console.log(a);

    return a;
}

function parseVerse_json(Translation, bq, arr_p_verses, book, chapter, verseNumber){

    var verse_add = arr_p_verses[verseNumber];
    
    var el = verse_add;
    var arr_data_add = [];

        if(el.includes('</p>')){
            var arr_p_text = el.split('</p>');
            var p_Text = arr_p_text[0];
        }else{
            var p_Text = el;
        }
        //console.log('p_Text: '+p_Text); 

        var arr_p = p_Text.split(' ');
        var VerseId = arr_p[0];
        //console.log('VerseId: '+VerseId);

        var VerseText = '';
        for(let index = 1; index < arr_p.length; index++){
            VerseText += arr_p[index] + ' ';
        }
        //console.log('VerseText: '+VerseText);

        const p = document.createElement('p');
        p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
        //p.setAttribute('data-verse',data_verse_add);//meto el numero correspondiente a trans1

        const a = document.createElement('a');
        a.href = '#';
        a.classList.add = 'blink';
        a.innerHTML = bq.Books[book].ShortNames[0] + chapter + ':' + VerseId;
        p.append(a);
        p.append(' '); 

        const span_vt = document.createElement('span');
        span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


        //Номера Стронга в стихах (RST+)
        if(bq.StrongNumbers == "Y"){
            let t = VerseText;
            var arr_t = t.split(' ');

            arr_t.forEach((el,i) => {    
                
                //element of string is Strong Number
                if(!isNaN(parseInt(el)) || el == '0'){//number                         
                    const span_strong = document.createElement('span');
                    span_strong.className = 'strong'; 
                    let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                    //si ultimo carácter es string
                    if(last_char != '' && isNaN(last_char)){
                        let el_number = el.substring(0,el.length-1);
                        let el_string = last_char;
                        span_strong.innerHTML = el_number;
                        p.append(span_strong);
                        p.append(el_string);
                    }else{//es number
                        span_strong.innerHTML = el;
                        p.append(span_strong);
                    }

                }else{//is word
                    p.append(' ');
                    p.append(el);
                }
            });
            p.innerHTML.trim();

            //console.log('antes: ' + p.innerHTML);
            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
            //console.log('despues: '+p.innerHTML);

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);
        }

        //Примечания редактора в стихах (RSTi2)
        if(bq.Notes == 'Y'){
            let t = VerseText;

            if(t.includes(bq.NoteSign)){// '*'
                let arr_t0 = t.split(bq.NoteSign);
                let before_Note = arr_t0[0];

                if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                    let arr_t1 = t.split(bq.StartNoteSign);//'[('
                    let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                    let text_Note = arr_t2[0];
                    let after_Note = arr_t2[1];

                    const span_t = document.createElement('span');
                    span_t.className = 'tooltip';
                    span_t.setAttribute('data-tooltip',text_Note);
                    span_t.innerHTML = bq.NoteSign;

                    span_t.addEventListener('mouseenter', function(){
                        showTooltip(this);
                    });
                    span_t.addEventListener('mouseleave', function(){
                        hideTooltip(this);
                    });
                    /*
                    //antes
                    p.append(before_Note);
                    p.append(span_t);
                    p.append(after_Note);
                    */

                    before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                    span_vt.append(before_Note);
                    span_vt.append(span_t);
                    after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                    span_vt.append(after_Note);
                    //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                    p.append(span_vt);//antes
                }
            }else{
                //p.append(VerseText);//antes
                span_vt.append(VerseText);
                p.append(span_vt);

                if(bq.HTMLFilter == 'Y'){
                    p.innerHTML = htmlEntities(p.innerHTML);
                }
            }
            //p.append(span_vt);//antes
            //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);
        }

        //Оглавления в стихах (NRT)
        if(bq.Titles == 'Y'){
            let t = VerseText;

            if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                let arr_t1 = t.split(bq.StartTitleSign);//'[('
                let before_Title = arr_t1[0];
                let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                let text_Title = arr_t2[0];
                let after_Title = arr_t2[1];

                const span_title = document.createElement('span');
                span_title.className = 'verse_title';
                span_title.innerHTML = text_Title;

                p.append(before_Title);
                p.append(span_title);
                p.append(after_Title);
            }else{
                p.append(VerseText);
            }

            arr_data_add.push(p);
            //console.log(p);

            //добавляю стих в див
            //divShow.append(p);

            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
        }

        //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
        if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
            //p.append(VerseText);//antes
            span_vt.append(VerseText);
            p.append(span_vt);

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);

            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
        }

        return arr_data_add;

}




function for_parseVerse(Translation, bq, bookModule, book, chapter, arr_verses ){
    var a = [];

    //Hay solo un verse
    if(typeof arr_verses == 'number'){// 1 vez
        //console.log('[if]--- hay un verse');
        a = parseVerse(Translation, bq, bookModule, book, chapter, arr_verses );// 1 vez
        //console.log('antes a: ');
        //console.log(a);
    }
    else if(typeof arr_verses == 'object'){//hay más verses
        //console.log('[else] --- hay arr_verses: '+arr_verses);
        for (let i = 0; i < arr_verses.length; i++) {
            a[i] = parseVerse(Translation, bq, bookModule, book, chapter, arr_verses[i]);
            //console.log('a: ');
            //console.log(a);
        }
        //console.log('antes a: ');
        //console.log(a);

        a = a.flat(1);//The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.        
        //console.log('despues a: ');
        //console.log(a);

    }
    //console.log('return a: ');
    //console.log(a);

    return a;
}

function parseVerse(Translation, bq, bookModule, book, chapter, verseNumber){

    if(typeof isTestPhp != 'undefined' && isTestPhp){       
        var verse_add = bookModule.split('<p>')[verseNumber];
    }else{
        var verse_add = bookModule.split('<h4>')[chapter].split('<p>')[verseNumber];
    }
    
    var el = verse_add;
    var arr_data_add = [];

        if(el.includes('</p>')){
            var arr_p_text = el.split('</p>');
            var p_Text = arr_p_text[0];
        }else{
            var p_Text = el;
        }
        //console.log('p_Text: '+p_Text); 

        var arr_p = p_Text.split(' ');
        var VerseId = arr_p[0];
        //console.log('VerseId: '+VerseId);

        var VerseText = '';
        for(let index = 1; index < arr_p.length; index++){
            VerseText += arr_p[index] + ' ';
        }
        //console.log('VerseText: '+VerseText);

        var p = document.createElement('p');
        p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
        //p.setAttribute('data-verse',data_verse_add);//meto el numero correspondiente a trans1

        var a = document.createElement('a');
        a.href = '#';
        a.classList.add = 'blink';
        a.innerHTML = bq.Books[book].ShortNames[0] + chapter + ':' + VerseId;
        p.append(a);
        p.append(' '); 

        const span_vt = document.createElement('span');
        span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay


        //Номера Стронга в стихах (RST+)
        if(bq.StrongNumbers == "Y"){
            let t = VerseText;
            var arr_t = t.split(' ');

            arr_t.forEach((el,i) => {    
                
                //element of string is Strong Number
                if(!isNaN(parseInt(el)) || el == '0'){//number                         
                    const span_strong = document.createElement('span');
                    span_strong.className = 'strong'; 
                    let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;

                    //si ultimo carácter es string
                    if(last_char != '' && isNaN(last_char)){
                        let el_number = el.substring(0,el.length-1);
                        let el_string = last_char;
                        span_strong.innerHTML = el_number;
                        p.append(span_strong);
                        p.append(el_string);
                    }else{//es number
                        span_strong.innerHTML = el;
                        p.append(span_strong);
                    }

                }else{//is word
                    p.append(' ');
                    p.append(el);
                }
            });
            p.innerHTML.trim();

            //console.log('antes: ' + p.innerHTML);
            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
            //console.log('despues: '+p.innerHTML);

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);
        }

        //Примечания редактора в стихах (RSTi2)
        if(bq.Notes == 'Y'){
            let t = VerseText;

            if(t.includes(bq.NoteSign)){// '*'
                let arr_t0 = t.split(bq.NoteSign);
                let before_Note = arr_t0[0];

                if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                    let arr_t1 = t.split(bq.StartNoteSign);//'[('
                    let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                    let text_Note = arr_t2[0];
                    let after_Note = arr_t2[1];

                    const span_t = document.createElement('span');
                    span_t.className = 'tooltip';
                    span_t.setAttribute('data-tooltip',text_Note);
                    span_t.innerHTML = bq.NoteSign;

                    span_t.addEventListener('mouseenter', function(){
                        showTooltip(this);
                    });
                    span_t.addEventListener('mouseleave', function(){
                        hideTooltip(this);
                    });
                    /*
                    //antes
                    p.append(before_Note);
                    p.append(span_t);
                    p.append(after_Note);
                    */

                    before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                    span_vt.append(before_Note);
                    span_vt.append(span_t);
                    after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                    span_vt.append(after_Note);
                    //span_vt.innerHTML = (bq.HTMLFilter == 'Y') ? htmlEntities(span_vt.innerHTML) : span_vt.innerHTML ;

                    p.append(span_vt);//antes
                }
            }else{
                //p.append(VerseText);//antes
                span_vt.append(VerseText);
                p.append(span_vt);

                if(bq.HTMLFilter == 'Y'){
                    p.innerHTML = htmlEntities(p.innerHTML);
                }
            }
            //p.append(span_vt);//antes
            //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);
        }

        //Оглавления в стихах (NRT)
        if(bq.Titles == 'Y'){
            let t = VerseText;

            if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                let arr_t1 = t.split(bq.StartTitleSign);//'[('
                let before_Title = arr_t1[0];
                let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                let text_Title = arr_t2[0];
                let after_Title = arr_t2[1];

                const span_title = document.createElement('span');
                span_title.className = 'verse_title';
                span_title.innerHTML = text_Title;

                p.append(before_Title);
                p.append(span_title);
                p.append(after_Title);
            }else{
                p.append(VerseText);
            }

            arr_data_add.push(p);
            //console.log(p);

            //добавляю стих в див
            //divShow.append(p);

            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
        }

        //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
        if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
            //p.append(VerseText);//antes
            span_vt.append(VerseText);
            p.append(span_vt);

            arr_data_add.push(p);
            //console.log(p);
            
            //добавляю стих в див
            //divShow.append(p);

            if(bq.HTMLFilter == 'Y'){
                p.innerHTML = htmlEntities(p.innerHTML);
            }
        }

        return arr_data_add;

}


window.addEventListener('load',function(d){
    //console.log('load - window.innerWidth: '+window.innerWidth);
    mySizeWindow();
    mySizeVerse();
});

window.addEventListener('resize',function(d){
    //console.log('resize - window.innerWidth: '+window.innerWidth);
    mySizeWindow();
    mySizeVerse();
});


function resizeSidebar(par){
    //console.log('function resizeSidebar(par)');

    let sidebar_w = (!isNaN(parseInt(sidebar.style.width)))
        ? parseInt(sidebar.style.width)
        : def_w ;

    min_w = wrapper.offsetWidth * 0.05;//5%
    max_w = wrapper.offsetWidth;//100%

    if(par == 'less'){
        if( sidebar_w > wrapper.offsetWidth * 0.1 ){
            sidebar_w -= wrapper.offsetWidth * 0.05;
        }
    }else{
        if( sidebar_w < wrapper.offsetWidth * 0.7 ){
            sidebar_w += wrapper.offsetWidth * 0.05;
        }
    }
    //console.log(sidebar_w);
    sidebar.style.width = sidebar_w +'px';
    mySizeWindow();
    mySizeVerse();
}

function openSidebar(el){
    let transClicked,idCol_transClicked;
    if(el.dataset.typebtn == 'transMenu'){//menu hamburguesa en mobile
        //saco la trans desde su padre de id="trans2.." accediendo a data-trans 4 niveles arriba
        //para saber en qué traducción se he dado el click
        transClicked = el.parentElement.parentElement.parentElement.parentElement.dataset.trans;
        idCol_transClicked = el.parentElement.parentElement.parentElement.parentElement.id;
        //console.log('clicked MENU of transClicked: '+transClicked);
        //console.log('clicked MENU of idCol_transClicked: '+idCol_transClicked);
    }
    else if(el.dataset.typebtn == 'transRef'){//ref o link Rom.10:17 en mobile
        //saco la trans desde su padre de id="trans2.." accediendo a data-trans 5 niveles arriba
        //para saber en qué traducción se he dado el click
        transClicked = el.parentElement.parentElement.parentElement.parentElement.parentElement.dataset.trans;
        idCol_transClicked = el.parentElement.parentElement.parentElement.parentElement.parentElement.id;
        //console.log('clicked REF of transClicked: '+transClicked);
        //console.log('clicked REF of idCol_transClicked: '+idCol_transClicked);
    }

    if(typeof transClicked == 'undefined'){
        if(inpt_nav.dataset.trans != ''){
            transClicked = inpt_nav.dataset.trans;
        }else{//default de #trans1
            transClicked = div_trans1.dataset.trans;
        }
        //console.log('new clicked MENU of transClicked: '+transClicked);
    }

    //cambio trans en la navegación del sidebar
    changeTransNav(transClicked,idCol_transClicked);

    if(sidebar.classList.length == 0){//se ve, lo oculto
         //console.log("1) sidebar no tiene classe. se ve. Lo muestro de left a right");
         sidebar.classList.add('sideHide');
         setTimeout(()=>{
            sidebar.classList.remove('sideHide');
            sidebar.classList.add('sideShow');
         },3);
     }else if(sidebar.classList.contains('sideHide')){//no se ve, lo muestro
         //console.log("2, contains('sideHide')");
         sidebar.classList.remove('sideHide')
         sidebar.classList.add('sideShow');
     }
     
     mySizeWindow();
     mySizeVerse();
}

function closeSidebar(el){
    //console.log("3, contains('sideShow')");
    sidebar.classList.remove('sideShow')
    sidebar.classList.add('sideHide');  
     
     mySizeWindow();
     mySizeVerse();
}

function hideShowSidebar(el){ 
    let disp = sidebar.style.display;
    if(disp != 'none' || sidebar.offsetWidth > 0){//si se ve
        disp = 'none';//lo oculto
        el.innerText = 'Show';
    }else{
        disp = 'block';//lo muestro
        el.innerText = 'Hide';
    }
    sidebar.removeAttribute('class');
    sidebar.style.display = disp;
    v_line.style.display = disp;
    
    mySizeWindow();
    mySizeVerse();
}


function getActTrans(){
    var act_trans = div_trans1.dataset.trans;
    let trans_buttons = document.querySelectorAll('#footerInner button');
    trans_buttons.forEach(el=>{
        if(el.value == act_trans){
            el.classList.add('btn_active');
        }
    });
}

function changeTransNav(trans, idCol_trans){
    // console.log('=== function changeTransNav ===');
    // console.log('trans to change en nav. trans: '+trans);
    // console.log('trans to change en nav. idCol_trans: '+idCol_trans);

    if(typeof trans == 'undefined'){
        trans = div_trans1.dataset.trans;
    }

    //en navegación
    var id_book = inpt_nav.getAttribute('data-id_book');
    var chapter = inpt_nav.getAttribute('data-show_chapter');
    var verseNumber = inpt_nav.getAttribute('data-show_verse');
    var to_verseNumber = (inpt_nav.getAttribute('data-show_to_verse') != '') ? inpt_nav.getAttribute('data-show_to_verse') : null ;
    inpt_nav.dataset.divtrans = idCol_trans;
    inpt_nav.dataset.trans = trans;

    chapter = (chapter != '') ? chapter : 1;//default si no hay

    var Translation = trans;
    url_bq = `modules/text/${Translation}/bibleqt.json`;

    fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {


            if(document.querySelectorAll('.cols').length > 1){
                var chapter = obj_nav.show_chapter;
                var verse = obj_nav.show_verse; 
                var to_verse = null;//todavia no está seleccionado
                
                var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);

                if(res_new_link){
                    //asigno nuevo valor
                    var bookNumber = res_new_link[0];
                    var chapterNumber = res_new_link[1];
                    var verseNumber = res_new_link[2];
                    var to_verseNumber = res_new_link[3];
                    var trans_BookShortName = res_new_link[4];
                    
                    // console.log('---despues---');
                    // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                    // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                    // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                    // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                    // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);

                    var new_ref_text = trans_BookShortName;
                    if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                    if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                    if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                    inpt_nav.value = new_ref_text;
                }
            }else{// un trans1
                inpt_nav.setAttribute('data-show_book', bq.Books[id_book].ShortNames[0]);
                inpt_nav.value = bq.Books[id_book].ShortNames[0];
    
                if(chapter > 0) inpt_nav.value += ' ' + chapter;
                if(typeof chapter == 'undefined' && inpt_nav.dataset.divtrans == 'trans1' && inpt_nav.dataset.show_chapter > 0) inpt_nav.value += ' ' + inpt_nav.dataset.show_chapter;
    
    
                if(parseInt(verseNumber) > 0) inpt_nav.value += ':' + verseNumber;
                if(typeof verseNumber == 'undefined' && inpt_nav.dataset.divtrans == 'trans1' && inpt_nav.dataset.show_verse > 0) inpt_nav.value += ':' + inpt_nav.dataset.show_verse;
    
                if(parseInt(to_verseNumber) > parseInt(verseNumber)) inpt_nav.value += '-' + to_verseNumber;
                if(typeof verseNumber == 'undefined' && inpt_nav.dataset.divtrans == 'trans1' && inpt_nav.dataset.show_to_verse > 0) inpt_nav.value += '-' + inpt_nav.dataset.show_to_verse;
            }
            
            //modifico los nombres de libros de la biblia en nav.
            sel(s_book,'b',null,trans);
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });

}

function changeTrans(e, trans, BibleShortName, EnglishPsalms){
    //console.log('===function changeTrans()===');
    
    var trans_buttons = document.querySelectorAll('#footerInner button');
    trans_buttons.forEach(el=>{
        el.classList.remove('btn_active');
    });
    e.classList.add('btn_active');
   
    let act_base_ep = div_trans1.dataset.base_ep;

    //div_trans1.setAttribute('data-trans',trans);
    div_trans1.dataset.trans = trans;
    //div_trans1.setAttribute('data-base_ep',EnglishPsalms);
    div_trans1.dataset.base_ep = EnglishPsalms;

    //meto la trans nueva en el array de trans
    arr_trans[0] = trans;
    arr_divShow[0] = 'col1';//ya que siempre se cambia el primer div col1 al cambiar la trans en el footer
    
    document.querySelector('#trans1 .colsHeadInner .partDesk .desk_trans').innerHTML = BibleShortName;
    document.querySelector('#trans1 .colsHeadInner .partMob .mob_trans').innerHTML = BibleShortName;
    s_book.click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля. 

    //en navegación
    var id_book = inpt_nav.getAttribute('data-id_book');
    var chapter = inpt_nav.getAttribute('data-show_chapter');
    var verseNumber = inpt_nav.getAttribute('data-show_verse');
    var to_verseNumber = (inpt_nav.getAttribute('data-show_to_verse') != '') ? inpt_nav.getAttribute('data-show_to_verse') : null ;
    inpt_nav.dataset.trans = trans;
    s_book.click();//simulo click sobre boton 'Kniga' para cargar los nombres corto de las libros de la Biblia

    chapter = (chapter != '') ? chapter : 1;//default si no hay
    var arr_verseView = [];//versiculos (elementos) visibles completamente en pantalla

    Array.from(document.querySelectorAll('.colsInner')[0].children).forEach(el=>{
        if(isInViewport(el)){
            //console.log('element is in ViewPort');
            //console.log(el);
            arr_verseView.push(el.getAttribute('data-verse'));
        }else{
            //console.log('element NO is in ViewPort');
            //console.log(el);
        }
    });
    
    let verseView = arr_verseView[0];
    let Translation = trans;
    let bq = arrFavTransObj.find(v => v.Translation == Translation);

    inpt_nav.setAttribute('data-show_book', bq.Books[id_book].ShortNames[0]);
    inpt_nav.value = bq.Books[id_book].ShortNames[0];
    if(chapter > 0) inpt_nav.value += ' ' + chapter;
    if(parseInt(verseNumber) > 0) inpt_nav.value += ':' + verseNumber;
    if(parseInt(to_verseNumber) > parseInt(verseNumber)) inpt_nav.value += '-' + to_verseNumber;
            
    //EnglishPsalms actual es igual que EnglishPsalms del modulo pinchado en footer, sólo recargo modulo base
    if(act_base_ep == EnglishPsalms){
        let arr_error_compare = [];
        let arr_cols_empty = [];
        document.querySelectorAll('.colsInner').forEach( el => {
            if(el.innerHTML.includes('prim_error_compare')){
                arr_error_compare.push(1);
            }
            if(el.innerHTML == ''){
                arr_cols_empty.push(1);
            }
        });
        //si hay errores de comparacion_ recargo todas las columnas
        if(arr_error_compare.length > 0 || arr_cols_empty.length > 0){
            showTrans(id_book, chapter, verseNumber, to_verseNumber, verseView);
        }else{//solo recargo col1
            window.arr_trans = [];//reset array de trans para formar uno nuevo
            window.arr_trans[0] = trans;//meto la trans nueva en el array de trans
            window.iter_i = 0;
            showChapterText4(trans,'#col1', id_book, chapter, verseNumber, to_verseNumber, verseView, 0); // indexColToBuild: 0 es col1    
        }  
    
    }else{//EnglishPsalms actual es distinto. recargo todos los trans abiertos            
        showTrans(id_book, chapter, verseNumber, to_verseNumber, verseView);
    }            
}

function changeModule(thisDiv,trans,BibleShortName){
   
    //thisDiv.setAttribute('data-trans',trans);
    thisDiv.dataset.trans = trans;
    if(thisDiv.id == 'trans1'){
        //meto BibleShortName en el primer div, ya que este no tiene 'x' close
        thisDiv.children[0].children[0].innerHTML = BibleShortName;
    }else{
        //meto BibleShortName en el segundo div, ya que el primero es 'x' close
        thisDiv.children[0].children[1].innerHTML = BibleShortName;
    }

    //en navegación
    let id_book = inpt_nav.getAttribute('data-id_book');
    let chapter = inpt_nav.getAttribute('data-show_chapter');
    let verseNumber = inpt_nav.getAttribute('data-show_verse');
    let to_verseNumber = inpt_nav.getAttribute('data-show_to_verse');

    chapter = (chapter != '') ? chapter : 1;//default si no hay
    var arr_verseView = [];//versiculos (elementos) visibles completamente en pantalla

    Array.from(thisDiv.parentElement.children[1].children).forEach(el=>{
        if(isInViewport(el)){
            //console.log('element is in ViewPort');
            //console.log(el);
            if(el.hasAttribute('data-verse')){
                arr_verseView.push(el.getAttribute('data-verse'));
            }
        }else{
            //console.log('element NO is in ViewPort');
            //console.log(el);
        }
    });
    var verseView = arr_verseView[0];
    //console.log('verseView: '+verseView);

    //si es trans1 cambio al color rojo el boton de footer en tablet y desktop
    if(thisDiv.id == 'trans1'){
        var trans_buttons = document.querySelectorAll('#footerInner button');
        trans_buttons.forEach(el=>{
            el.classList.remove('btn_active');
            if(el.value == thisDiv.dataset.trans){
                el.classList.add('btn_active');
                el.scrollIntoView();
            }
        });
    }
 
    //showChapterText3(trans,'#'+thisDiv.parentElement.getAttribute('id'), id_book, chapter, verseNumber, to_verseNumber, verseView);
    showChapterText4(trans,'#'+thisDiv.parentElement.getAttribute('id'), id_book, chapter, verseNumber, to_verseNumber, verseView);

    setTimeout(() => {
        mySizeWindow();
        mySizeVerse();
    }, 300);
}

function changeModule2(thisDiv, trans, BibleShortName, EnglishPsalms) {
    //console.log('function changeModule2. abajo thisDiv: ');
    //console.log(thisDiv);

    thisDiv.setAttribute('data-trans', trans);
    thisDiv.setAttribute('data-base_ep', EnglishPsalms);
    if (thisDiv.id == 'trans1') {
        //meto BibleShortName en el primer div, ya que este no tiene 'x' close
        thisDiv.querySelector('.desk_trans').innerHTML = BibleShortName;
        thisDiv.querySelector('.mob_trans').innerHTML = BibleShortName;
    } else {
        //meto BibleShortName en el segundo div, ya que el primero es 'x' close
        thisDiv.querySelector('.desk_trans').innerHTML = BibleShortName;
        thisDiv.querySelector('.mob_trans').innerHTML = BibleShortName;
    }

    let trans_actual = thisDiv.dataset.trans;
    let div_trans1 = document.getElementById('trans1');
    let act_base_ep = div_trans1.getAttribute('data-base_ep');

    getArrTransFromCols();
        
    //saco id de la columna de la trans
    let idColToBuild = thisDiv.parentElement.id;
    let indexColToBuild = arr_trans.indexOf(trans_actual);
    //console.log(' indexColToBuild: ', indexColToBuild);
    
    //console.log(' actual arr_trans: ', arr_trans);
    //modifico arr_trans 
    arr_trans[indexColToBuild] = trans;
    //console.log(' cambiado arr_trans: ', arr_trans);

    //en navegación
    let id_book = inpt_nav.getAttribute('data-id_book');
    let chapter = inpt_nav.getAttribute('data-show_chapter');
    let verseNumber = inpt_nav.getAttribute('data-show_verse');
    let to_verseNumber = inpt_nav.getAttribute('data-show_to_verse');
    inpt_nav.dataset.trans = trans;
    s_book.click();//simulo click sobre boton 'Kniga' para cargar los nombres cortos de los libros de la Biblia

    chapter = (chapter != '') ? chapter : 1;//default si no hay
    let arr_verseView = [];//versiculos (elementos) visibles completamente en pantalla

    Array.from(thisDiv.parentElement.children[1].children).forEach(el => {
        if (isInViewport(el)) {
            //console.log('element is in ViewPort');
            //console.log(el);
            if (el.hasAttribute('data-verse')) {
                arr_verseView.push(el.getAttribute('data-verse'));
            }
        } else {
            //console.log('element NO is in ViewPort');
            //console.log(el);
        }
    });
    let verseView = arr_verseView[0];
    //console.log('verseView: '+verseView);

    //si es trans1 cambio al color rojo el boton de footer en tablet y desktop
    if (thisDiv.id == 'trans1') {
        let trans_buttons = document.querySelectorAll('#footerInner button');
        trans_buttons.forEach(el => {
            el.classList.remove('btn_active');
            if (el.value == thisDiv.dataset.trans) {
                el.classList.add('btn_active');
                el.scrollIntoView();
            }
        });
    }

    //si es mobile, pongo 'row'
    if (window.innerWidth < pantallaTabletMinPx) {
        positionShow = 'col';//pongo 'col' para que se cambie a 'row' onclick
        changePositionShow(btn_changePositionShowModal);
    }

    let arr_error_compare = [];
    let arr_cols_empty = [];
    document.querySelectorAll('.colsInner').forEach(el => {
        if (el.innerHTML.includes('prim_error_compare')) {
            arr_error_compare.push(1);
        }
        if (el.innerHTML == '') {
            arr_cols_empty.push(1);
        }
    });
    //si hay errores de comparacion_ recargo todas las columnas
    if (arr_error_compare.length > 0 || arr_cols_empty.length > 0) {
        showTrans(id_book, chapter, verseNumber, to_verseNumber, verseView);
    } else {//solo recargo col de la trans nueva
        window.arr_trans = [];//reset array de trans para formar uno nuevo
        window.arr_trans[0] = trans;//meto la trans nueva en el array de trans
        window.iter_i = 0;
        showChapterText4(trans, '#' + idColToBuild, id_book, chapter, verseNumber, to_verseNumber, verseView, indexColToBuild); // indexColToBuild: 0 es col1    
    }

    setTimeout(() => {
        mySizeWindow();
        mySizeVerse();
    }, 300);
}


function changePositionShow(el){//row,col, default = col   
    if(positionShow == 'row'){
        positionShow = 'col';
        // el.innerText = 'Row';
        //si element tiene dentro un div, es el boton del modalTop
        el.innerHTML = (el.querySelector(':scope > span') !== null) ? '<span>Row</span>' : 'Row';
        //hago scroll to top en columna para todos cols
        document.querySelectorAll('.colsInner').forEach(el=>{
            el.scrollTop = 0;
        });
    }else{
        positionShow = 'row';
        // el.innerText = 'Col';
        el.innerHTML = (el.querySelector(':scope > span') !== null) ? '<span>Col</span>' : 'Col';
    }
    mySizeWindow();
    mySizeVerse();
}


function mySizeWindow() {
    //console.log('mySizeWindow');   
    
    let window_w = window.innerWidth;
    let window_h = window.innerHeight;
    let header_h = header.offsetHeight;
    let footer_h = footer.offsetHeight;
    let headerContainer_h = headerContainer.offsetHeight;
    
    var pantalla, marginSidebar;
    if(window_w < pantallaTabletMinPx){
        pantalla = 'mobile';
        marginSidebar = 0;
        sidebar.removeAttribute('style');
    }else if(window_w >= pantallaTabletMinPx /*768*/ && window_w <= pantallaTabletMaxPx /*1023*/){
        pantalla = 'tablet';
        marginSidebar = 10;
        sidebar.removeAttribute('class');
    }else if(window_w >= 1024){
        pantalla = 'desktop';
        marginSidebar = 10;
        sidebar.removeAttribute('class');
    }
    let marginSidebar_h = marginSidebar * 2;//arriba y abajo
    // console.log('window_w: '+window_w);
    // console.log('pantalla: '+pantalla);
    // console.log('marginSidebar: '+marginSidebar);


    let wrCols_h = 
      window_h //960
    - header_h //42
    - footer_h //46
    - headerContainer_h
    ;
    // console.log('formula: window_h - + header_h - footer_h - marginSidebar_h = wrCols_h');
    // console.log('wrCols_h: ' + window_h +' - ' + header_h +' - ' + footer_h +' = ' + wrCols_h );

    let sidebar_h = 
      window_h //960
    - header_h //42
    - footer_h //46
    ;
    let container_h = sidebar_h; 
    let v_line_h = sidebar_h; 

    wrapper.style.top = header_h + 'px';
    wrCols.style.height = wrCols_h + 'px';

    sidebar.style.height = sidebar_h + 'px';
    container.style.height = container_h + 'px';
    v_line.style.height = v_line_h + 'px';

    let colsAll = document.querySelectorAll('.cols');
    let colsHeadAll = document.querySelectorAll('.colsHead');
    let colsInnerAll = document.querySelectorAll('.colsInner');

    let arr_th = [];
    let sum_trans_h = 0; 
    colsHeadAll.forEach(el => { 
        el.style.removeProperty('height');
        arr_th.push(el.offsetHeight); 
        sum_trans_h += el.offsetHeight;
    });
    let trans_min_h = Math.min(...arr_th);
    let trans_max_h = Math.max(...arr_th);


    if(positionShow == 'row'){
        colsAll.forEach(el=>{
            el.style.width = 100 + '%';//100%
        });

        colsHeadAll.forEach(el=>{
            el.style.height =  trans_min_h +'px';
        });
        
        colsInnerAll.forEach(el=>{
            el.style.height =  wrCols_h / colsInnerAll.length - trans_min_h +'px';// 1/3 de height
        });

        wrCols.classList.remove('wrCols_center');
        wrCols.style.maxWidth = '';
        
    }else{//col
        colsAll.forEach(el=>{
            el.style.width = 100 / colsInnerAll.length +'%';//33%
        });

        colsHeadAll.forEach((el,i)=>{
            el.style.height =  trans_max_h +'px';
        });

        if(pantalla == 'desktop'){
            //añado anchi maximo de 350 px para comodidad de leer
            wrCols.style.maxWidth = 350 * colsInnerAll.length + 'px';
            colsHeadAll[0].style.display = '';
        }else if(pantalla == 'tablet'){
            //añado anchi maximo de 350 px para comodidad de leer
            //wrCols.style.maxWidth = 350 * colsInnerAll.length + 'px';//antes
            wrCols.style.maxWidth = '';
            colsHeadAll[0].style.display = '';
        }else if(pantalla == 'mobile'){
            wrCols.style.maxWidth = '';
            if(colsHeadAll.length == 1){
                //document.querySelectorAll('.colsHead')[0].style.display = 'none';//comento temporalmente
            }
        }

        colsInnerAll.forEach((el,i)=>{
            //si se ve head con el texto de traducción...
            if(colsHeadAll[i].offsetHeight != 0){
                el.style.height =  wrCols_h - trans_max_h +'px';
            }else{
                el.style.height =  wrCols_h +'px';
            }
        });
        //pongo top para boton pageUp()
        let top_h = colsInnerAll[colsInnerAll.length-1].getBoundingClientRect().top;
        btn_pageUp.style.top = top_h + 10 + 'px';

        wrCols.classList.add('wrCols_center');
    }

    setTimeout(()=>{
        initScroll();
        getArrSumLineH();
    },100);

    mySizeNav();
    mySizeFind();
    mySizeTsk();
    mySizeStrong();

    /*
    //console.log('window_h: ' + window_h);
    //console.log('header_h: ' + header_h);
    //console.log('footer_h: ' + footer_h);
    //console.log('container.offsetHeight: ' + container.offsetHeight);
    //console.log('containerInner.offsetHeight: ' + containerInner.offsetHeight);
    //console.log('window_w: ' + window_w);
    //console.log('body.offsetWidth: ' + body.offsetWidth);
    //console.log('body.offsetHeight: ' + body.offsetHeight);
    //console.log('wrCols_h: ' + wrCols_h);
    //console.log('---');
    */  
}

function mySizeNav(){
    // Get the height of the element, including margins
    const sidebarInner_margins_h = 
    parseInt(computedStyle.marginTop) + 
    parseInt(computedStyle.marginBottom);

    let sidebar_h = sidebar.offsetHeight;
    let sidebarInner_h = sidebar_h - sidebarInner_margins_h;
    let menuTabs_h = menuTabs.offsetHeight;
    let nav_head_h = nav_head.offsetHeight;

    let nav_body_h = 
      sidebar_h
    - sidebarInner_margins_h
    - menuTabs_h
    - nav_head_h
    ;
    sidebarInner.style.height = sidebarInner_h + 'px';
    nav_body.style.height = nav_body_h + 'px';
    // console.log('nav_body_h: '+nav_body_h);    
}

function mySizeFind(){
    let padding_find_body = 10;//antes 10// 10 si padding-top:5px y padding-bottom:5px // 15 si padding-top:5px y margin-bottom: 5px

    // Get the height of the element, including margins
    const sidebarInner_margins_h = parseInt(computedStyle.marginTop) + parseInt(computedStyle.marginBottom);

    let sidebar_h = sidebar.offsetHeight;
    let sidebarInner_h = sidebar_h - sidebarInner_margins_h;
    let menuTabs_h = menuTabs.offsetHeight;
    let wr_find_head_h = wr_find_head.offsetHeight;

    let find_body_h = 
      sidebar_h
    - sidebarInner_margins_h
    - menuTabs_h
    - wr_find_head_h
    - padding_find_body
    ;
    sidebarInner.style.height = sidebarInner_h + 'px';
    find_body.style.height = find_body_h + 'px';
    //console.log('find_body_h: '+find_body_h);
}


function mySizeTsk(){
    let padding_tsk_body = 15;// 10 si padding-top:5px y padding-bottom:5px // 15 si padding-top:5px y margin-bottom: 5px
    
    // Get the height of the element, including margins
    const sidebarInner_margins_h = parseInt(computedStyle.marginTop) + parseInt(computedStyle.marginBottom);

    let sidebar_h = sidebar.offsetHeight;
    let sidebarInner_h = sidebar_h - sidebarInner_margins_h;
    let menuTabs_h = menuTabs.offsetHeight;
    let tsk_head_h = tsk_head.offsetHeight;

    let tsk_body_h = 
      sidebar_h
    - sidebarInner_margins_h
    - menuTabs_h
    - tsk_head_h
    - padding_tsk_body
    ;
    sidebarInner.style.height = sidebarInner_h + 'px';
    tsk_body.style.height = tsk_body_h + 'px';
    //console.log('tsk_body_h: '+tsk_body_h);
}

function mySizeStrong(){
    let padding_strong_body = 10;//antes 15 // 10 si padding-top:5px y padding-bottom:5px // 15 si padding-top:5px y margin-bottom: 5px

    // Get the height of the element, including margins
    const sidebarInner_margins_h = parseInt(computedStyle.marginTop) + parseInt(computedStyle.marginBottom);

    let sidebar_h = sidebar.offsetHeight;
    let sidebarInner_h = sidebar_h - sidebarInner_margins_h;
    let menuTabs_h = menuTabs.offsetHeight;
    let wr_strong_head_h = wr_strong_head.offsetHeight;

    //si hay una card con el numero strong dentro
    let hasStrongCard = false;    
    for (let i = 0; i < strong_body.children.length; i++) {
        const childElement = strong_body.children[i];

        if(childElement.classList.contains('p_v')) {
            hasStrongCard = true;
            break; // Exit the loop once a matching child is found
        }
    }
    let padding_StrongCard = 2;//siempre 2px por el border
    // console.log('hasStrongCard: '+hasStrongCard);
    // console.log('padding_StrongCard: '+padding_StrongCard);

    let strong_body_h = 
      sidebar_h
    - sidebarInner_margins_h
    - menuTabs_h
    - wr_strong_head_h
    - padding_strong_body
    - padding_StrongCard //2px de border
    ;
    sidebarInner.style.height = sidebarInner_h + 'px';
    strong_body.style.height = strong_body_h + 'px';
    //console.log('strong_body_h: '+strong_body_h);    
}


function mySizeVerse(){
    //console.log('mySizeVerse');

    window.arr_h = [];
    window.arr_sum_line_h = [];
    var arr_p_len = [];
    var colsHeadAll = document.querySelectorAll('.colsHead');
    var colsInnerAll = document.querySelectorAll('.colsInner');

    colsHeadAll.forEach(el=>{
        //si el ancho de una col es menos de 350, quito min-width:90px
        if(el.offsetWidth < 350){
            el.querySelector('.partDesk .desk_trans').classList.remove('mw-90');
            el.querySelector('.partDesk .desk_sh_link').classList.remove('mw-90');
        }else{
            el.querySelector('.partDesk .desk_trans').classList.add('mw-90');
            el.querySelector('.partDesk .desk_sh_link').classList.add('mw-90');
        }
    });

    colsInnerAll.forEach(function(el,index){
        //console.log(el);

        colsInnerAll.forEach(e => {
            Array.from(e.children).forEach(e => {
                e.style.removeProperty('height');
            });
        });

        let colsInnerAll_ch = document.querySelectorAll('.colsInner')[index].children;
        var arr_h2 = [];
        var arr_sum_p_h2 = [];
        var sum_p_h = 0;

        arr_p_len.push(colsInnerAll_ch.length);

        Array.from(colsInnerAll_ch).forEach(function(el2, index2, arr2){
            //console.log(el2);
            //console.log(arr2[index2]);
            
            arr_h2.push(arr2[index2].offsetHeight);
            
            sum_p_h += arr2[index2].offsetHeight;
            arr_sum_p_h2.push(sum_p_h);
            //console.log('sum_p_h: '+sum_p_h);
        });
        //console.log('kolonka cols['+index+']. arr_h2: '+arr_h2);

        arr_h.push(arr_h2);
        arr_sum_line_h.push(arr_sum_p_h2);
    });

    //console.log(arr_h);
    //console.log('arr_p_len: '+arr_p_len);

    var p_count = Math.max(...arr_p_len);
    //console.log('p_count: '+p_count);

    window.arr_line_h = [];       

    for(var p = 0; p < p_count; p++){
        //console.log(i);

        let max_h = 0;
        var arr_line_h2 = [];
        
        for(let c = 0; c < colsInnerAll.length; c++){
            
            let act_h = (typeof arr_h[c][p] !== 'undefined') ? arr_h[c][p] : 0 ;            
            arr_line_h2.push(act_h);
            //console.log('act_h: '+act_h);

            //document.querySelectorAll('.colsInner')[c].querySelectorAll('p')[p].style.height = max_h + 'px';
            if(typeof document.querySelectorAll('.colsInner')[c].children[p] !== 'undefined'){
                let este_cont = document.querySelectorAll('.colsInner')[c].children[p].innerHTML; 
                //console.log('colsInner['+c+'] children['+p+'] este_cont: '+este_cont);

                //document.querySelectorAll('.colsInner')[c].children[p].style.background = bg;//test
                if(['span','b','i','strong'].includes(document.querySelectorAll('.colsInner')[c].children[p].localName) ){
                    document.querySelectorAll('.colsInner')[c].children[p].style.display = 'block';
                }
            }
        }
        arr_line_h.push(arr_line_h2);
        //console.log('abajo arr_line_h');
        //console.log(arr_line_h);

        max_h = Math.max(...arr_line_h2);
        //console.log('pongo max_h: '+max_h);
        
        //para cada versiculo 'p' de cada columpa 'ch' pongo la misma altura 'max_h' si es positionShow 'col'
        if(positionShow == 'col'){
            for(var ch = 0; ch < colsInnerAll.length; ch++){
                if(typeof document.querySelectorAll('.colsInner')[ch].children[p] !== 'undefined'){
                    document.querySelectorAll('.colsInner')[ch].children[p].style.height = max_h + 'px';
                }
            }
        }
    }
    setTimeout(()=>{
        addMarginTolastP();
        initScroll();
        getArrSumLineH();
    },100);

}//end mySizeVerse()


function addMarginTolastP(){
    let colsInnerAll = document.querySelectorAll('.colsInner');
    colsInnerAll.forEach(col=>{
        //si es ultimo elemento, añado padding-bottom
        let p_last = col.querySelector('p:last-child');
        
        if(p_last != null){
            // let mb_h = col.offsetHeight - p_last.offsetHeight;//antes
            let mb_h = col.offsetHeight;
            //console.log('mb_h: '+mb_h);
            /*
            const d = document.createElement('div');
            d.className = 'd_bot';
            d.style.background = 'pink';
            d.innerHTML = `<div class="d_btn">prev chapter</div>
                           <div class="d_btn">next chapter</div>
                          `;
            p_last.insertAdjacentElement('afterend', d);
            //d.style.height = mb_h + 'px';
            */

            p_last.style.marginBottom = mb_h /*- d.offsetHeight*/ + 'px';
            //p_last.style.background = 'lightgreen';
        }
    });
}


function ref(string){
    document.querySelector('#sidebarInner p').innerHTML = string;
}


function addTrans(addMode = null){
    let countCols = document.querySelectorAll('.cols').length;
    //console.log(countCols);

    let arr_n = [];
    document.querySelectorAll('.cols').forEach(el => {
        let n = parseInt(el.getAttribute('id').slice(-1));
        arr_n.push(n); 
    });
    //console.log(arr_n);

    for(let i = 1; i <= 8; i++) {
        if(!arr_n.includes(i)){
            var next_n = i;
            break;
        }
    }

    if(countCols < 8){        
        let new_w = 100 / (countCols+1) + '%';
        document.querySelectorAll('.cols').forEach(el => {
            el.style.width = new_w;
        });

        const htmlCol = document.createElement("div");//Column
        htmlCol.id = 'col' + next_n;
        htmlCol.className = 'cols';
        htmlCol.style.width = new_w;

        const htmlTrans = document.createElement("div");//Translation of Bible
        htmlTrans.id = 'trans' + next_n;
        htmlTrans.className = 'colsHead';

        htmlTrans.innerHTML =  `<div class="colsHeadInner">
                                    
                                    <div class="partDesk">

                                        <div class="wr_desk_trans" title="Presiona para seleccionar la traducción." onclick="openModal('full',document.querySelector('#${htmlTrans.id}.colsHead'))">
                                        
                                            <div class="vstavka_left">&nbsp;</div>
                                            <div class="centralPart">
                                                <div class="desk_trans"><span class="sp_plus_trans"> + </span></div>
                                                <div class="separ_line"></div>
                                                <div class="desk_sh_link"> --. --:-- </div>
                                            </div>
                                            <button class="btn btn_xsm f_r" onclick="closeTrans(this,event)">&#10005;</button><!--X-->    

                                        </div>
                                    
                                    </div>

                                    <div class="partMob">
                                        <div class="partMobInner">

                                            <button class="btnMenu btn btn_svg" data-typebtn="transMenu" onclick="openSidebar(this)"><img src="images/menu_white.svg"></button>
                                            <button class="btn btn_svg" onclick="chapterGo('prev')" title="Previous Chapter"><img src="images/arrow_chevron_left_white.svg"></button>
                                            
                                            <div class="centralPart">
                                                <button class="btn" onclick="openModal('full',document.querySelector('#${htmlTrans.id}.colsHead'))" title="open Modal to choose translation">
                                                    <span class="mob_trans">RST+r</span>
                                                </button>
                                                <div class="separ_line"></div>
                                                <button class="btn" data-typebtn="transRef" onclick="showTabMob('#btn_nav','nav',this)" title="Навигация. Выбор книги, главы, стиха">
                                                    <span class="mob_sh_link">Jn.3:16</span>
                                                </button>
                                            </div>
                                            
                                            <button class="btn btn_svg" onclick="chapterGo('next')" title="Next Chapter"><img src="images/arrow_chevron_right_white.svg"></button>                                            
                                            <button class="btn btn_x" onclick="closeTrans(this,event,'mob')" title="close Translation">&#10005;</button><!--x-->
                                            
                                        </div>
                                    </div> 

                                </div>`;       


        const htmlBody = document.createElement("div");//Text of Bible
        htmlBody.className = 'colsInner';						
        htmlBody.innerHTML =  `	<p class="prim">Выберите модуль Библии кликнув на '+' вверху.</p>
                                `;
                        
        htmlCol.appendChild(htmlTrans);
        htmlCol.appendChild(htmlBody);

        wrCols.appendChild(htmlCol);

        setTimeout(e => {
            mySizeVerse();
        },15);

        setTimeout(e => {
            mySizeWindow();
        },10);

        if(positionShow == 'row'){
            mySizeWindow();
            mySizeVerse();
            //console.log('en addTrans() mySize...');
        }
        
        if(addMode == 'askForTrans'){
            //propongo selección del modulo
            openModal('full',htmlTrans);//contiene dentro selectModule2()
        }else{
            //no hago nada. añado col vacio
        }
        setTimeout(()=>{
            //console.log(' en 1 sec llamo updateTransFromActiveCol()');
            updateTransFromActiveCol();
        },1000);
    }
    
}

function removeTrans(){
    let countCols = document.querySelectorAll('.cols').length;
    //console.log(countCols);
    if(countCols != 1){
        wrCols.lastElementChild.remove();
        mySizeWindow();
        mySizeVerse();
    }
}

function closeTrans(el,event, param = null){
    var n = el.parentElement.parentElement.parentElement.parentElement.id.slice(-1);
    //console.log(n);
    event.stopPropagation();
    
    document.querySelector('#col'+n).remove();

    mySizeWindow();
    mySizeVerse();
}



function getRefOfTab(tab_id, ref, str_trans = null){
    //alert(str_trans);
    let this_tab = document.querySelector('#'+tab_id);
    //console.log(this_tab);
    
    let tabsAll = document.querySelectorAll('.tabs');
    tabsAll.forEach(el=>{
        el.classList.remove('tab_active');
    });
    if(this_tab != null) this_tab.classList.add('tab_active');

    let colsAll = document.querySelectorAll('.cols');
    inpt_nav.value = ref;

    str_trans = (str_trans != null) ? str_trans : inpt_nav.dataset.trans;
    arr_trans = str_trans.split(',');

    //удаляю лишние колоны
    if(colsAll.length > arr_trans.length){
        let counDiff = colsAll.length - arr_trans.length;
        for (let index = 0; index < counDiff; index++) {
            removeTrans();
        }
    }

    arr_trans.forEach((el,i)=>{
        el = el.trim();
        //console.log(el);

        var obj_el_trans = arrFavTransObj.find(v => v.Translation === el);

        if(typeof obj_el_trans != 'undefined'){            
            if(colsAll[i] != null){//existe una columna
                colsAll[i].querySelector('.colsHead').dataset.trans = obj_el_trans.Translation;
                colsAll[i].querySelector('.colsHead').dataset.base_ep = obj_el_trans.EnglishPsalms;
            }else{//no existe columna. añado una trans 
                addTrans();//trans vacia
                let ult_col = document.querySelectorAll('.cols')[document.querySelectorAll('.cols').length - 1];
                ult_col.querySelector('.colsHead').dataset.trans = obj_el_trans.Translation;
                ult_col.querySelector('.colsHead').dataset.base_ep = obj_el_trans.EnglishPsalms;
            }
        }        

        //si es trans1 cambio al color rojo el boton de footer en tablet y desktop
        if(i == 0 && colsAll[i].querySelector('.colsHead').id == 'trans1'){
            var trans_buttons = document.querySelectorAll('#footerInner button');
            trans_buttons.forEach(el=>{
                el.classList.remove('btn_active');
                if(el.value == colsAll[i].querySelector('.colsHead').dataset.trans){
                    el.classList.add('btn_active');
                    el.scrollIntoView();
                }
            });
            if(typeof obj_el_trans != 'undefined'){
                //cambio trans del inpt_nav
                inpt_nav.dataset.trans = obj_el_trans.Translation;
            }
        }

    });

    //ejecuto click sobre el boton ok en inpt_nav para que se muestren botones de verses
    btn_ok.click();
    setTimeout(()=>{
        s_verse.click();
    },100);
}

function addTab(bibShortRef = null, str_trans = null, act = null, tab_new = null){
    let tabsAll = document.querySelectorAll('.tabs');
    let countTabs = tabsAll.length;
    //console.log(countTabs);
    let maxTabs = 20;

    let arr_n = [];
    tabsAll.forEach(el => {
        let n = parseInt(el.getAttribute('id').substring(3));//tab10 => 10
        arr_n.push(n); 
    });
    //console.log(arr_n);

    for(let i = 1; i <= maxTabs; i++){
        if(!arr_n.includes(i)){
            var next_n = i;
            break;
        }
    }

    bibShortRef = (bibShortRef != null) ? bibShortRef : div_trans1.querySelector('.desk_sh_link').innerHTML ;

    //si se añade nueva tab 
    if(str_trans == null){
        let colsHeadAll = document.querySelectorAll('.colsHead');
        let arr_str_trans = []; 
        colsHeadAll.forEach(el => {
            arr_str_trans.push(el.dataset.trans); 
        });
        str_trans = arr_str_trans.join();
        console.log('new str_trans: '+str_trans);
    }

    if(countTabs < maxTabs){
        const htmlTab = document.createElement("div");
        htmlTab.id = 'tab' + next_n;
        htmlTab.className = 'tabs';
        htmlTab.dataset.str_trans = str_trans;
        htmlTab.onclick = function(e){
            getRefOfTab(htmlTab.id, htmlTab.querySelector('span').innerHTML, htmlTab.dataset.str_trans);
            updateArrTabs();
        };
        if(act != null) htmlTab.classList.add('tab_active');//antes

        
        if(tab_new == 'tab_new'){
            let tabsAll = document.querySelectorAll('.tabs');
            tabsAll.forEach(el=>{
                el.classList.remove('tab_active');
            });
            htmlTab.classList.add('tab_active');
        }


        const spanBibShortRef = document.createElement("span");
        spanBibShortRef.innerHTML = (bibShortRef != null) ? bibShortRef : `New Tab${next_n}` ;
        //spanBibShortRef.title = str_trans;

        //a todos los tabs añado span close x
        htmlTab.innerHTML = '<button class="btn btn_sm f_r" onclick="closeTab(this)">&#10005;</button>';//<!--X-->
        htmlTab.appendChild(spanBibShortRef);

        document.querySelector('#partDeskTabs').appendChild(htmlTab);


        let tabsAll = document.querySelectorAll('.tabs');
        // Itera a través de los hijos y verifica si alguno tiene la clase 'active'
        for(let i = 0; i < tabsAll.length; i++) {
            if (tabsAll[i].classList.contains('tab_active')) {
                document.querySelector('.tab_active').scrollIntoView();
                break; // Si se encuentra un hijo con la clase 'active', puedes salir del bucle
                //console.log('tiene active');
            }
        }      

        //actualizo despues de 1 sec para que llegue a cargarse objeto de trans
        setTimeout(()=>{
            updateArrTabs();
        },1000);
        
    }
}

function updateArrTabs(){
    arrTabs = [];//reset

    let tabsAll = document.querySelectorAll('.tabs');
    tabsAll.forEach(el=>{
        //console.log(`el.id: ${el.id} --- el.classList: ${el.classList}`);
        let has_btn_close = (el.querySelector(':scope > button') !== null) ? true : false ;

        //saco BibleShortName por Translation desde string
        let arr_trans_names = [];
        let arr_el_trans = el.dataset.str_trans.split(','); 
        arr_el_trans.forEach(el_tr => {
            el_tr = el_tr.trim();
            //console.log('el_tr: '+el_tr);
            
            const el_tr_obj = getObjTransByName(el_tr);
            //console.log(el_tr_obj);
            if(typeof el_tr_obj != 'undefined') arr_trans_names.push(el_tr_obj.BibleShortName);
        });
        let str_trans_names = arr_trans_names.join(', ');
        //console.log('end --- str_trans_names: '+str_trans_names); 
        
        el.title = str_trans_names;

        const el_obj = {
            id: el.id,
            className: el.getAttribute('class'),
            str_trans: el.dataset.str_trans,
            title: str_trans_names,
            btn_close: has_btn_close,
            ref: el.querySelector('span').innerHTML
        };
        //console.log(el_obj);
        arrTabs.push(el_obj);
    });
    //console.log(arrTabs);
}

function showTabs(){
    //console.log('function showTabs()');
    openModal('tabsList',null);//contiene dentro selectTab()
}


function removeTab(){
    let countTabs = document.querySelectorAll('.tabs').length;
    //console.log(countTabs);

    if(countTabs != 1){
        document.querySelector('#partDeskTabs').lastElementChild.remove();
    }
    updateArrTabs();
}

function closeTab(el){       
    el.parentElement.remove();
    updateArrTabs();
}

//sel(document.querySelector('.bcv_active'),'b');//por defecto


//Click sobre el boton li del libro de la Biblia en navegación
function selBook(e){
    //console.log(e.srcElement.innerText);
    
    obj_nav.divtrans = inpt_nav.dataset.divtrans;
    obj_nav.trans = inpt_nav.dataset.trans;
    obj_nav.id_book = e.srcElement.getAttribute('data-id_book');
    obj_nav.show_book = e.srcElement.getAttribute('data-show_book');
    obj_nav.id_chapter = '';
    obj_nav.show_chapter = '';
    obj_nav.id_verse = '';
    obj_nav.show_verse = '';


    inpt_nav.setAttribute('data-id_book',e.srcElement.getAttribute('data-id_book'));//0, 1, 2
    inpt_nav.setAttribute('data-show_book',e.srcElement.getAttribute('data-show_book'));//Gen. Ex. Lev.

    inpt_nav.setAttribute('data-id_chapter','');
    inpt_nav.setAttribute('data-show_chapter','');

    inpt_nav.setAttribute('data-id_verse','');
    inpt_nav.setAttribute('data-show_verse','');
    
    inpt_nav.value = inpt_nav.getAttribute('data-show_book') + ' ';

    //reseteo los botones li de versiculos ya que todavia no estan seleccionados los chapters
    //v_verse.innerHTML = '<span class="prim_verse">test: Antes de seleccionar el versículo, selecciona el capítulo por favor.</span>';            //antes
    v_verse.innerHTML = 'cargando versículos...';            


    e.srcElement.classList.add('active');//añado bg red al boton 'Sal.'
    s_chapter.click();// me muevo a la pestaña 'Glava'
    //en #s_chapter se llama sel(this,'ch',trans)...
    //en #v_chapter se quitan todos los li's botones de chapters para crear nuevos li's
    //en for se crean li's y si hay id_chapter -> al li que es igual a (id_chapter +1)=show_chapter se añade bg red class '.active'
    showTrans(e.srcElement.getAttribute('data-id_book'), 1);//cargo con fetch chapter 1 por defecto    
}

//Click sobre el capítulo del libro de la Biblia en navegación
function selChapter(e, show_chapter = null){
    //console.log(e.srcElement.innerText); 
    let param_id_chapter = (show_chapter == null) ? e.srcElement.getAttribute('data-id_chapter') : show_chapter - 1 ;
    let param_show_chapter = (show_chapter == null) ? e.srcElement.getAttribute('data-show_chapter') : show_chapter ;


    //si es trans2 y es trans con EnglishPsalms 'Y' se cliquea en el boton li de chapter Sal.23 español, convierto el chapter en el Пс 22 ruso 
    //console.log('clickeado trans: '+inpt_nav.dataset.trans);
    //console.log('clickeado show_chapter: '+e.srcElement.getAttribute('data-show_chapter'));

    //var trans_base = div_trans1.dataset.trans;//la trans base de #trans1
    var trans_inpt = inpt_nav.dataset.trans;// trans desde input
    var divtrans_inpt = inpt_nav.dataset.divtrans;// trans desde input

    var is_changedChapter = false;

    if(divtrans_inpt != '' && divtrans_inpt != 'trans1'){
        // Usa el método find para buscar el objeto que contiene 'rst' como nombre
        const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
        const obj_trans_inpt = arrFavTransObj.find(v => v.Translation === trans_inpt);

        if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_inpt.EnglishPsalms == 'Y'){
            //var new_res = convertLinkFromEspToRus(inpt_nav.dataset.id_book, e.srcElement.getAttribute('data-show_chapter'), null, null);//importante EspToRus
            var new_res = convertLinkFromEspToRus(inpt_nav.dataset.id_book, param_show_chapter, null, null);//importante EspToRus
            var chapterNumber = new_res[1];
            //console.log('en selChapter --- convertido chapterNumber: '+chapterNumber);//empezando de 1
            is_changedChapter = true;
        }
        else if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_inpt.EnglishPsalms == 'N'){
            //var new_res = convertLinkFromRusToEsp(inpt_nav.dataset.id_book, e.srcElement.getAttribute('data-show_chapter'), null, null);//importante RusToEsp
            var new_res = convertLinkFromRusToEsp(inpt_nav.dataset.id_book, param_show_chapter, null, null);//importante RusToEsp
            var chapterNumber = new_res[1];
            //console.log('en selChapter --- convertido chapterNumber: '+chapterNumber);//empezando de 1
            is_changedChapter = true;
        }else{
            //var chapterNumber = e.srcElement.getAttribute('data-show_chapter');
            var chapterNumber = param_show_chapter;
        }

        obj_nav.id_chapter = chapterNumber - 1;
        obj_nav.show_chapter = chapterNumber;
        obj_nav.id_verse = '';
        obj_nav.show_verse = '';

        inpt_nav.setAttribute('data-id_chapter',chapterNumber - 1);
        inpt_nav.setAttribute('data-show_chapter',chapterNumber); 

    }else{//si es trans1

        //obj_nav.id_chapter = e.srcElement.getAttribute('data-id_chapter');
        //obj_nav.show_chapter = e.srcElement.getAttribute('data-show_chapter');
        obj_nav.id_chapter = param_show_chapter - 1;
        obj_nav.show_chapter = param_show_chapter;
        obj_nav.id_verse = '';
        obj_nav.show_verse = '';
    }


    if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){

        if(document.querySelectorAll('.cols').length > 1 && is_changedChapter == false){

            var id_book = obj_nav.id_book;
            var chapter = obj_nav.show_chapter;
            var verse = obj_nav.show_verse; 
            var to_verse = null;//todavia no está seleccionado
            
            var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);

            if(res_new_link){
                //asigno nuevo valor
                var bookNumber = res_new_link[0];
                var chapterNumber = res_new_link[1];
                var verseNumber = res_new_link[2];
                var to_verseNumber = res_new_link[3];
                var trans_BookShortName = res_new_link[4];
                
                // console.log('---despues---');
                // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber

                var new_ref_text = trans_BookShortName;
                if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                inpt_nav.value = new_ref_text;

                inpt_nav.setAttribute('data-id_chapter',chapterNumber - 1);//REVISAR!!!
                inpt_nav.setAttribute('data-show_chapter',chapterNumber); //REVISAR!!!
        
                inpt_nav.setAttribute('data-id_verse','');
                inpt_nav.setAttribute('data-show_verse','');
            }
        }

        
        if(show_chapter == null){
            e.srcElement.classList.add('active');//añado bg red al li boton del chapter '22'
        }
        s_verse.click();// me muevo a la pestaña 'Stij'
        //en #s_verse se llama sel(this,'v',trans)...
        //en #v_verse se quitan todos los li's botones de verses para crear nuevos li's
        //en for se crean li's y si hay id_chapter -> al li que es igual a (id_chapter +1)=show_chapter se añade bg red class '.active'
    
        showTrans(inpt_nav.getAttribute('data-id_book'), chapterNumber);//chapter def 1 

    }else{//trans1
        inpt_nav.setAttribute('data-id_chapter', param_show_chapter - 1);
        inpt_nav.setAttribute('data-show_chapter', param_show_chapter); 

        inpt_nav.setAttribute('data-id_verse','');
        inpt_nav.setAttribute('data-show_verse','');
    
        inpt_nav.value = inpt_nav.getAttribute('data-show_book') + ' ' + inpt_nav.getAttribute('data-show_chapter'); 
        
        if(show_chapter == null){
            e.srcElement.classList.add('active');//añado bg red al li boton del chapter '22'
        }
        s_verse.click();// me muevo a la pestaña 'Stij'
        //en #s_verse se llama sel(this,'v',trans)...
        //en #v_verse se quitan todos los li's botones de verses para crear nuevos li's
        //en for se crean li's y si hay id_chapter -> al li que es igual a (id_chapter +1)=show_chapter se añade bg red class '.active'
    
        showTrans(inpt_nav.getAttribute('data-id_book'), param_show_chapter);//chapter def 1    
    }    
}

//Click sobre el versículo del capítulo del libro de la Biblia en navegación
function selVerse(e){
    //console.log(e.srcElement.innerText);

    //si es trans2 y es trans con EnglishPsalms 'Y' se cliquea en el boton li de chapter Sal.23 español, convierto el chapter en el Пс 22 ruso 
    //console.log('clickeado trans: '+inpt_nav.dataset.trans);
    //console.log('clickeado show_verse: '+e.srcElement.getAttribute('data-show_verse'));

    //var trans_base = div_trans1.dataset.trans;//la trans base de #trans1
    var trans_inpt = inpt_nav.dataset.trans;// trans desde input
    var divtrans_inpt = inpt_nav.dataset.divtrans;// trans desde input

    //asigno chapter por defecto si no hay cha`ter y se selecciona verse
    if(inpt_nav.getAttribute('data-id_chapter') == '' && inpt_nav.getAttribute('data-show_chapter') == ''){
        inpt_nav.setAttribute('data-id_chapter', 0);
        inpt_nav.setAttribute('data-show_chapter', 1);
    }

    var is_changedVerse = false;

    if(divtrans_inpt != '' && divtrans_inpt != 'trans1'){
        // Usa el método find para buscar el objeto que contiene 'rst' como nombre
        const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
        const obj_trans_inpt = arrFavTransObj.find(v => v.Translation === trans_inpt);

        if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_inpt.EnglishPsalms == 'Y'){
            var new_res = convertLinkFromEspToRus(inpt_nav.dataset.id_book, inpt_nav.getAttribute('data-show_chapter'), e.srcElement.getAttribute('data-show_verse'), null);//importante EspToRus
            var chapterNumber = new_res[1];
            var verseNumber = new_res[2];
            //console.log('en selVerse --- convertido verseNumber: '+verseNumber);//empezando de 1
            is_changedVerse = true;
        }
        else if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_inpt.EnglishPsalms == 'N'){
            var new_res = convertLinkFromRusToEsp(inpt_nav.dataset.id_book, inpt_nav.getAttribute('data-show_chapter'), e.srcElement.getAttribute('data-show_verse'), null);//importante RusToEsp
            var chapterNumber = new_res[1];
            var verseNumber = new_res[2];
            //console.log('en selVerse --- convertido verseNumber: '+verseNumber);//empezando de 1
            is_changedVerse = true;
        }else{
            var chapterNumber = inpt_nav.getAttribute('data-show_chapter');
            var verseNumber = e.srcElement.getAttribute('data-show_verse');
        }

        obj_nav.id_verse = verseNumber - 1;//comprobar!
        obj_nav.show_verse = verseNumber;//comprobar!

        inpt_nav.setAttribute('data-id_verse',verseNumber - 1);
        inpt_nav.setAttribute('data-show_verse',verseNumber); 

    }else{//si es trans1

        obj_nav.id_verse = e.srcElement.getAttribute('data-id_verse');
        obj_nav.show_verse = e.srcElement.getAttribute('data-show_verse');
    }



    if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){

        if(document.querySelectorAll('.cols').length > 1 && is_changedVerse == false){

            var id_book = obj_nav.id_book;
            var chapter = obj_nav.show_chapter;
            var verse = obj_nav.show_verse; 
            var to_verse = null;//todavia no está seleccionado
            
            var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);

            if(res_new_link){
                //asigno nuevo valor
                var bookNumber = res_new_link[0];
                var chapterNumber = res_new_link[1];
                var verseNumber = res_new_link[2];
                var to_verseNumber = res_new_link[3];
                var trans_BookShortName = res_new_link[4];
                
                // console.log('---despues---');
                // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber

                var new_ref_text = trans_BookShortName;
                if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                //document.querySelector('#inpt_nav').value = new_ref_text;//antes
                inpt_nav.value = new_ref_text;

                inpt_nav.setAttribute('data-id_verse',verseNumber - 1);//REVISAR!!!
                inpt_nav.setAttribute('data-show_verse',verseNumber); //REVISAR!!!
            }
        }

    }else{//trans1
        obj_nav.id_verse = e.srcElement.getAttribute('data-id_verse');
        obj_nav.show_verse = e.srcElement.getAttribute('data-show_verse');
    
        inpt_nav.setAttribute('data-id_verse',e.srcElement.getAttribute('data-id_verse'));
        inpt_nav.setAttribute('data-show_verse',e.srcElement.getAttribute('data-show_verse'));
        
        inpt_nav.value = inpt_nav.getAttribute('data-show_book') + ' ' + inpt_nav.getAttribute('data-show_chapter') + ':' +inpt_nav.getAttribute('data-show_verse');    
    } 
   
    
    document.querySelectorAll('#v_verse .v_li').forEach(el=>{
        el.classList.remove('li_active');
    });
    e.srcElement.classList.add('li_active');//añado bg red al li boton del verse '2'

    //document.querySelector('#btn_ok').click();
    scrollToVerse(e.srcElement.getAttribute('data-show_verse'));//me muevo al verse clickeado con scroll

    addRefToHistNav(inpt_nav.dataset.trans, inpt_nav.value, inpt_nav.dataset.id_book, inpt_nav.dataset.show_chapter, inpt_nav.dataset.show_verse, to_verse);

    //si es mobile, ciero menu
    if(window.innerWidth < pantallaTabletMinPx){
        //console.log('func selVerse(). mobile.');
        closeSidebar();
    }
}


//Click sobre el botton li of book 'Gen.' o chapter '1...' or verse '1...' 
//Construllo botones li de books, chapters, verses
function sel(e, par, show_chapter = null, trans = null){
    
    //var trans_base = div_trans1.dataset.trans;
    var trans_inpt = inpt_nav.dataset.trans;

    if(trans != null){
        var trans = trans;
    }else{
        if(trans_inpt != ''){
            var trans = trans_inpt;
        }else{
            var trans = trans_base;
        }
    }

    if(typeof arrFavTransObj != 'undefined' && arrFavTransObj != null && arrFavTransObj != ''){
        //creo objeto de esta trans
        var this_trans_obj = arrFavTransObj.find(v => v.Translation === trans);
        //console.log('abajo  this_trans_obj: ');
        //console.log(this_trans_obj);
    }

    var v_book = document.querySelector('#v_book')
    var v_chapter = document.querySelector('#v_chapter')
    var v_verse = document.querySelector('#v_verse');

    // console.log(' === en function sel(). trans1 (trans_base): '+trans_base);
    // console.log(' === en function sel(). param trans: '+trans);
    // console.log(' === en function sel(). trans2 (inpt): '+inpt_nav.dataset.trans);

    document.querySelectorAll('.v_bcv').forEach(el=>{
        el.classList.remove('bcv_active');
    });
    e.classList.add('bcv_active');

    document.querySelectorAll('.wr_lis').forEach(el=>{
        el.classList.remove('ul_active');
    });

    var bcv_line = document.querySelector('#bcv_line');


    switch (par) {
        case 'b':   //Select li Book
                    v_book.classList.add('ul_active');
                    bcv_line.classList.remove('c_line');
                    bcv_line.classList.remove('v_line');
                    bcv_line.classList.add('b_line');

                    var id_book = parseInt(inpt_nav.getAttribute('data-id_book'));
                    //console.log(id_book);

                    //modo new. Siempre salta este ya que cargo book despues de crear const arrFavTransObj
                    if(typeof arrFavTransObj != 'undefined' && arrFavTransObj != null && arrFavTransObj != ''){
                        
                        //alert('function sel() --- case: b (book) --- modo new. existe arrFavTransObj');
                        //console.log('function sel() --- case: b (book) --- modo new. existe arrFavTransObj');

                        // Registra el tiempo de inicio
                        //const tiempoInicio_b = new Date().getTime();

                        var myPromise_b = new Promise(function(resolve, reject){
                            resolve('ok');
                        });

                        myPromise_b
                        .then(res => {

                            if(res == 'ok'){
                                window.arr_books = this_trans_obj.Books;
                                //console.log(arr_books);
                            }
                
                            v_book.innerHTML = '';//reset botones de books
                
                            var arr_booksBible = [];
                            var arr_genesis_hechos = [];
                            var arr_ep_pablo = [];//epísolas de Pablo
                            var arr_ep_saniago = [];//de Santiago a Juda
                            var arr_apo = [];//Apocalipsis
                            var arr_apocrif = [];//Apocrifos
                    
                            arr_books.forEach((el_b,i_b,arr_b) =>{
                                let cl_book = '';//class de book
                                if(i_b >= 0 && i_b <= 4){
                                    cl_book = 'b_tora';//Tora
                                }
                                if(i_b >= 5 && i_b <= 16){
                                    cl_book = 'b_hist';//historicos
                                }
                                if(i_b >= 17 && i_b <= 21){
                                    cl_book = 'b_poet';//poeticos
                                }
                                if(i_b >= 22 && i_b <= 26){
                                    cl_book = 'b_gr_prof';//grandes profetas
                                }
                                if(i_b >= 27 && i_b <= 38){
                                    cl_book = 'b_peq_prof';//pequeños profetas
                                }
                                if(i_b >= 39 && i_b <= 42){
                                cl_book = 'b_evan';//evangelios
                                }
                                if(i_b == 43){
                                cl_book = 'b_hech';//hechos
                                }
                                if(i_b >= 44 && i_b <= 57){
                                    cl_book = 'b_ep_pablo';//epístolas Pablo
                                    arr_ep_pablo.push(el_b);
                                }
                                if(i_b >= 58 && i_b <= 64){
                                    cl_book = 'b_ep';//otras epístolas (Иаков...)
                                    arr_ep_saniago.push(el_b);
                                }
                                if(i_b == 65){
                                    cl_book = 'b_apo';//apocalipsis
                                    arr_apo.push(el_b);
                                }
                                if(i_b > 65){
                                    cl_book = 'b_apocrif';//apócrifos
                                    arr_apocrif.push(el_b);
                                }
                                if(i_b >= 0 && i_b <= 43){//de genesis a hechos
                                    arr_genesis_hechos.push(el_b);
                                }
                                el_b.cl_book = cl_book;//obj new property
                            });
                
                            //Creo el array según la numeración
                            if(this_trans_obj.EnglishPsalms == 'N'){//numeración Rusa
                                arr_booksBible = arr_booksBible.concat(arr_genesis_hechos, arr_ep_saniago, arr_ep_pablo, arr_apo, arr_apocrif);
                            }else{//numeración Española
                                arr_booksBible = arr_booksBible.concat(arr_genesis_hechos, arr_ep_pablo, arr_ep_saniago, arr_apo, arr_apocrif);
                            }
                            //console.log(arr_booksBible);

                            //=== start con grid =========================================================================//
                            var arr_block_AT = [];
                            var arr_block_NT = [];
                            var arr_block_APO = [];

                            //new - con grid
                            arr_booksBible.forEach((el_b,i_b,arr_b) =>{                    
                                
                                const li = document.createElement('div');
                                li.id = 'li' + arr_b[i_b].BookNumber;
                                li.title = arr_b[i_b].BookNumber;
                                li.setAttribute('data-id_book',arr_b[i_b].BookNumber);//0, 1, 2
                                li.setAttribute('data-show_book',arr_b[i_b].ShortNames[0]);//Gen. Ex. Lev.
                                li.className = 'v_li b_li '+ el_b.cl_book;
                                if(arr_b[i_b].BookNumber == id_book){// antes i_b == id_book
                                    li.classList.add('li_active');                    
                                }
                                if(arr_books[arr_b[i_b].BookNumber].ChapterQty == 0){
                                    li.classList.add('no_disp');
                                }
                                li.innerHTML = arr_b[i_b].ShortNames[0];
                                li.addEventListener('click',selBook);//click sobre li boton Gen. Lev.


                                //Meto en Antiguo Testamento
                                if(i_b >= 0 && i_b <= 38){//Genesis - Малахия
                                    arr_block_AT.push(li);
                                    //console.log(arr_block_AT);
                                    //console.log(v_book);
                                }                    
                                //Meto en Nuevo Testamento
                                if(i_b >= 39 && i_b <= 65){//Mateo - Apocalipsis
                                    arr_block_NT.push(li);
                                    //console.log(arr_block_NT);
                                    //console.log(v_book);
                                }
                                //Meto en Apocrifos
                                if(i_b >= 66){//Makaveos - Tobit
                                    arr_block_APO.push(li);
                                    //console.log(arr_block_APO);
                                    //console.log(v_book);
                                }
                            });

                            //meto los blocks en v_book
                            //Creo Antiguo Testamento
                            if(arr_block_AT.length != 0){
                                const block_AT = document.createElement('div');
                                block_AT.className = 'grid-container block_AT';
                                //console.log(block_AT);
                                arr_block_AT.forEach(el=>{
                                    //console.log(el);
                                    block_AT.append(el);
                                    //console.log(block_AT);
                                });
                                v_book.append(block_AT);
                            }
                            //Creo Nuevo Testamento
                            if(arr_block_NT.length != 0){
                                const block_NT = document.createElement('div');
                                block_NT.className = 'grid-container block_NT';
                                //console.log(block_NT);
                                arr_block_NT.forEach(el=>{
                                    //console.log(el);
                                    block_NT.append(el);
                                    //console.log(block_NT);
                                });
                                v_book.append(block_NT);
                            }
                            //Creo Apocrifos
                            if(arr_block_APO.length != 0){
                                const block_APO = document.createElement('div');
                                block_APO.className = 'grid-container block_APO';
                                //console.log(block_APO);
                                arr_block_APO.forEach(el=>{
                                    //console.log(el);
                                    block_APO.append(el);
                                    //console.log(block_APO);
                                });
                                v_book.append(block_APO);
                            }
                            //console.log(v_book);                
                            //=== end con grid =========================================================================//

                            /*
                                // antes con flex
                                arr_booksBible.forEach((el_b,i_b,arr_b) =>{              
                                    const li = document.createElement('li');
                                    li.id = 'li' + arr_b[i_b].BookNumber;
                                    li.title = arr_b[i_b].BookNumber;
                                    li.setAttribute('data-id_book',arr_b[i_b].BookNumber);//0, 1, 2
                                    li.setAttribute('data-show_book',arr_b[i_b].ShortNames[0]);//Gen. Ex. Lev.
                                    li.className = 'v_li b_li '+ el_b.cl_book;
                                    if(arr_b[i_b].BookNumber == id_book){// antes i_b == id_book
                                        li.classList.add('li_active');                    
                                    }
                                    if(arr_books[arr_b[i_b].BookNumber].ChapterQty == 0){
                                        li.classList.add('no_disp');
                                    }
                                    li.innerHTML = arr_b[i_b].ShortNames[0];
                                    li.addEventListener('click',selBook);//click sobre li boton Gen. Lev.
                                    v_book.append(li);
                    
                                    //si es último libro del Antiguo Testamento o Apocalipsis, meto razdelitel
                                    if(i_b == 38 || i_b == 65){//Малахия //Откровение
                                        const li_break = document.createElement('li');
                                        li_break.className = 'break_book';
                                        v_book.append(li_break);
                                    }
                                    //console.log(el_b);
                                });
                            */
                        })
                        .then(()=>{
                            //si hay un boton li activo me muevo alli
                            if(v_book.getElementsByClassName('li_active').length > 0){
                                setTimeout(()=>{
                                    //console.log('hago v_book.querySelector(li_active).scrollIntoView');
                                    v_book.querySelector('.li_active').scrollIntoView({
                                        behavior: "smooth",
                                        block: "start",
                                        inline: "nearest"
                                    });
                                },100);//100
                            }

                            // Registra el tiempo de finalización
                            //const tiempoFin_b = new Date().getTime();
                            //const tiempoEjecucion_b = (tiempoFin_b - tiempoInicio_b) / 1000;//
                            //console.log('myPromise_b --- tiempoEjecucion_b: '+tiempoEjecucion_b+' sec.');

                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('error promesa myPromise_b: '+error);
                        });

                    }else{//modo old. no existe arrFavTransObj

                        alert('modo old al iniciar... ES NECESARIO!');
                        //console.log('modo old al iniciar... ES NECESARIO!');

                        let url = './modules/text/'+trans+'/bibleqt.json';//rsti2
                        fetch(url)
                        .then(response => response.json())
                        .then(data => {
                
                            window.arr_books = data.Books;
                            //console.log(arr_books);
                
                            v_book.innerHTML = '';//reset botones de books
                
                            var arr_booksBible = [];
                            var arr_genesis_hechos = [];
                            var arr_ep_pablo = [];//epísolas de Pablo
                            var arr_ep_saniago = [];//de Santiago a Juda
                            var arr_apo = [];//Apocalipsis
                            var arr_apocrif = [];//Apocrifos
                    
                            arr_books.forEach((el_b,i_b,arr_b) =>{
                                let cl_book = '';//class de book
                                if(i_b >= 0 && i_b <= 4){
                                    cl_book = 'b_tora';//Tora
                                }
                                if(i_b >= 5 && i_b <= 16){
                                    cl_book = 'b_hist';//historicos
                                }
                                if(i_b >= 17 && i_b <= 21){
                                    cl_book = 'b_poet';//poeticos
                                }
                                if(i_b >= 22 && i_b <= 26){
                                    cl_book = 'b_gr_prof';//grandes profetas
                                }
                                if(i_b >= 27 && i_b <= 38){
                                    cl_book = 'b_peq_prof';//pequeños profetas
                                }
                                if(i_b >= 39 && i_b <= 42){
                                cl_book = 'b_evan';//evangelios
                                }
                                if(i_b == 43){
                                cl_book = 'b_hech';//hechos
                                }
                                if(i_b >= 44 && i_b <= 57){
                                    cl_book = 'b_ep_pablo';//epístolas Pablo
                                    arr_ep_pablo.push(el_b);
                                }
                                if(i_b >= 58 && i_b <= 64){
                                    cl_book = 'b_ep';//otras epístolas (Иаков...)
                                    arr_ep_saniago.push(el_b);
                                }
                                if(i_b == 65){
                                    cl_book = 'b_apo';//apocalipsis
                                    arr_apo.push(el_b);
                                }
                                if(i_b > 65){
                                    cl_book = 'b_apocrif';//apócrifos
                                    arr_apocrif.push(el_b);
                                }
                                if(i_b >= 0 && i_b <= 43){//de genesis a hechos
                                    arr_genesis_hechos.push(el_b);
                                }
                                el_b.cl_book = cl_book;//obj new property
                            });
                
                            //Creo el array según la numeración
                            if(data.EnglishPsalms == 'N'){//numeración Rusa
                                arr_booksBible = arr_booksBible.concat(arr_genesis_hechos, arr_ep_saniago, arr_ep_pablo, arr_apo, arr_apocrif);
                            }else{//numeración Española
                                arr_booksBible = arr_booksBible.concat(arr_genesis_hechos, arr_ep_pablo, arr_ep_saniago, arr_apo, arr_apocrif);
                            }
                            //console.log(arr_booksBible);

                            //=== start con grid =========================================================================//
                            var arr_block_AT = [];
                            var arr_block_NT = [];
                            var arr_block_APO = [];

                            //new - con grid
                            arr_booksBible.forEach((el_b,i_b,arr_b) =>{                    
                                
                                const li = document.createElement('div');
                                li.id = 'li' + arr_b[i_b].BookNumber;
                                li.title = arr_b[i_b].BookNumber;
                                li.setAttribute('data-id_book',arr_b[i_b].BookNumber);//0, 1, 2
                                li.setAttribute('data-show_book',arr_b[i_b].ShortNames[0]);//Gen. Ex. Lev.
                                li.className = 'v_li b_li '+ el_b.cl_book;
                                if(arr_b[i_b].BookNumber == id_book){// antes i_b == id_book
                                    li.classList.add('li_active');                    
                                }
                                if(arr_books[arr_b[i_b].BookNumber].ChapterQty == 0){
                                    li.classList.add('no_disp');
                                }
                                li.innerHTML = arr_b[i_b].ShortNames[0];
                                li.addEventListener('click',selBook);//click sobre li boton Gen. Lev.


                                //Meto en Antiguo Testamento
                                if(i_b >= 0 && i_b <= 38){//Genesis - Малахия
                                    arr_block_AT.push(li);
                                    //console.log(arr_block_AT);
                                    //console.log(v_book);
                                }                    
                                //Meto en Nuevo Testamento
                                if(i_b >= 39 && i_b <= 65){//Mateo - Apocalipsis
                                    arr_block_NT.push(li);
                                    //console.log(arr_block_NT);
                                    //console.log(v_book);
                                }
                                //Meto en Apocrifos
                                if(i_b >= 66){//Makaveos - Tobit
                                    arr_block_APO.push(li);
                                    //console.log(arr_block_APO);
                                    //console.log(v_book);
                                }
                            });

                            //meto los blocks en v_book
                            //Creo Antiguo Testamento
                            if(arr_block_AT.length != 0){
                                const block_AT = document.createElement('div');
                                block_AT.className = 'grid-container block_AT';
                                //console.log(block_AT);
                                arr_block_AT.forEach(el=>{
                                    //console.log(el);
                                    block_AT.append(el);
                                    //console.log(block_AT);
                                });
                                v_book.append(block_AT);
                            }
                            //Creo Nuevo Testamento
                            if(arr_block_NT.length != 0){
                                const block_NT = document.createElement('div');
                                block_NT.className = 'grid-container block_NT';
                                //console.log(block_NT);
                                arr_block_NT.forEach(el=>{
                                    //console.log(el);
                                    block_NT.append(el);
                                    //console.log(block_NT);
                                });
                                v_book.append(block_NT);
                            }
                            //Creo Apocrifos
                            if(arr_block_APO.length != 0){
                                const block_APO = document.createElement('div');
                                block_APO.className = 'grid-container block_APO';
                                //console.log(block_APO);
                                arr_block_APO.forEach(el=>{
                                    //console.log(el);
                                    block_APO.append(el);
                                    //console.log(block_APO);
                                });
                                v_book.append(block_APO);
                            }
                            //console.log(v_book);                
                            //=== end con grid =========================================================================//
                
                        })
                        .then(()=>{
                            //si hay un boton li activo me muevo alli
                            if(v_book.getElementsByClassName('li_active').length > 0){
                                setTimeout(()=>{
                                    v_book.querySelector('.li_active').scrollIntoView({
                                        behavior: "smooth",
                                        block: "start",
                                        inline: "nearest"
                                    });
                                },100);
                            }
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            //console.log('error promesa: '+error);
                        });

                    }

            break;
    
        case 'ch':  //Select li Chapter
                    v_chapter.classList.add('ul_active');
                    bcv_line.classList.remove('b_line');
                    bcv_line.classList.remove('v_line');
                    bcv_line.classList.add('c_line');
            
                    var id_book = parseInt(inpt_nav.getAttribute('data-id_book'));
                    var id_chapter = parseInt(inpt_nav.getAttribute('data-id_chapter'));//antes  
                    
                    
                    //modo new
                    if(typeof arrFavTransObj != 'undefined' && arrFavTransObj != null && arrFavTransObj != ''){
                        
                        //alert('function sel() --- case: ch (chapter) --- modo new. existe arrFavTransObj');
            
                        var myPromise_ch = new Promise(function(resolve, reject){
                            resolve('ok');
                        });
            
                        myPromise_ch
                        .then(res => {
                            
                            if(res == 'ok'){//siempre ok
                                //console.log('this_trans_obj.Books[id_book].ChapterQty: '+this_trans_obj.Books[id_book].ChapterQty);    
                            }
                                            
                            if(document.querySelectorAll('.cols').length > 1){
                                var chapter = obj_nav.show_chapter;
                                var verse = obj_nav.show_verse; 
                                var to_verse = null;//todavia no está seleccionado
                                
                                var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
            
                                if(res_new_link){
                                    //asigno nuevo valor
                                    var bookNumber = res_new_link[0];
                                    var chapterNumber = res_new_link[1];
                                    var verseNumber = res_new_link[2];
                                    var to_verseNumber = res_new_link[3];
                                    var trans_BookShortName = res_new_link[4];
                                    
                                    // console.log('---despues---');
                                    // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                    // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                    // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                    // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                    // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
            
                                    var new_ref_text = trans_BookShortName;
                                    if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                    if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                    if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                    // document.querySelector('#inpt_nav').value = new_ref_text;
                                    inpt_nav.value = new_ref_text;
                                }
                            } 
            
                            v_chapter.innerHTML = '';//reset todos los botones de chapter  
                            const wr_grid_ch = document.createElement('div');
                            wr_grid_ch.className = 'wr_grid_ch';
                            
                            for(let index = 1; index <= this_trans_obj.Books[id_book].ChapterQty; index++) {
                                const li_ch = document.createElement('li');
                                li_ch.id = 'li_ch' + index;
                                li_ch.setAttribute('data-id_chapter',index - 1);
                                li_ch.setAttribute('data-show_chapter',index);
                                li_ch.className = 'v_li c_li';
            
                                //si el menu fue clickeado desde no la trans1 (trans base) 
                                if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                    //console.log(index+') if --- obj_nav.divtrans != trans1');
                                    //id_chapter = chapterNumber - 1;
                                    //show_chapter = chapterNumber;
                                    if(index == chapterNumber){
                                        //console.log('--- --- modifico chapter: ' + chapterNumber);
                                        li_ch.classList.add('li_active');
                                    }    
                                }else{
                                    //console.log(index+') else --- obj_nav.divtrans == trans1');
                                    if(index == id_chapter + 1){
                                        li_ch.classList.add('li_active');
                                    }    
                                }
                                //li_ch.innerHTML = index;
                                li_ch.innerHTML = index + '<span class="ch_count_v"></span><span class="ch_count_v chv2"></span>';//por ahora vacio. luego 20
                                li_ch.addEventListener('click',selChapter);//click sobre li boton de chapter
                                wr_grid_ch.append(li_ch);
                            }
                            v_chapter.append(wr_grid_ch);
                        })
                        .then(()=>{
                            //si hay un boton li activo me muevo alli
                            if(v_chapter.getElementsByClassName('li_active').length > 0){
                                setTimeout(()=>{
                                    v_chapter.querySelector('.li_active').scrollIntoView({
                                        behavior: "smooth",
                                        block: "start",
                                        inline: "nearest"
                                    });
                                },100);
                            }
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('error promesa chapter. error: '+error);
                        });
            
                    }else{//modo old. no existe arrFavTransObj
            
                        alert('chapter modo old. no salta nunca...');
            
                        let url_bq = './modules/text/'+trans+'/bibleqt.json';//rsti2
                        fetch(url_bq)
                        .then(response => response.json())
                        .then(data => {
                            
                            window.chapter_PathName = data.Books[id_book].PathName;
                            //console.log(chapter_PathName);
                
                            let url = './modules/text/'+trans+'/' + chapter_PathName;//rsti2
                            fetch(url)
                            .then(response => response.text())
                            .then(data => {
                                //console.log('abajo chapter_PathName');
                                //console.log(data);        
                                
                                if(document.querySelectorAll('.cols').length > 1){
                                    var chapter = obj_nav.show_chapter;
                                    var verse = obj_nav.show_verse; 
                                    var to_verse = null;//todavia no está seleccionado
                                    
                                    var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
                
                                    if(res_new_link){
                                        //asigno nuevo valor
                                        var bookNumber = res_new_link[0];
                                        var chapterNumber = res_new_link[1];
                                        var verseNumber = res_new_link[2];
                                        var to_verseNumber = res_new_link[3];
                                        var trans_BookShortName = res_new_link[4];
                                        
                                        // console.log('---despues---');
                                        // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                        // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
                
                                        var new_ref_text = trans_BookShortName;
                                        if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                        if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                        if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                        // document.querySelector('#inpt_nav').value = new_ref_text;
                                        inpt_nav.value = new_ref_text;
                                    }
                                } 
                                                
                                window.arr_chapters = data.split('<h4>');
                                //console.log('abajo arr_chapters');
                                //console.log(arr_chapters);
                
                                v_chapter.innerHTML = '';//reset todos los botones de chapter                            
                                const wr_grid_ch = document.createElement('div');
                                wr_grid_ch.className = 'wr_grid_ch';
                    
                                for(let index = 1; index <= arr_chapters.length - 1; index++) {
                                    const li_ch = document.createElement('li');
                                    li_ch.id = 'li_ch' + index;
                                    li_ch.setAttribute('data-id_chapter',index - 1);
                                    li_ch.setAttribute('data-show_chapter',index);
                                    li_ch.className = 'v_li c_li';
                
                                    //si el menu fue clickeado desde no la trans1 (trans base) 
                                    if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                        //console.log(index+') if --- obj_nav.divtrans != trans1');
                                        //id_chapter = chapterNumber - 1;
                                        //show_chapter = chapterNumber;
                                        if(index == chapterNumber){
                                            //console.log('--- --- modifico chapter: ' + chapterNumber);
                                            li_ch.classList.add('li_active');
                                        }    
                                    }else{
                                        //console.log(index+') else --- obj_nav.divtrans == trans1');
                                        if(index == id_chapter + 1){
                                            li_ch.classList.add('li_active');
                                        }    
                                    }
                                    // li_ch.innerHTML = index;
                                    li_ch.innerHTML = index + '<span class="ch_count_v">22</span>';
                                    li_ch.addEventListener('click',selChapter);//click sobre li boton de chapter
                                    //v_chapter.append(li_ch);
                                    wr_grid_ch.append(li_ch);
                                }
                                v_chapter.append(wr_grid_ch);
                            })
                            .then(()=>{
                                //si hay un boton li activo me muevo alli
                                if(v_chapter.getElementsByClassName('li_active').length > 0){
                                    setTimeout(()=>{
                                        v_chapter.querySelector('.li_active').scrollIntoView({
                                            behavior: "smooth",
                                            block: "start",
                                            inline: "nearest"
                                        });
                                    },100);
                                }
                            })
                            .catch(error => { 
                                // Código a realizar cuando se rechaza la promesa
                                //console.log('error promesa module: '+error);
                            });

                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            //console.log('error promesa chapter: '+error);
                        });
            
                    }
                
            break;
    
        case 'v':   //Select li Verse
                    v_verse.classList.add('ul_active');
                    bcv_line.classList.remove('b_line');
                    bcv_line.classList.remove('c_line');
                    bcv_line.classList.add('v_line');
            
                    var id_book = parseInt(inpt_nav.getAttribute('data-id_book'));
                    var id_chapter = (inpt_nav.getAttribute('data-id_chapter') !== '') ? Number(inpt_nav.getAttribute('data-id_chapter')) : 0 ;
                    var id_verse = parseInt(inpt_nav.getAttribute('data-id_verse'));
            
            
                    //modo new
                    if(typeof arrFavTransObj != 'undefined' && arrFavTransObj != null && arrFavTransObj != ''){
                        
                        //alert('function sel() --- case: v (verse) --- modo new. existe arrFavTransObj');
            
                        var myPromise_v = new Promise(function(resolve, reject){
                            resolve('ok');
                        });
            
                        myPromise_v
                        .then(res => {
            
                            if(res == 'ok'){//siempre ok
                                //console.log('this_trans_obj.Books[id_book].PathName: '+this_trans_obj.Books[id_book].PathName);    
                            }
                            //console.log('trans: '+trans)
                            //console.log('id_book: '+id_book)
            
                            //si existe objeto con Translation. Saco datos del objeto
                            if(typeof obj_bible_files[trans] != 'undefined'){
                                if(typeof obj_bible_files[trans].Books != 'undefined'){
                                    if(typeof obj_bible_files[trans].Books[id_book] != 'undefined'){
            
                                        if(obj_bible_files[trans].Books[id_book].fileName == this_trans_obj.Books[id_book].PathName && obj_bible_files[trans].Books[id_book].fileContent != ''){
                                            //console.log('existen datos del modulo para sacar numero de versiculos');
            
                                            //var inpt_nav = document.querySelector('#inpt_nav');
                                
                                            if(document.querySelectorAll('.cols').length > 1){
                                                var chapter = obj_nav.show_chapter;
                                                var verse = obj_nav.show_verse; 
                                                var to_verse = null;//todavia no está seleccionado
                                                
                                                var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
                            
                                                if(res_new_link){
                                                    //asigno nuevo valor
                                                    var bookNumber = res_new_link[0];
                                                    var chapterNumber = res_new_link[1];
                                                    var verseNumber = res_new_link[2];
                                                    var to_verseNumber = res_new_link[3];
                                                    var trans_BookShortName = res_new_link[4];
                                                    
                                                    // console.log('---despues---');
                                                    // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                                    // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                                    // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                                    // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                                    // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
                            
                                                    var new_ref_text = trans_BookShortName;
                                                    if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                                    if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                                    if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                                    // document.querySelector('#inpt_nav').value = new_ref_text;
                                                    inpt_nav.value = new_ref_text;
                                                }else{//si no hay que cambiar el chapter 
                                                    var chapterNumber = id_chapter + 1;
                                                    var verseNumber = id_verse + 1;    
                                                }
                                            }else{
                                                var chapterNumber = id_chapter + 1;
                                                var verseNumber = id_verse + 1;
                                            }
                                    
                                            window.arr_verses = obj_bible_files[trans].Books[id_book].fileContent.split('<h4>')[chapterNumber].split('<p>');
                                            //console.log('abajo arr_verses');
                                            //console.log(arr_verses);
                            
                                            v_verse.innerHTML = '';//reset botones de versiculos
                                            const wr_grid_v = document.createElement('div');
                                            wr_grid_v.className = 'wr_grid_v';
                                                        
                                            for(let index = 1; index <= window.arr_verses.length - 1; index++) {
                                                const li_v = document.createElement('li');
                                                li_v.id = 'li_v' + index;
                                                li_v.setAttribute('data-id_verse',index - 1);
                                                li_v.setAttribute('data-show_verse',index);
                                                li_v.className = 'v_li';                            
                                                //si el menu fue clickeado desde no la trans1 (trans base) 
                                                if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                                    //console.log(index+') if --- obj_nav.divtrans != trans1');
                                                    if(index == verseNumber){
                                                        //console.log('--- --- modifico verse: ' + verseNumber);
                                                        li_v.classList.add('li_active');
                                                    }    
                                                }else{
                                                    //console.log(index+') else --- obj_nav.divtrans == trans1');
                                                    if(index == id_verse + 1){
                                                        li_v.classList.add('li_active');
                                                    }    
                                                }                            
                                                li_v.innerHTML = index;
                                                li_v.addEventListener('click',selVerse);//al click sobre boton de verse
                                                //v_verse.append(li_v);
                                                wr_grid_v.append(li_v);
                                            }
                                            v_verse.append(wr_grid_v);
            
                                        }else{
                                            console.log('No coincide el nombre del fichero o fileContent está vacío');
                                        }
            
                                    }
                                }
                            }
            
                            //si no existe objeto con Translation. hago fetch(). es necesario!
                            if(typeof obj_bible_files[trans] == 'undefined'){
            
                                //alert('no existe objeto con Translation obj_bible_files[trans]. hago fetch()'); 
                                //console.log('no existe objeto con Translation obj_bible_files[trans]. hago fetch()');
            
                                window.chapter_PathName = this_trans_obj.Books[id_book].PathName;
                                //console.log('chapter_PathName: '+chapter_PathName);


                                let modo_get_VerseQty = 'por_json';
                                if(typeof modo_get_VerseQty != 'undefined' && modo_get_VerseQty == 'por_json'){
                                    
                                    //console.log('modo_get_VerseQty: por_json');
                                    
                                    let url = './modules/text/'+trans+'/' + chapter_PathName;// "./modules/text/rstStrongRed/02_exodus.htm"                                
                                
                                    let formData = new FormData();
                                    formData.append('url','../'+url);
                                    formData.append('book', id_book);
                                    formData.append('chapter', id_chapter + 1);
    
                                    fetch('app/read_file_get_VerseQty_to_json.php',{
                                        method: 'POST',
                                        body: formData
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        
                                        //console.log('data: ',data);
                                                
                                        if(document.querySelectorAll('.cols').length > 1){
                                            var chapter = obj_nav.show_chapter;
                                            var verse = obj_nav.show_verse; 
                                            var to_verse = null;//todavia no está seleccionado
                                            
                                            var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
                        
                                            if(res_new_link){
                                                //asigno nuevo valor
                                                var bookNumber = res_new_link[0];
                                                var chapterNumber = res_new_link[1];
                                                var verseNumber = res_new_link[2];
                                                var to_verseNumber = res_new_link[3];
                                                var trans_BookShortName = res_new_link[4];
                                                
                                                // console.log('---despues---');
                                                // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                                // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
                        
                                                var new_ref_text = trans_BookShortName;
                                                if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                                if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                                if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                                // document.querySelector('#inpt_nav').value = new_ref_text;
                                                inpt_nav.value = new_ref_text;
                                            }else{//si no hay que cambiar el chapter 
                                                var chapterNumber = id_chapter + 1;
                                                var verseNumber = id_verse + 1;    
                                            }
                                        }else{
                                            var chapterNumber = id_chapter + 1;
                                            var verseNumber = id_verse + 1;
                                        }
                                                        
                                        v_verse.innerHTML = '';//reset botones de versiculos
                                        const wr_grid_v = document.createElement('div');
                                        wr_grid_v.className = 'wr_grid_v';
                                
                                        for(let index = 1; index <= data.VerseQty; index++) {
                                            const li_v = document.createElement('li');
                                            li_v.id = 'li_v' + index;
                                            li_v.setAttribute('data-id_verse',index - 1);
                                            li_v.setAttribute('data-show_verse',index);
                                            li_v.className = 'v_li';
                        
                                            //si el menu fue clickeado desde no la trans1 (trans base) 
                                            if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                                //console.log(index+') if --- obj_nav.divtrans != trans1');
                                                if(index == verseNumber){
                                                    //console.log('--- --- modifico verse: ' + verseNumber);
                                                    li_v.classList.add('li_active');
                                                }    
                                            }else{
                                                //console.log(index+') else --- obj_nav.divtrans == trans1');
                                                if(index == id_verse + 1){
                                                    li_v.classList.add('li_active');
                                                }    
                                            }
                        
                                            li_v.innerHTML = index;
                                            li_v.addEventListener('click',selVerse);//al click sobre boton de verse
                                            //v_verse.append(li_v);
                                            wr_grid_v.append(li_v);
                                        }
                                        v_verse.append(wr_grid_v);
                
                                    })
                                    .then(()=>{
                                        //si hay un boton li activo me muevo alli
                                        if(v_verse.getElementsByClassName('li_active').length > 0){
                                            setTimeout(()=>{
                                                if(v_verse.querySelector('.li_active') != null){
                                                    v_verse.querySelector('.li_active').scrollIntoView({
                                                        behavior: "smooth",
                                                        block: "start",
                                                        inline: "nearest"
                                                    });
                                                }
                                            },100);
                                        }
                                    })
                                    .catch(error => { 
                                        // Código a realizar cuando se rechaza la promesa
                                        console.log('error promesa: '+error);
                                    });    


                                }else{
                                    
                                    console.log('modo_get_VerseQty: por_text y fetch() de todo el fichero');

                                    let url = './modules/text/'+trans+'/' + chapter_PathName;// "./modules/text/rstStrongRed/02_exodus.htm"
                                    fetch(url)
                                    .then(response => response.text())
                                    .then(data => {
                                        
                                        //console.log('abajo data');
                                        //console.log(data);                        
                        
                                        if(document.querySelectorAll('.cols').length > 1){
                                            var chapter = obj_nav.show_chapter;
                                            var verse = obj_nav.show_verse; 
                                            var to_verse = null;//todavia no está seleccionado
                                            
                                            var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
                        
                                            if(res_new_link){
                                                //asigno nuevo valor
                                                var bookNumber = res_new_link[0];
                                                var chapterNumber = res_new_link[1];
                                                var verseNumber = res_new_link[2];
                                                var to_verseNumber = res_new_link[3];
                                                var trans_BookShortName = res_new_link[4];
                                                
                                                // console.log('---despues---');
                                                // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                                // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                                // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
                        
                                                var new_ref_text = trans_BookShortName;
                                                if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                                if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                                if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                                // document.querySelector('#inpt_nav').value = new_ref_text;
                                                inpt_nav.value = new_ref_text;
                                            }else{//si no hay que cambiar el chapter 
                                                var chapterNumber = id_chapter + 1;
                                                var verseNumber = id_verse + 1;    
                                            }
                                        }else{
                                            var chapterNumber = id_chapter + 1;
                                            var verseNumber = id_verse + 1;
                                        }
                                
                                        //window.arr_verses = data.split('<h4>')[id_chapter + 1].split('<p>');//antes
                                        console.log('antes---');
                                        window.arr_verses = data.split('<h4>')[chapterNumber].split('<p>');
                                        console.log('despues---');
                                        // console.log('abajo arr_verses');
                                        //console.log(arr_verses);
                        
                                        v_verse.innerHTML = '';//reset botones de versiculos
                                        const wr_grid_v = document.createElement('div');
                                        wr_grid_v.className = 'wr_grid_v';
                                
                                        for(let index = 1; index <= window.arr_verses.length - 1; index++) {
                                            const li_v = document.createElement('li');
                                            li_v.id = 'li_v' + index;
                                            li_v.setAttribute('data-id_verse',index - 1);
                                            li_v.setAttribute('data-show_verse',index);
                                            li_v.className = 'v_li';
                        
                                            //si el menu fue clickeado desde no la trans1 (trans base) 
                                            if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                                //console.log(index+') if --- obj_nav.divtrans != trans1');
                                                if(index == verseNumber){
                                                    //console.log('--- --- modifico verse: ' + verseNumber);
                                                    li_v.classList.add('li_active');
                                                }    
                                            }else{
                                                //console.log(index+') else --- obj_nav.divtrans == trans1');
                                                if(index == id_verse + 1){
                                                    li_v.classList.add('li_active');
                                                }    
                                            }
                        
                                            li_v.innerHTML = index;
                                            li_v.addEventListener('click',selVerse);//al click sobre boton de verse
                                            //v_verse.append(li_v);
                                            wr_grid_v.append(li_v);
                                        }
                                        v_verse.append(wr_grid_v);
                
                                    })
                                    .then(()=>{
                                        //si hay un boton li activo me muevo alli
                                        if(v_verse.getElementsByClassName('li_active').length > 0){
                                            setTimeout(()=>{
                                                v_verse.querySelector('.li_active').scrollIntoView({
                                                    behavior: "smooth",
                                                    block: "start",
                                                    inline: "nearest"
                                                });
                                            },100);
                                        }
                                    })
                                    .catch(error => { 
                                        // Código a realizar cuando se rechaza la promesa
                                        //console.log('error promesa: '+error);
                                    });    

                                }                                
            
                            }
            
                        })
                        .then(()=>{
                            //si hay un boton li activo me muevo alli
                            if(v_verse.getElementsByClassName('li_active').length > 0){
                                setTimeout(()=>{
                                    if(v_verse.querySelector('.li_active') !== null){
                                        v_verse.querySelector('.li_active').scrollIntoView({
                                            behavior: "smooth",
                                            block: "start",
                                            inline: "nearest"
                                        });
                                    }                                    
                                },100);
                            }
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('error promesa: '+error);
                        });//end myPromise_v
            
                    }else{//modo old. no existe arrFavTransObj
            
                        alert('modo old verse. no salta nunca...');
                        
                        let url_bq = './modules/text/'+trans+'/bibleqt.json';//rsti2
                        fetch(url_bq)
                        .then(response => response.json())
                        .then(data => {
            
                            window.chapter_PathName = data.Books[id_book].PathName;
                            //console.log(chapter_PathName);
                
                            let url = './modules/text/'+trans+'/' + chapter_PathName;//rsti2
                            fetch(url)
                            .then(response => response.text())
                            .then(data => {
                                //console.log('abajo chapter_PathName');
                                //console.log(data);
                                
                                if(document.querySelectorAll('.cols').length > 1){
                                    var chapter = obj_nav.show_chapter;
                                    var verse = obj_nav.show_verse; 
                                    var to_verse = null;//todavia no está seleccionado
                                    
                                    var res_new_link = checkRefNav(id_book, chapter, verse, to_verse);
                
                                    if(res_new_link){
                                        //asigno nuevo valor
                                        var bookNumber = res_new_link[0];
                                        var chapterNumber = res_new_link[1];
                                        var verseNumber = res_new_link[2];
                                        var to_verseNumber = res_new_link[3];
                                        var trans_BookShortName = res_new_link[4];
                                        
                                        // console.log('---despues---');
                                        // console.log('3.--- res_new_link --- ahora bookNumber: '+bookNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora chapterNumber: '+chapterNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora verseNumber: '+verseNumber);//empezando de 1
                                        // console.log('3.--- res_new_link --- ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
                                        // console.log('3.--- res_new_link --- ahora trans_BookShortName: '+trans_BookShortName);//mayor que verseNumber
                
                                        var new_ref_text = trans_BookShortName;
                                        if(chapterNumber > 0) new_ref_text += ' ' + chapterNumber;
                                        if(verseNumber > 0) new_ref_text += ':' + verseNumber;
                                        if(to_verseNumber > 0 && parseInt(to_verseNumber) > parseInt(verseNumber)) new_ref_text += '-' + to_verseNumber;
                                        // document.querySelector('#inpt_nav').value = new_ref_text;
                                        inpt_nav.value = new_ref_text;
                                    }else{//si no hay que cambiar el chapter 
                                        var chapterNumber = id_chapter + 1;
                                        var verseNumber = id_verse + 1;    
                                    }
                                }else{
                                    var chapterNumber = id_chapter + 1;
                                    var verseNumber = id_verse + 1;
                                }
                        
                                //window.arr_verses = data.split('<h4>')[id_chapter + 1].split('<p>');//antes
                                window.arr_verses = data.split('<h4>')[chapterNumber].split('<p>');
                                //console.log('abajo arr_verses');
                                //console.log(arr_verses);
                
                                v_verse.innerHTML = '';//reset botones de versiculos
                                const wr_grid_v = document.createElement('div');
                                wr_grid_v.className = 'wr_grid_v';
                                
                                for(let index = 1; index <= window.arr_verses.length - 1; index++) {
                                    const li_v = document.createElement('li');
                                    li_v.id = 'li_v' + index;
                                    li_v.setAttribute('data-id_verse',index - 1);
                                    li_v.setAttribute('data-show_verse',index);
                                    li_v.className = 'v_li';                
                                    //si el menu fue clickeado desde no la trans1 (trans base) 
                                    if(inpt_nav.dataset.divtrans != '' && inpt_nav.dataset.divtrans != 'trans1'){
                                        //console.log(index+') if --- obj_nav.divtrans != trans1');
                                        if(index == verseNumber){
                                            //console.log('--- --- modifico verse: ' + verseNumber);
                                            li_v.classList.add('li_active');
                                        }    
                                    }else{
                                        //console.log(index+') else --- obj_nav.divtrans == trans1');
                                        if(index == id_verse + 1){
                                            li_v.classList.add('li_active');
                                        }    
                                    }
                                    li_v.innerHTML = index;
                                    li_v.addEventListener('click',selVerse);//al click sobre boton de verse
                                    // v_verse.append(li_v);
                                    wr_grid_v.append(li_v);
                                }
                                v_verse.append(wr_grid_v);
            
                            })
                            .then(()=>{
                                //si hay un boton li activo me muevo alli
                                if(v_verse.getElementsByClassName('li_active').length > 0){
                                    setTimeout(()=>{
                                        v_verse.querySelector('.li_active').scrollIntoView({
                                            behavior: "smooth",
                                            block: "start",
                                            inline: "nearest"
                                        });
                                    },100);
                                }
                            })
                            .catch(error => { 
                                // Código a realizar cuando se rechaza la promesa
                                //console.log('error promesa: '+error);
                            });

                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            //console.log('error promesa: '+error);
                        });
            
                    }
            break;
    
        default:    //select Book by default
                    v_book.classList.add('ul_active');
            break;
    }

}

/*
function getRefForTsk(Translation, bookShortName){
    //console.log('Translation: '+Translation);
    //console.log('bookShortName: '+bookShortName);
    var bookNumber;

    let url = './modules/text/'+Translation+'/bibleqt.json';//Ej.: rsti2
    fetch(url)
    .then(response => response.json())
    .then(data => {
        //console.log(data);

        window.dataBooks2 = data.Books;

        dataBooks2.forEach((el,i,arr) =>{
            //console.log('arr['+i+']: '+arr[i].FullName + ' '+arr[i].ShortNames[0] );
            arr[i].ShortNames.forEach( (e,j,arr_s) =>{
                if(bookShortName.toLowerCase() == e.toLowerCase()){
                    var n_book = arr[i].BookNumber;
                    var short_name = arr_s[0];//siempre el primer nombre del array

                    bookNumber = i;
                    //console.log('bookNumber: '+bookNumber);

                    //showTrans(n_book, chapter, verse, to_verse);
                    //console.log('--- encontrado n_book: ' +n_book + '\n short_name: ' +short_name);

                    //return bookNumber;
                }
            });
        });
    })
    .catch(error => { 
        // Código a realizar cuando se rechaza la promesa
        //console.log('error promesa: '+error);
    });
    return bookNumber;
}
*/


function getRef(trans = null){
    //console.log('=== function getRef() ===');

    var act_trans = div_trans1.getAttribute('data-trans');
    var trans_inpt = inpt_nav.dataset.trans;

    //Si no viene trans, lo cojo del div #trans1
    if(trans == null || trans == ''){
        var trans = (trans_inpt != '') ? trans_inpt : act_trans;
    }else{//si viene trans...        
        //si trans es distinto del actual y es en tablet o desktop
        if(trans != act_trans && window.innerWidth >= pantallaTabletMinPx){
            //lo cojo del parametro y grabo en div #trans1
            var button_new_trans = document.querySelector('#footerInner button[value="'+trans+'"]');
            var EnglishPsalms = button_new_trans.getAttribute('ep');//EnglishPsalms

            //div_trans1.setAttribute('data-trans',trans);//antes
            //div_trans1.setAttribute('data-base_ep',EnglishPsalms);//antes
            //div_trans1.querySelector('.colsHeadInner .partDesk .desk_trans').innerHTML = button_new_trans.innerHTML;//meto  BibleShortName (RST+);//antes

            //document.querySelector('#s_book').click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля.
            s_book.click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля.
            
            var trans_buttons = document.querySelectorAll('#footerInner button');
            trans_buttons.forEach(el=>{
                el.classList.remove('btn_active');
            });
            button_new_trans.classList.add('btn_active');
            //console.log('nuevo trans: '+trans);
        }
    }


    //var inpt_v = inpt.value.trim();//antes
    var inpt_v = inpt_nav.value.trim();
    var book = null;//por defecto
    var chapter = null;//por defecto
    var verse = null;//por defecto
    var to_verse = null;//por defecto
    //console.log(inpt_v);

    //Solo book
    if(inpt_v.split(' ').length == 1){
        var arr_book = inpt_v.split(' ');
        book = arr_book[0];
    }

    //Ejemplo: 'Jn.3:16' y Jn.3:16-18
    if(inpt_v.includes(':')){
        var arr_v = inpt_v.split(':');
        verse = arr_v[1];
        //console.log('verse: '+verse);
        
        if(verse.includes('-')){
            var arr_verse = verse.split('-');
            verse = arr_verse[0];
            to_verse = arr_verse[1];
            //console.log('to_verse: '+to_verse);
        }

        if(arr_v[0].includes('.')){
            var arr_ch = arr_v[0].split('.');

            if(arr_ch.length == 2){
                book = arr_ch[0] + '.';
                chapter = arr_ch[1];
            }
            if(arr_ch.length == 3){// 'Иис.Нав.1' = ['Иис', 'Нав', '1']
                book = arr_ch[0] + '.' + arr_ch[1] + '.';
                chapter = arr_ch[2];
            }
            //console.log('book: '+book);
            //console.log('chapter: '+chapter);
        }

        if(arr_v[0].includes(' ')){
            var arr_ch = arr_v[0].split(' ');
            book = arr_ch[0];
            chapter = arr_ch[1];
            //console.log('book: '+book);
            //console.log('chapter: '+chapter);
        }
    }

    //Ejemplo: 'Jn.3,16'
    if(inpt_v.includes(',')){
        var arr_v = inpt_v.split(',');
        verse = arr_v[1];
        //console.log('verse: '+verse);
        
        if(verse.includes('-')){
            var arr_verse = verse.split('-');
            verse = arr_verse[0];
            to_verse = arr_verse[1];
            //console.log('to_verse: '+to_verse);
        }

        if(arr_v[0].includes('.')){
            var arr_ch = arr_v[0].split('.');
            book = arr_ch[0] + '.';
            chapter = arr_ch[1];
            //console.log('book: '+book);
            //console.log('chapter: '+chapter);
        }

        if(arr_v[0].includes(' ')){
            var arr_ch = arr_v[0].split(' ');
            book = arr_ch[0];
            chapter = arr_ch[1];
            //console.log('book: '+book);
            //console.log('chapter: '+chapter);
        }
    }

    //Ejemplo: 'Jn. 3 16' y 'Jn 3 16-18' // sin ':'
    if(inpt_v.includes(' ') && !inpt_v.includes(':') && !inpt_v.includes(',')){
        var arr_v = inpt_v.split(' ');

        if(arr_v.length > 3){
            arr_v = arr_v.filter(elm=>elm);
            book = arr_v[0];
            chapter = arr_v[1];
            verse = arr_v[2];
            if(arr_v[3] == '-' && !isNaN(arr_v[4])){
                to_verse = arr_v[4];
            }
        }

        if(arr_v.length == 3){
            verse = arr_v[2];
            if(verse.includes('-')){
                var arr_verse = verse.split('-');
                verse = arr_verse[0];
                to_verse = arr_verse[1];
                //console.log('to_verse: '+to_verse);
            }
            chapter = arr_v[1];
            book = arr_v[0];
        }
        if(arr_v.length == 2){
            verse = null;
            chapter = arr_v[1];
            book = arr_v[0];
        }

        //console.log('book: '+book);
        //console.log('chapter: '+chapter);
        //console.log('verse: '+verse);
        //console.log('to_verse: '+to_verse);
    }

    //Si exisate book busco chapter y verse/to_verse si hay
    if(book != null){
        //console.log('getRef() --- book != null');

        var Translation = trans;
        var objTrans = arrFavTransObj.find(v => v.Translation === Translation);
        
        //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
        if(typeof objTrans != 'undefined' && objTrans != null && objTrans != ''){
            //console.log('getRef() --- objTrans está creado. abajo objTrans: ');
            //console.log(objTrans);

            //saco ajustes de este modulo en json               
            var data = objTrans;
            //console.log(data);
    
            window.dataBooksBtnOk = data.Books;

            for (let i = 0; i < dataBooksBtnOk.length; i++) {
                for (let j = 0; j < dataBooksBtnOk[i].ShortNames.length; j++) {
                    const el = dataBooksBtnOk[i].ShortNames[j];
                    if(book.toLowerCase() == el.toLowerCase() || book.toLowerCase()+'.' == el.toLowerCase()){//añado '.' por si viene 'Sal' y en ShortNames hay 'Sal.'
                        var n_book = dataBooksBtnOk[i].BookNumber;
                        var short_name = dataBooksBtnOk[i].ShortNames[0];//siempre el primer nombre del array
                        
                        chapter = (chapter != null) ? chapter : 1;//default si no hay
                        if(chapter > dataBooksBtnOk[i].ChapterQty) chapter = dataBooksBtnOk[i].ChapterQty;

                        //reviso desde qué divtrans se llega a introducir la referencia para preparar la ref correspondiente para trans1 si se accede desde otros trans's en mobile
                        if(window.innerWidth < pantallaTabletMinPx){//mobile
                            //checkRefNav(n_book, chapter, verse, to_verse);                        
                        
                            if(document.querySelectorAll('.cols').length > 1){

                                //si es trans2 y es trans con EnglishPsalms 'Y' se cliquea en el boton li de chapter Sal.23 español, convierto el chapter en el Пс 22 ruso 
                                //console.log('clickeado trans: '+inpt_nav.dataset.trans);
                                
                                //var trans_base = div_trans1.dataset.trans;//la trans base de #trans1
                                var trans_inpt = inpt_nav.dataset.trans;// trans desde input
                                var divtrans_inpt = inpt_nav.dataset.divtrans;// trans desde input

                                if(divtrans_inpt != '' && divtrans_inpt != 'trans1'){
                                    // Usa el método find para buscar el objeto que contiene 'rst' como nombre
                                    const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
                                    const obj_trans_inpt = arrFavTransObj.find(v => v.Translation === trans_inpt);

                                    if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_inpt.EnglishPsalms == 'Y'){
                                        var new_res = convertLinkFromEspToRus(n_book, chapter, verse, to_verse);//importante EspToRus
                                        chapter = new_res[1];
                                        verse = new_res[2];
                                        to_verse = new_res[3];
                                        //console.log('en getRef() --- convertido chapter: '+chapter);//empezando de 1
                                        //console.log('en getRef() --- convertido verse: '+verse);//empezando de 1
                                        //console.log('en getRef() --- convertido to_verse: '+to_verse);//empezando de 1
                                    }
                                    else if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_inpt.EnglishPsalms == 'N'){
                                        var new_res = convertLinkFromRusToEsp(n_book, chapter, verse, to_verse);//importante RusToEsp
                                        chapter = new_res[1];
                                        verse = new_res[2];
                                        to_verse = new_res[3];
                                        //console.log('en getRef() --- convertido chapter: '+chapter);//empezando de 1
                                        //console.log('en getRef() --- convertido verse: '+verse);//empezando de 1
                                        //console.log('en getRef() --- convertido to_verse: '+to_verse);//empezando de 1
                                    }else{
                                        //console.log('en getRef() --- no hago nada. chapter verse to_verse se quedan igual como en input.');
                                    }

                                }
                            }                        
                        
                        } 
                    
                        inpt_nav.setAttribute('data-id_book',n_book);
                        inpt_nav.setAttribute('data-show_book',short_name);

                        inpt_nav.setAttribute('data-id_chapter',parseInt(chapter) - 1);
                        inpt_nav.setAttribute('data-show_chapter',chapter);

                        inpt_nav.value = short_name;
                        obj_nav.show_book = short_name;
                        
                        //chapter
                        if(chapter != null && parseInt(chapter) > 0){
                            inpt_nav.value += ' ' + chapter;
                            obj_nav.id_chapter = parseInt(chapter) - 1;
                            obj_nav.show_chapter = chapter;
                            document.querySelector('#v_chapter').innerHTML = '';
                        }else{
                            document.querySelector('#v_chapter').innerHTML = 'selecciona el capítulo';
                            obj_nav.id_chapter = parseInt(chapter) - 1;//por defecto para que no dé fallo
                            obj_nav.show_chapter = chapter;//por defecto para que no dé fallo
                        }

                        
                        //modo old. getting all file and showing only needed verses
                        if(modo_action_get_tsk_verses == 'by_text'){
                            //console.log('modo_action_get_tsk_verses == by_text');

                                                        
                            //verse
                            if (verse != null && parseInt(verse) > 0) {
                                inpt_nav.value += ':' + verse;
                                obj_nav.id_verse = parseInt(verse) - 1;
                                obj_nav.show_verse = verse;
                                inpt_nav.setAttribute('data-id_verse', parseInt(verse) - 1);
                                inpt_nav.setAttribute('data-show_verse', verse);
                                document.querySelector('#v_verse').innerHTML = '';
                            } else {
                                //document.querySelector('#v_verse').innerHTML = '<span class="prim_verse">2. Antes de seleccionar el versículo, selecciona el capítulo por favor.</span>';
                                //creo virtual e
                                const e_virtual = document.createElement('li');
                                e_virtual.id = 'e_virt';
                                e_virtual.setAttribute('data-id_chapter', 0);
                                e_virtual.setAttribute('data-show_chapter', 1);
                                setTimeout(() => {
                                    //e_virtual.click();
                                    selChapter(e_virtual, chapter);
                                }, 50);


                            }

                            //hay to_verse
                            if (to_verse != null && parseInt(to_verse) > 0 && parseInt(verse) < parseInt(to_verse)) {
                                inpt_nav.value += '-' + to_verse;
                                inpt_nav.setAttribute('data-show_to_verse', to_verse);
                                obj_nav.show_to_verse = to_verse;
                            } else {
                                inpt_nav.setAttribute('data-show_to_verse', '');
                                obj_nav.show_to_verse = '';
                            }


                            //meto ref encontrado en el historial de navegacion
                            addRefToHistNav(trans, inpt_nav.value, n_book, chapter, verse, to_verse);


                            if(document.querySelector('#v_book .li_active') != null){
                                document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
                            } 
                            if(document.querySelector('#v_book div[data-id_book="'+n_book+'"]') != null){
                                document.querySelector('#v_book div[data-id_book="'+n_book+'"]').classList.add('li_active');//añado book
                            }

                            //si es mobile, cierro menu
                            if (window.innerWidth < pantallaTabletMinPx) {
                                //console.log(' btn ok. cierro menu en mobile.');
                                closeSidebar();
                            }

                            //meto Gen.1:1 en los head de cada trans
                            document.querySelectorAll('.partMob .mob_sh_link').forEach(el => {
                                let verse_to_show = (verse > 0) ? parseInt(verse) : 1;
                                putRefvisibleToHead(`00__${n_book}__${chapter}__${verse_to_show}`, 0);//todos los heads de cols
                            });

                            showTrans(n_book, chapter, verse, to_verse);
                            //console.log('--- encontrado n_book: ' +n_book + '\n short_name: ' +short_name);

                            //test //no hay chapter, no hay verse
                            if (chapter == null && verse == null) {
                                document.querySelector('#s_chapter').click();//propongo seleccionar el chapter
                            }
                            //hay chapter, no hay verse
                            if (chapter != null && parseInt(chapter) > 0 && verse == null) {
                                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado para elegir el verse
                            }
                            //hay chapter, hay verse
                            if (parseInt(chapter) > 0 && parseInt(verse) > 0) {
                                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
                            }
                        }//end modo_action_get_tsk_verses == by_text


                        //modo new. getting only verses to show by json
                        if(modo_action_get_tsk_verses == 'by_json'){
                            //console.log('modo_action_get_tsk_verses == by_json');
                            
                            //1. solo hay capitulo y no hay verse //funciona
                            if(chapter && verse == null){//no hay verse //funciona
                                //document.querySelector('#v_verse').innerHTML = '<span class="prim_verse">2. Antes de seleccionar el versículo, selecciona el capítulo por favor.</span>';
                                //creo virtual e
                                const e_virtual = document.createElement('li');
                                e_virtual.id = 'e_virt';
                                e_virtual.setAttribute('data-id_chapter',0);
                                e_virtual.setAttribute('data-show_chapter',1);
                                setTimeout(()=>{
                                    selChapter(e_virtual, chapter);                           
                                },50);


                                if(document.querySelector('#v_book .li_active') != null){
                                    document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
                                } 
                                if(document.querySelector('#v_book div[data-id_book="'+n_book+'"]') != null){
                                    document.querySelector('#v_book div[data-id_book="'+n_book+'"]').classList.add('li_active');//añado book
                                }
        
                                //si es mobile, cierro menu
                                if(window.innerWidth < pantallaTabletMinPx){
                                    //console.log(' btn ok. cierro menu en mobile.');
                                    closeSidebar();
                                }
        
                                //meto Gen.1:1 en los head de cada trans
                                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                                    let verse_to_show = (verse > 0) ? parseInt(verse) : 1 ;
                                    putRefvisibleToHead(`00__${n_book}__${chapter}__${verse_to_show}`, 0);//todos los heads de cols
                                });

                                
                                //meto ref encontrado en el historial de navegacion
                                addRefToHistNav(trans, inpt_nav.value, n_book, chapter, verse, to_verse);
                                
                                
                                showTrans(n_book, chapter, verse, to_verse);
                                //console.log('--- encontrado n_book: ' +n_book + '\n short_name: ' +short_name);

                                //test //no hay chapter, no hay verse
                                if(chapter == null && verse == null){
                                    document.querySelector('#s_chapter').click();//propongo seleccionar el chapter
                                }
                                //hay chapter, no hay verse
                                if(chapter != null && parseInt(chapter) > 0 && verse == null){
                                    document.querySelector('#s_verse').click();// se cargan verses del chapter indicado para elegir el verse
                                }
                                //hay chapter, hay verse
                                if(parseInt(chapter) > 0 && parseInt(verse) > 0){
                                    document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
                                }
                                
                            }
                            
                            //hay capitulo y hay verse //funciona
                            if(chapter && verse != null && parseInt(verse) > 0){

                                let url = './modules/text/'+trans+'/' + dataBooksBtnOk[i].PathName;// "./modules/text/rstStrongRed/02_exodus.htm"                                
                                
                                let formData = new FormData();
                                formData.append('url','../'+url);
                                formData.append('book', n_book);
                                formData.append('chapter', chapter);
        
                                fetch('app/read_file_get_VerseQty_to_json.php',{
                                    method: 'POST',
                                    body: formData
                                })
                                .then(response => response.json())
                                .then(data => {
                                    
                                    //console.log('data: ',data);
                                    //console.log('15047. VerseQty of chapter: ',data);
                                    
                                    if(verse > data.VerseQty) verse = data.VerseQty;
                                    //console.log('15047. verse: ',verse);

                                    inpt_nav.value += ':' + verse;
                                    obj_nav.id_verse = parseInt(verse) - 1;
                                    obj_nav.show_verse = verse;
                                    inpt_nav.setAttribute('data-id_verse',parseInt(verse) - 1);
                                    inpt_nav.setAttribute('data-show_verse',verse);
                                    document.querySelector('#v_verse').innerHTML = '';


                                    //hay to_verse
                                    if(to_verse != null && parseInt(to_verse) > data.VerseQty) to_verse = data.VerseQty;
                                    //console.log('15096. to_verse: ',to_verse);

                                    if(to_verse != null && parseInt(to_verse) > 0 && parseInt(verse) < parseInt(to_verse)){
                                        inpt_nav.value += '-' + to_verse;
                                        inpt_nav.setAttribute('data-show_to_verse',to_verse);
                                        obj_nav.show_to_verse = to_verse;
                                    }else{
                                        inpt_nav.setAttribute('data-show_to_verse','');
                                        obj_nav.show_to_verse = '';
                                    }

                                    if(document.querySelector('#v_book .li_active') != null){
                                        document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
                                    } 
                                    if(document.querySelector('#v_book div[data-id_book="'+n_book+'"]') != null){
                                        document.querySelector('#v_book div[data-id_book="'+n_book+'"]').classList.add('li_active');//añado book
                                    }
            
                                    //si es mobile, cierro menu
                                    if(window.innerWidth < pantallaTabletMinPx){
                                        //console.log(' btn ok. cierro menu en mobile.');
                                        closeSidebar();
                                    }
            
                                    //meto Gen.1:1 en los head de cada trans
                                    document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                                        let verse_to_show = (verse > 0) ? parseInt(verse) : 1 ;
                                        putRefvisibleToHead(`00__${n_book}__${chapter}__${verse_to_show}`, 0);//todos los heads de cols
                                    });

                                    //meto ref encontrado en el historial de navegacion
                                    addRefToHistNav(trans, inpt_nav.value, n_book, chapter, verse, to_verse); 

                                    showTrans(n_book, chapter, verse, to_verse);
                                    //console.log('--- encontrado n_book: ' +n_book + '\n short_name: ' +short_name);
        
                                    //test //no hay chapter, no hay verse
                                    if(chapter == null && verse == null){
                                        document.querySelector('#s_chapter').click();//propongo seleccionar el chapter
                                    }
                                    //hay chapter, no hay verse
                                    if(chapter != null && parseInt(chapter) > 0 && verse == null){
                                        document.querySelector('#s_verse').click();// se cargan verses del chapter indicado para elegir el verse
                                    }
                                    //hay chapter, hay verse
                                    if(parseInt(chapter) > 0 && parseInt(verse) > 0){
                                        document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
                                    }
            
                                })
                                .catch(error => { 
                                    // Código a realizar cuando se rechaza la promesa
                                    console.log('VerseQty. error promesa: '+error);
                                });

                            }

                        }//end modo_action_get_tsk_verses == 'by_json'


                        break;
                    }else{
                        //console.log('no hay coincidencia en el nombre corto de la Biblia... ');
                    }
                }//end for                
            }//end for

        }else{//modo old por fetch() cuando no hay objeto 'objTrans' desde 'arrFavTransObj'
            
            alert(0);//no entra nunca ya que tengo objeto arrFavTransObj
            console.log('modo old --- en getRef() ');

            let url = './modules/text/'+trans+'/bibleqt.json';//rsti2
            console.log('modo old --- en getRef() --- url: '+ url);
            fetch(url)
            .then(response => {
              return response.json(); // Devuelve una promesa
            })
            .then(data => {
                //console.log(data);
        
                window.dataBooksBtnOk = data.Books;
    
                for (let i = 0; i < dataBooksBtnOk.length; i++) {
                    for (let j = 0; j < dataBooksBtnOk[i].ShortNames.length; j++) {
                        const el = dataBooksBtnOk[i].ShortNames[j];
                        if(book.toLowerCase() == el.toLowerCase() || book.toLowerCase()+'.' == el.toLowerCase()){//añado '.' por si viene 'Sal' y en ShortNames hay 'Sal.'
                            var n_book = dataBooksBtnOk[i].BookNumber;
                            var short_name = dataBooksBtnOk[i].ShortNames[0];//siempre el primer nombre del array
    
                            //var inpt_nav = document.querySelector('#inpt_nav');
    
                            //reviso desde qué divtrans se llega a introducir la referencia para preparar la ref correspondiente para trans1 si se accede desde otros trans's en mobile
                            if(window.innerWidth < pantallaTabletMinPx){//mobile
                                //checkRefNav(n_book, chapter, verse, to_verse);                        
                            
                                if(document.querySelectorAll('.cols').length > 1){
    
                                    //si es trans2 y es trans con EnglishPsalms 'Y' se cliquea en el boton li de chapter Sal.23 español, convierto el chapter en el Пс 22 ruso 
                                    //console.log('clickeado trans: '+inpt_nav.dataset.trans);
                                    
                                    //var trans_base = div_trans1.dataset.trans;//la trans base de #trans1
                                    var trans_inpt = inpt_nav.dataset.trans;// trans desde input
                                    var divtrans_inpt = inpt_nav.dataset.divtrans;// trans desde input
    
                                    if(divtrans_inpt != '' && divtrans_inpt != 'trans1'){
                                        // Usa el método find para buscar el objeto que contiene 'rst' como nombre
                                        const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
                                        const obj_trans_inpt = arrFavTransObj.find(v => v.Translation === trans_inpt);
    
                                        if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_inpt.EnglishPsalms == 'Y'){
                                            var new_res = convertLinkFromEspToRus(n_book, chapter, verse, to_verse);//importante EspToRus
                                            chapter = new_res[1];
                                            verse = new_res[2];
                                            to_verse = new_res[3];
                                            //console.log('en getRef() --- convertido chapter: '+chapter);//empezando de 1
                                            //console.log('en getRef() --- convertido verse: '+verse);//empezando de 1
                                            //console.log('en getRef() --- convertido to_verse: '+to_verse);//empezando de 1
                                        }
                                        else if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_inpt.EnglishPsalms == 'N'){
                                            var new_res = convertLinkFromRusToEsp(n_book, chapter, verse, to_verse);//importante RusToEsp
                                            chapter = new_res[1];
                                            verse = new_res[2];
                                            to_verse = new_res[3];
                                            //console.log('en getRef() --- convertido chapter: '+chapter);//empezando de 1
                                            //console.log('en getRef() --- convertido verse: '+verse);//empezando de 1
                                            //console.log('en getRef() --- convertido to_verse: '+to_verse);//empezando de 1
                                        }else{
                                            //console.log('en getRef() --- no hago nada. chapter verse to_verse se quedan igual como en input.');
                                        }
    
                                    }
                                }                        
                            
                            } 
    
                            chapter = (chapter != null) ? chapter : 1;//default si no hay
                        
                            inpt_nav.setAttribute('data-id_book',n_book);
                            inpt_nav.setAttribute('data-show_book',short_name);
    
                            inpt_nav.setAttribute('data-id_chapter',parseInt(chapter) - 1);
                            inpt_nav.setAttribute('data-show_chapter',chapter);
    
                            inpt_nav.value = short_name;
                            obj_nav.show_book = short_name;
                            
                            //chapter
                            if(chapter != null && parseInt(chapter) > 0){
                                inpt_nav.value += ' ' + chapter;
                                obj_nav.id_chapter = parseInt(chapter) - 1;
                                obj_nav.show_chapter = chapter;
                                document.querySelector('#v_chapter').innerHTML = '';
                            }else{
                                document.querySelector('#v_chapter').innerHTML = 'selecciona el capítulo';
                                obj_nav.id_chapter = parseInt(chapter) - 1;//por defecto para que no dé fallo
                                obj_nav.show_chapter = chapter;//por defecto para que no dé fallo
                            }
                            
                            //verse
                            if(verse != null && parseInt(verse) > 0){
                                inpt_nav.value += ':' + verse;
                                obj_nav.id_verse = parseInt(verse) - 1;
                                obj_nav.show_verse = verse;
                                inpt_nav.setAttribute('data-id_verse',parseInt(verse) - 1);
                                inpt_nav.setAttribute('data-show_verse',verse);
                                document.querySelector('#v_verse').innerHTML = '';
                            }else{
                                //document.querySelector('#v_verse').innerHTML = '<span class="prim_verse">2. Antes de seleccionar el versículo, selecciona el capítulo por favor.</span>';
                                //creo virtual e
                                const e_virtual = document.createElement('li');
                                e_virtual.id = 'e_virt';
                                e_virtual.setAttribute('data-id_chapter',0);
                                e_virtual.setAttribute('data-show_chapter',1);
                                //e_virtual.onclick = function(){
                                    //selChapter(e_virtual,1);
                                //};
                                setTimeout(()=>{
                                    //e_virtual.click();
                                    selChapter(e_virtual, chapter);                           
                                },50);
                            }
    
                            //hay to_verse
                            if(to_verse != null && parseInt(to_verse) > 0 && parseInt(verse) < parseInt(to_verse)){
                                inpt_nav.value += '-' + to_verse;
                                inpt_nav.setAttribute('data-show_to_verse',to_verse);
                                obj_nav.show_to_verse = to_verse;
                            }else{
                                inpt_nav.setAttribute('data-show_to_verse','');
                                obj_nav.show_to_verse = '';
                            }
    
                            
                            //no hay chapter, no hay verse
                            if(chapter == null && verse == null){
                                document.querySelector('#s_chapter').click();//propongo seleccionar el chapter
                            }
                            //hay chapter, no hay verse
                            if(chapter != null && parseInt(chapter) > 0 && verse == null){
                                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado para elegir el verse
                            }
                            //hay chapter, hay verse
                            if(parseInt(chapter) > 0 && parseInt(verse) > 0){
                                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
                            }
    
                            document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
                            document.querySelector('#v_book div[data-id_book="'+n_book+'"]').classList.add('li_active');//añado book
    
                            //si es mobile, cierro menu
                            if(window.innerWidth < pantallaTabletMinPx){
                                //console.log(' btn ok. cierro menu en mobile.');
                                closeSidebar();
                            }
    
                            //meto Gen.1:1 en los head de cada trans
                            document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                                let verse_to_show = (verse > 0) ? parseInt(verse) : 1 ;
                                putRefvisibleToHead(`00__${n_book}__${chapter}__${verse_to_show}`, 0);//todos los heads de cols
                            });
    
                            showTrans(n_book, chapter, verse, to_verse);
                            //console.log('--- encontrado n_book: ' +n_book + '\n short_name: ' +short_name);
                            break;
                        }else{
                            //console.log('no hay coincidencia en el nombre corto de la Biblia... ');
                        }
                    }//end for                
                }//end for   
            })
            .catch(error => { 
                // Código a realizar cuando se rechaza la promesa
                //console.log('error promesa: '+error);
            });

        }


    }else{
        //console.log('no existe book');
    }
}


function getRefByCode(code){//ej.: code: rv60__0__14__7 / rv60__0__14__7-14
    //console.log('=== function getRefByCode() ===');
    var act_trans = div_trans1.getAttribute('data-trans');

    var arr_code = code.split('__');
    var trans = arr_code[0];
    var book = arr_code[1];
    var chapter = arr_code[2];
    var verse = arr_code[3];
    var to_verse = null;
    if(arr_code[3].includes('-')){
        verse = arr_code[3].split('-')[0];
        to_verse = arr_code[3].split('-')[1];
    }
    //console.log(inpt_v);

    //console.log('book: '+book);
    //console.log('chapter: '+chapter);
    //console.log('verse: '+verse);
    //console.log('to_verse: '+to_verse);

       
    //si trans es distinto del actual
    if(trans != act_trans){
        //lo cojo del parametro y grabo en div #trans1
        var button_new_trans = document.querySelector('#footerInner button[value="'+trans+'"]');
        var EnglishPsalms = button_new_trans.getAttribute('ep');//EnglishPsalms
        div_trans1.setAttribute('data-trans',trans);
        div_trans1.setAttribute('data-base_ep',EnglishPsalms);
        div_trans1.querySelector('.colsHeadInner .partDesk .desk_trans').innerHTML = button_new_trans.innerHTML;//meto  BibleShortName (RST+);
        document.querySelector('#s_book').click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля.
        
        var trans_buttons = document.querySelectorAll('#footerInner button');
        trans_buttons.forEach(el=>{
            el.classList.remove('btn_active');
        });
        button_new_trans.classList.add('btn_active');
        //console.log('nuevo trans: '+trans);
    }


    if(book != null){
        let url = './modules/text/'+trans+'/bibleqt.json';//rsti2
        fetch(url)
        .then(response => {
          return response.json(); // Devuelve una promesa
        })
        .then(data => {
            //console.log(data);
    
            let short_name = data.Books[book].ShortNames[0];
            //let inpt_nav = document.querySelector('#inpt_nav');
                    
            inpt_nav.setAttribute('data-id_book',book);
            inpt_nav.setAttribute('data-show_book',short_name);

            inpt_nav.setAttribute('data-id_chapter',parseInt(chapter) - 1);
            inpt_nav.setAttribute('data-show_chapter',chapter);

            inpt_nav.setAttribute('data-id_verse',parseInt(verse) - 1);
            inpt_nav.setAttribute('data-show_verse',verse);

            inpt_nav.value = short_name ;

            if(chapter != null && parseInt(chapter) > 0){
                inpt_nav.value += ' ' + chapter;
                document.querySelector('#v_chapter').innerHTML = '';
            }

            if(verse != null && parseInt(verse) > 0){
                inpt_nav.value += ':' + verse;
                document.querySelector('#v_verse').innerHTML = '';
            }
            //hay to_verse
            if(to_verse != null && parseInt(to_verse) > 0 && parseInt(verse) < parseInt(to_verse)){
                inpt_nav.value += '-' + to_verse;
                inpt_nav.setAttribute('data-show_to_verse',to_verse);
            }else{
                inpt_nav.setAttribute('data-show_to_verse','');
            }

            //hay chapter, hay verse
            if(parseInt(chapter) > 0 && parseInt(verse) > 0){
                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
            }

            document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
            document.querySelector('#v_book li[data-id_book="'+book+'"]').classList.add('li_active');//añado book

            showTrans(book, chapter, verse, to_verse);
            //console.log('--- code of book: ' +book + ' --- and short_name: ' +short_name);   
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });
    }else{
        //console.log('no existe book');
    }
}


function getRefByCodeForFind(code){//ej.: code: rv60__0__14__7 / rv60__0__14__7-14
    //console.log('=== function getRefByCodeForFind() ===');
    var act_trans = div_trans1.getAttribute('data-trans');

    var arr_code = code.split('__');
    var trans = arr_code[0];
    var book = arr_code[1];
    var chapter = arr_code[2];
    var verse = arr_code[3];
    var to_verse = null;
    if(arr_code[3].includes('-')){
        verse = arr_code[3].split('-')[0];
        to_verse = arr_code[3].split('-')[1];
    }
    //console.log(inpt_v);

    //console.log('book: '+book);
    //console.log('chapter: '+chapter);
    //console.log('verse: '+verse);
    //console.log('to_verse: '+to_verse);

       
    //si trans es distinto del actual
    if(trans != act_trans){
        //lo cojo del parametro y grabo en div #trans1
        var button_new_trans = document.querySelector('#footerInner button[value="'+trans+'"]');
        var EnglishPsalms = button_new_trans.getAttribute('ep');//EnglishPsalms
        div_trans1.setAttribute('data-trans',trans);
        div_trans1.setAttribute('data-base_ep',EnglishPsalms);
        div_trans1.querySelector('.colsHeadInner .partDesk .desk_trans').innerHTML = button_new_trans.innerHTML;//meto  BibleShortName (RST+);
        document.querySelector('#s_book').click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля.
        
        var trans_buttons = document.querySelectorAll('#footerInner button');
        trans_buttons.forEach(el=>{
            el.classList.remove('btn_active');
        });
        button_new_trans.classList.add('btn_active');
        //console.log('nuevo trans: '+trans);
    }


    if(book != null){
        let url = './modules/text/'+trans+'/bibleqt.json';//rsti2
        fetch(url)
        .then(response => {
          return response.json(); // Devuelve una promesa
        })
        .then(data => {
            //console.log(data);
    
            let short_name = data.Books[book].ShortNames[0];
            //let inpt_nav = document.querySelector('#inpt_nav');
                    
            inpt_nav.setAttribute('data-id_book',book);
            inpt_nav.setAttribute('data-show_book',short_name);

            inpt_nav.setAttribute('data-id_chapter',parseInt(chapter) - 1);
            inpt_nav.setAttribute('data-show_chapter',chapter);

            inpt_nav.setAttribute('data-id_verse',parseInt(verse) - 1);
            inpt_nav.setAttribute('data-show_verse',verse);

            inpt_nav.value = short_name ;

            if(chapter != null && parseInt(chapter) > 0){
                inpt_nav.value += ' ' + chapter;
                document.querySelector('#v_chapter').innerHTML = '';
            }

            if(verse != null && parseInt(verse) > 0){
                inpt_nav.value += ':' + verse;
                document.querySelector('#v_verse').innerHTML = '';
            }
            //hay to_verse
            if(to_verse != null && parseInt(to_verse) > 0 && parseInt(verse) < parseInt(to_verse)){
                inpt_nav.value += '-' + to_verse;
                inpt_nav.setAttribute('data-show_to_verse',to_verse);
            }else{
                inpt_nav.setAttribute('data-show_to_verse','');
            }

            //hay chapter, hay verse
            if(parseInt(chapter) > 0 && parseInt(verse) > 0){
                document.querySelector('#s_verse').click();// se cargan verses del chapter indicado y se muestra el verse marcado
            }

            document.querySelector('#v_book .li_active').classList.remove('li_active');//quito anterior book
            document.querySelector('#v_book li[data-id_book="'+book+'"]').classList.add('li_active');//añado book

            showTrans(book, chapter, verse, to_verse);
            //console.log('--- code of book: ' +book + ' --- and short_name: ' +short_name);   
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });
    }else{
        //console.log('no existe book');
    }
}



//document.onkeydown = checkKey;

function checkKey(e) {//funciona .codigo mas limpio aunque .keyCode is deprecated
    e = e || window.event;
    switch (e.keyCode) {
        case 13:// tecla "Enter"
            if(document.querySelector('#btn_nav').classList.contains('btn_active')){
                var thisBtn = document.querySelector('#btn_ok')
                thisBtn.click();
                thisBtn.classList.add('btn_ok_active');
                setTimeout(() => {thisBtn.classList.remove('btn_ok_active')},100);
            }
            if(document.querySelector('#btn_find').classList.contains('btn_active')){
                document.querySelector('#btn_ok_find').click();
            }
        
            break;

        case 27:// tecla "Esc"
            if(document.querySelector('#btn_nav').classList.contains('btn_active')){
                clear_inpt('nav');
            }
            if(document.querySelector('#btn_find').classList.contains('btn_active')){
                //clear_inpt('find');
                stopFindWords();
            }
            if(document.querySelector('#btn_strong').classList.contains('btn_active')){
                clear_inpt('strong');
            }
            break;      
    }
};
function clear_inpt(param){
    let thisInpt = document.querySelector('#inpt_'+param);
    thisInpt.value = '';
    thisInpt.focus();
}


function isInViewport(el) {
    const rect = el.getBoundingClientRect();
    return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
}

function selectModule(e){
    var thisDiv = e.currentTarget;

    let sk_test = true;//test...
    if(sk_test){
        thisDiv = e;
    }
    //console.log(thisDiv);
    
    Swal.fire({
        title: '<p><strong>Выберите модуль Библии</strong></p>',
        icon: 'info',
        html: ` <select name="modules" id="sel_modules" >

                    <optgroup label="Русский язык">
                        <option data-trans="rstStrongRed" data-shortName="RST+r">(RU) Синодальная Библия (с номерами Стронга, слова Иисуса выделены красным)</option>
                        <option data-trans="rstStrong" data-shortName="RST+">(RU) Русский Синодальный текст (с номерами Стронга)</option>
                        <option data-trans="rstt" data-shortName="RSTt">(RU) Синодальная Библия (для переводчиков).</option>
                        <option data-trans="rsti2" data-shortName="RSTi2*">(RU)* Уточненный синодальный перевод. Испр. 2 + неканонические.</option>
                        <option data-trans="rstm" data-shortName="RSTm*">(RU)* Русский Синодальный текст (современная редакция) + неканонические.</option>
                        <option data-trans="nrt" data-shortName="NRT">(RU) Новый русский перевод IBS 2006 Москва.</option>
                        <option data-trans="rstStrong_rv60" data-shortName="RST+RV60">(RU+ES) Русский Синодальный текст (с номерами Стронга) + Reina Valera 1960</option>
                        <option data-trans="opnz" data-shortName="OPNZ">(RU) Окрытый Перевод Новго Завета. 2013</option>
                    </optgroup>
                    <option disabled></option>

                    <optgroup label="Українська мова">
                        <option data-trans="ukr_fil" data-shortName="Ukr_Fil">(UA) Біблія. Патріарх Філарет (Денисено)</option>
                        <option data-trans="ukr_ogi" data-shortName="Ukr_Ogi">(UA) Біблія у перекладі І. Огієнка</option>
                        <option data-trans="ukr_hom" data-shortName="Ukr_Hom">(UA) Біблія у перекладі І. Хоменка</option>
                        <option data-trans="ukr_gyz" data-shortName="Ukr_Gyz">(UA) Біблія у перекладі Олександра Гижи</option>
                        <option data-trans="ukr_tur" data-shortName="Ukr_Tur">(UA) Біблія у перекладі з давньогрецької о. Р. Турконяка = UBT</option>
                        <option data-trans="ukr_der" data-shortName="Ukr_Der">(UA) Новий Завіт у перекладі Г. Деркач</option>
                    </optgroup>
                    <option disabled></option>

                    <optgroup label="Español">
                        <option data-trans="rv60" data-shortName="RV60">(ES) Reina Valera 1960</option>
                        <option data-trans="lbla" data-shortName="LBLA">(ES) La Biblia de las Américas</option>
                    </optgroup>
                    <option disabled></option>

                    <optgroup style="display:none;" label="English">
                        <option style="display:none;" data-trans="kjv" data-shortName="KJV">(EN) King James Version</option>
                        <option style="display:none;" data-trans="nkjv" data-shortName="NKJV">(EN) New King James Version</option>
                    </optgroup>
                    <option disabled></option>

                </select>
                <br><br>
                `,
        showCloseButton: true,
        showCancelButton: true,
        focusConfirm: false,
        confirmButtonText: 'Ok',
        confirmButtonAriaLabel: '',
        cancelButtonText: 'Отмена',
        cancelButtonAriaLabel: ''
      }).then((result) => {
        /* Read more about isConfirmed, isDenied below */
        if(result.isConfirmed) {
            let sel_modules = document.querySelector('#sel_modules');
            let i = sel_modules.selectedIndex;
            //let trans = sel_modules[i].value;
            let trans = sel_modules[i].getAttribute('data-trans');
            // let BibleShortName = sel_modules[i].innerHTML;
            let BibleShortName = sel_modules[i].getAttribute('data-shortName');
            let BibleFullName = sel_modules[i].innerHTML;
            //console.log(trans);
            //console.log(thisDiv);

            changeModule(thisDiv, trans, BibleShortName);
            //document.querySelector('#footer button[value="'+sel_modules[i].value+'"]').click();
            //Swal.fire('Выбраный Модуль Библии: <b>' + BibleFullName + '</b>', '', 'success');
        } else if (result.isDenied) {
          Swal.fire('Changes are not saved', '', 'info')
        }
      })
}


function selectModule2(htmlTrans){
    //console.log(arrFavTransObj);
    const bl_modalFullInner = document.querySelector('#bl_modalFullInner');
    bl_modalFullInner.innerHTML = '';//reset

    // let thisDiv = document.querySelector('#trans2.colsHead');//test
    let thisDiv = htmlTrans;//test
    //console.log('abajo htmlTrans: ');
    //console.log(htmlTrans);


    arrFavTransObj.forEach((el,i)=>{
        const p = document.createElement('p');
        p.className = 'cl_trans';
        p.innerHTML = `<span class="sh_n">${arrFavTransObj[i].BibleShortName}</span> `;
        p.innerHTML += `<span class="la_n">${arrFavTransObj[i].BibleName}</span>`;
        p.onclick = function(){
            changeModule2(thisDiv, arrFavTransObj[i].Translation, arrFavTransObj[i].BibleShortName, arrFavTransObj[i].EnglishPsalms);
            //console.log('p.onclick llamando changeModule2 ');
            closeModal();
        }        

        bl_modalFullInner.appendChild(p);
    });
}


function getObjTransByName(trans){
    if(typeof arrFavTransObj != 'undefined'){
        return arrFavTransObj.find(v => v.Translation === trans );
    }else{
        return false;
    }
}



function selectTab(){//Vkladki
    //console.log('function selectTab()');
    const bl_modalFullInner = document.querySelector('#bl_modalFullInner');
    bl_modalFullInner.innerHTML = '';//reset
    arrTabs.forEach((el,i)=>{
        //busco nombres de trans para mostrar
        let arr_el_trans = (el.str_trans.includes(',')) ? el.str_trans.split(',') : el.str_trans.split() ;//el.str_trans.split() devuelve un array con 1 valor
        if(arr_el_trans == '') return false;
        //console.log('abajo arr_el_trans: ');
        //console.log(arr_el_trans);
        //saco BibleShortName por Translation desde string 
        let arr_trans_names = [];
        arr_el_trans.forEach(el_tr => {
            el_tr = el_tr.trim();
            //console.log('el_tr: '+el_tr);            
            const el_tr_obj = arrFavTransObj.find(v => v.Translation === el_tr );
            //console.log(el_tr_obj);
            arr_trans_names.push(el_tr_obj.BibleShortName);
        });
        let str_trans_names = arr_trans_names.join(', ');
        //console.log('end --- str_trans_names: '+str_trans_names);
        const p = document.createElement('p');
        p.className = 'cl_tab';
        if(arrTabs[i].className.includes('tab_active')) p.className += ' cl_tab_active'; 
        p.innerHTML = `<span class="sh_nl">${i+1}) </span> `;
        p.innerHTML += `<span class="sh_n">${arrTabs[i].ref}</span> `;
        p.innerHTML += `<span class="sh_cuant" title="Translations to compare: ${arr_trans_names.length}">(${arr_trans_names.length})</span>`;
        p.innerHTML += `<span class="la_n">${str_trans_names}</span>`;
        p.innerHTML += `<span class="btn_tab_x" onclick="closeTab(document.querySelector('#${arrTabs[i].id} button'))">&#10005;</span>`;// <!--X--> 
        p.onclick = function(){
            if(window.innerWidth < pantallaTabletMinPx){
                positionShow = 'col';//pongo 'col' para que se cambie a 'row' onclick 
                document.querySelector('#btn_changePositionShowModal').click();               
            }
            if(typeof arrTabs[i] != 'undefined'){
                //simulo click sobre vkladka correspondiente
                let this_tab = document.querySelector('#'+arrTabs[i].id);
                this_tab.click();
                this_tab.scrollIntoView();
            }
            //console.log('p.onclick llamando changeModule2 ');
            closeModal();
            updateArrTabs();
        }
        bl_modalFullInner.appendChild(p);
    });
}

//addListenerModule();

function addListenerModule(){
    document.querySelectorAll('.colsHead').forEach((el,i)=>{
        if(i>0){
            el.addEventListener('click',selectModule);//antes
            //el.addEventListener('click',selectModule2);//new
        }
    });
}



function hist(param){
    console.log('funcion en desarrollo. param: '+param);
}


function bookGo(dir){
    //console.log('bookGo dir: '+dir);    
    //var inpt_nav = document.querySelector('#inpt_nav');
    var act_id_book = (inpt_nav.getAttribute('data-id_book') != '') ? inpt_nav.getAttribute('data-id_book') : 0 ;//genesis
    Translation = (inpt_nav.dataset.trans != '') ? inpt_nav.dataset.trans : div_trans1.getAttribute('data-trans');

    //reset de verse en rojo ya que hay que escojer el verse...
    inpt_nav.setAttribute('data-id_chapter', '0');
    inpt_nav.setAttribute('data-show_chapter', '1');
    inpt_nav.setAttribute('data-id_verse', '');
    inpt_nav.setAttribute('data-show_verse', '');
    document.querySelectorAll('#v_verse .v_li').forEach(el=>{
        el.classList.remove('li_active');
    });

    obj_nav.id_chapter = 0;
    obj_nav.show_chapter = 1;
    obj_nav.id_verse = '';
    obj_nav.show_verse = '';

    var objTrans = arrFavTransObj.find(v => v.Translation === Translation);

    //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
    if(typeof objTrans != 'undefined' && objTrans != null && objTrans != '' ){
        //alert('bookGo(dir) --- objTrans está creado. abajo objTrans: ');
        //console.log('bookGo(dir) --- objTrans está creado. abajo objTrans: ');
        //console.log(objTrans);

        var myPromise_b_go = new Promise(function(resolve, reject){
            resolve('ok');
        });

        myPromise_b_go
        .then((res) => {

            if(res == 'ok'){//siempre ok
                var bq = objTrans;
            }            
            //console.log('abajo bq'); 
            //console.log(bq); 

            //console.log('abajo bq'); 
            //console.log(bq); 

            if(dir == 'next'){
                var next_id_book = act_id_book;
                var next_show_chapter = 1;//siempre      
                
                if(act_id_book == parseInt(bq.BookQty) - 1){//66 - 1 = 65 //Apocalipsis
                    next_id_book = 0;//Génesis
                }else{
                    next_id_book = parseInt(act_id_book) + 1;
                }            

                inpt_nav.setAttribute('data-id_book', next_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[next_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(next_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', next_show_chapter);

                inpt_nav.value = bq.Books[next_id_book].ShortNames[0] + ' ' + next_show_chapter;

                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${next_id_book}__${next_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = next_id_book;
                obj_nav.show_book = bq.Books[next_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(next_show_chapter) - 1;
                obj_nav.show_chapter = next_show_chapter;


                sel(document.querySelector('#s_chapter'),'ch',next_show_chapter);//chapter
                showTrans(next_id_book, next_show_chapter);
            }

            if(dir == 'prev'){
                var prev_id_book = act_id_book;
                var prev_show_chapter = 1;

                if(act_id_book == 0){//Génesis
                    prev_id_book = parseInt(bq.BookQty) - 1;//66 - 1 = 65 => Apocapipsis
                }else{
                    prev_id_book = parseInt(act_id_book) - 1;
                }

                inpt_nav.setAttribute('data-id_book', prev_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[prev_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(prev_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', prev_show_chapter);

                inpt_nav.value = bq.Books[prev_id_book].ShortNames[0] + ' ' + prev_show_chapter;
                
                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${prev_id_book}__${prev_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = prev_id_book;
                obj_nav.show_book = bq.Books[prev_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(prev_show_chapter) - 1;
                obj_nav.show_chapter = prev_show_chapter;

                sel(document.querySelector('#s_chapter'),'ch',prev_show_chapter);//chapter
                showTrans(prev_id_book, prev_show_chapter);
            }            
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });

    }else{//MODO OLD. si hace falta!

        //alert('bookGo(dir) --- modo old. fetch()');
        //console.log('chapterGo(dir) --- modo old. fetch()');

        //saco ajustes de este modulo en json
        url_bq = `modules/text/${Translation}/bibleqt.json`;
        fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {

            //console.log('abajo bq'); 
            //console.log(bq); 

            if(dir == 'next'){
                var next_id_book = act_id_book;
                var next_show_chapter = 1;//siempre      
                
                if(act_id_book == parseInt(bq.BookQty) - 1){//66 - 1 = 65 //Apocalipsis
                    next_id_book = 0;//Génesis
                }else{
                    next_id_book = parseInt(act_id_book) + 1;
                }            

                inpt_nav.setAttribute('data-id_book', next_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[next_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(next_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', next_show_chapter);

                inpt_nav.value = bq.Books[next_id_book].ShortNames[0] + ' ' + next_show_chapter;

                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${next_id_book}__${next_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = next_id_book;
                obj_nav.show_book = bq.Books[next_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(next_show_chapter) - 1;
                obj_nav.show_chapter = next_show_chapter;


                sel(document.querySelector('#s_chapter'),'ch',next_show_chapter);//chapter
                showTrans(next_id_book, next_show_chapter);
            }

            if(dir == 'prev'){
                var prev_id_book = act_id_book;
                var prev_show_chapter = 1;

                if(act_id_book == 0){//Génesis
                    prev_id_book = parseInt(bq.BookQty) - 1;//66 - 1 = 65 => Apocapipsis
                }else{
                    prev_id_book = parseInt(act_id_book) - 1;
                }

                inpt_nav.setAttribute('data-id_book', prev_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[prev_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(prev_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', prev_show_chapter);

                inpt_nav.value = bq.Books[prev_id_book].ShortNames[0] + ' ' + prev_show_chapter;
                
                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${prev_id_book}__${prev_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = prev_id_book;
                obj_nav.show_book = bq.Books[prev_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(prev_show_chapter) - 1;
                obj_nav.show_chapter = prev_show_chapter;

                sel(document.querySelector('#s_chapter'),'ch',prev_show_chapter);//chapter
                showTrans(prev_id_book, prev_show_chapter);
            }            
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });

    }

}

function scrollTopCero(){
    document.querySelectorAll('.colsInner').forEach(el=>{
        el.scrollTop = 0;
    });
}


function chapterGo(dir){
    var act_id_book = (inpt_nav.getAttribute('data-id_book') != '') ? inpt_nav.getAttribute('data-id_book') : 0 ;//genesis
    var act_show_chapter = (inpt_nav.getAttribute('data-show_chapter') != '') ? inpt_nav.getAttribute('data-show_chapter') : 1 ;
    Translation = (inpt_nav.dataset.trans != '') ? inpt_nav.dataset.trans : div_trans1.getAttribute('data-trans');

    //reset de verse en rojo ya que hay que escojer el verse...
    inpt_nav.setAttribute('data-id_verse', '');
    inpt_nav.setAttribute('data-show_verse', '');
    document.querySelectorAll('#v_verse .v_li').forEach(el=>{
        el.classList.remove('li_active');
    });

    obj_nav.id_verse = '';
    obj_nav.show_verse = '';

    //por defecto muevo el scroll al top
    scrollTopCero();



    var objTrans = arrFavTransObj.find(v => v.Translation === Translation);
    
    //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
    if(typeof objTrans != 'undefined' && objTrans != null && objTrans != '' ){
        //alert('chapterGo(dir) --- objTrans está creado. abajo objTrans: ');
        //console.log('chapterGo(dir) --- objTrans está creado. abajo objTrans: ');
        //console.log(objTrans);

        var myPromise_ch_go = new Promise(function(resolve, reject){
            resolve('ok');
        });


        myPromise_ch_go
        .then((res) => {

            if(res == 'ok'){//siempre ok
                var bq = objTrans;
            }            
            //console.log('abajo bq'); 
            //console.log(bq); 

            //if(act_id_book >= bq.BookQty){//REVISAR!!!
            //    alert('No es posible pasar a siguiente capítulo ya que todos los módulos no tienen la misma cantidad de libros.Esto sucede cuando se quiere leer los librós apócrifos.');
            //    return false;
            //}


            if(dir == 'next'){
                var next_id_book = act_id_book;
                var next_show_chapter = act_show_chapter; 

                if(act_show_chapter == bq.Books[act_id_book].ChapterQty){
                    if(act_id_book == parseInt(bq.BookQty) - 1){//Apocalipsis
                        next_id_book = 0;//Génesis
                    }else{
                        next_id_book = parseInt(act_id_book) + 1;
                    }
                    next_show_chapter = 1;
                }else{
                    next_show_chapter = parseInt(act_show_chapter) + 1;
                }
                inpt_nav.setAttribute('data-id_book', next_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[next_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(next_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', next_show_chapter);

                inpt_nav.value = bq.Books[next_id_book].ShortNames[0] + ' ' + next_show_chapter;
                
                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${next_id_book}__${next_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = next_id_book;
                obj_nav.show_book = bq.Books[next_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(next_show_chapter) - 1;
                obj_nav.show_chapter = next_show_chapter;

                //sel(document.querySelector('#s_chapter'),'ch',Translation);//test
                setTimeout(()=>{
                    sel(document.querySelector('#s_verse'),'v',Translation);//verse
                },50);
                showTrans(next_id_book, next_show_chapter); 
            }

            if(dir == 'prev'){
                var prev_id_book = act_id_book;
                var prev_show_chapter = act_show_chapter;

                if(act_show_chapter == 1){
                    if(act_id_book == 0){//Génesis
                        prev_id_book = parseInt(bq.BookQty) - 1;//66 - 1 = 65 => Apocapipsis
                    }else{
                        prev_id_book = parseInt(act_id_book) - 1;
                    }
                    prev_show_chapter = parseInt(bq.Books[prev_id_book].ChapterQty);
                }else{
                    prev_show_chapter = parseInt(act_show_chapter) - 1;
                }
                inpt_nav.setAttribute('data-id_book', prev_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[prev_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(prev_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', prev_show_chapter);

                inpt_nav.value = bq.Books[prev_id_book].ShortNames[0] + ' ' + prev_show_chapter;

                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${prev_id_book}__${prev_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = prev_id_book;
                obj_nav.show_book = bq.Books[prev_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(prev_show_chapter) - 1;
                obj_nav.show_chapter = prev_show_chapter;

                setTimeout(()=>{
                    sel(document.querySelector('#s_verse'),'v',Translation);//verse
                },50);
                showTrans(prev_id_book, prev_show_chapter);
            }

            
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });

    }else{//MODO OLD. si hace falta!
        
        //alert('chapterGo(dir) --- modo old. fetch()');
        //console.log('chapterGo(dir) --- modo old. fetch()');

        //saco ajustes de este modulo en json
        url_bq = `modules/text/${Translation}/bibleqt.json`;
        fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {

            //console.log('abajo bq'); 
            //console.log(bq); 

            //if(act_id_book >= bq.BookQty){//REVISAR!!!
            //    alert('No es posible pasar a siguiente capítulo ya que todos los módulos no tienen la misma cantidad de libros.Esto sucede cuando se quiere leer los librós apócrifos.');
            //    return false;
            //}


            if(dir == 'next'){
                var next_id_book = act_id_book;
                var next_show_chapter = act_show_chapter; 

                if(act_show_chapter == bq.Books[act_id_book].ChapterQty){
                    if(act_id_book == parseInt(bq.BookQty) - 1){//Apocalipsis
                        next_id_book = 0;//Génesis
                    }else{
                        next_id_book = parseInt(act_id_book) + 1;
                    }
                    next_show_chapter = 1;
                }else{
                    next_show_chapter = parseInt(act_show_chapter) + 1;
                }
                inpt_nav.setAttribute('data-id_book', next_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[next_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(next_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', next_show_chapter);

                inpt_nav.value = bq.Books[next_id_book].ShortNames[0] + ' ' + next_show_chapter;
                
                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${next_id_book}__${next_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = next_id_book;
                obj_nav.show_book = bq.Books[next_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(next_show_chapter) - 1;
                obj_nav.show_chapter = next_show_chapter;

                sel(document.querySelector('#s_verse'),'v',Translation);//verse
                showTrans(next_id_book, next_show_chapter); 
            }

            if(dir == 'prev'){
                var prev_id_book = act_id_book;
                var prev_show_chapter = act_show_chapter;

                if(act_show_chapter == 1){
                    if(act_id_book == 0){//Génesis
                        prev_id_book = parseInt(bq.BookQty) - 1;//66 - 1 = 65 => Apocapipsis
                    }else{
                        prev_id_book = parseInt(act_id_book) - 1;
                    }
                    prev_show_chapter = parseInt(bq.Books[prev_id_book].ChapterQty);
                }else{
                    prev_show_chapter = parseInt(act_show_chapter) - 1;
                }
                inpt_nav.setAttribute('data-id_book', prev_id_book);
                inpt_nav.setAttribute('data-show_book', bq.Books[prev_id_book].ShortNames[0]);

                inpt_nav.setAttribute('data-id_chapter', parseInt(prev_show_chapter) - 1);
                inpt_nav.setAttribute('data-show_chapter', prev_show_chapter);

                inpt_nav.value = bq.Books[prev_id_book].ShortNames[0] + ' ' + prev_show_chapter;

                //meto Gen.1:1 en los head de cada trans
                document.querySelectorAll('.partMob .mob_sh_link').forEach(el=>{
                    putRefvisibleToHead(`00__${prev_id_book}__${prev_show_chapter}__1`, 0);//todos los heads de cols
                });

                obj_nav.id_book = prev_id_book;
                obj_nav.show_book = bq.Books[prev_id_book].ShortNames[0];

                obj_nav.id_chapter = parseInt(prev_show_chapter) - 1;
                obj_nav.show_chapter = prev_show_chapter;

                sel(document.querySelector('#s_verse'),'v',Translation);//verse
                showTrans(prev_id_book, prev_show_chapter);
            }

            
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            //console.log('error promesa: '+error);
        });

    }


}

function showTab(e, param){
    document.querySelectorAll('.wr_btns_scr button').forEach(el=>{
        el.classList.remove('btn_active');
    });
    e.classList.add('btn_active');
    
    
    if(param == 'nav'){
        document.querySelector('#vklad_nav').style.display = 'block';
        document.querySelector('#vklad_find').style.display = 'none';
        document.querySelector('#vklad_tsk').style.display = 'none';
        document.querySelector('#vklad_strong').style.display = 'none';
        mySizeNav();
    }
    if(param == 'find'){
        document.querySelector('#vklad_nav').style.display = 'none';
        document.querySelector('#vklad_find').style.display = 'block';
        document.querySelector('#vklad_tsk').style.display = 'none';
        document.querySelector('#vklad_strong').style.display = 'none';
        mySizeFind();
    }
    if(param == 'tsk'){
        document.querySelector('#vklad_nav').style.display = 'none';
        document.querySelector('#vklad_find').style.display = 'none';
        document.querySelector('#vklad_tsk').style.display = 'block';
        document.querySelector('#vklad_strong').style.display = 'none';
        mySizeTsk();
    }
    if(param == 'strong'){
        document.querySelector('#vklad_nav').style.display = 'none';
        document.querySelector('#vklad_find').style.display = 'none';
        document.querySelector('#vklad_tsk').style.display = 'none';
        document.querySelector('#vklad_strong').style.display = 'block';
        mySizeStrong();
    }
            
}

function goToLink(trans, refLink){
    //console.log('=== function goToLink(refLink). refLink: '+refLink);
    //document.querySelector('#inpt_nav').value = refLink;
    inpt_nav.value = refLink;
    
    //console.log('llamo getRef()...');
    getRef(trans);

    //document.querySelector('#btn_ok').click();   

    /*
    let link = e.getAttribute('data2').split('__');
    let trans = link[0];
    let book = link[1];
    let chapter = link[2];
    let verse = link[3];
    let to_verse = link[4];
    showTrans(book, chapter, verse, to_verse);
    */
}

function goToLinkFromFind(trans, refLink){
    //console.log('=== function goToLinkFromFind(refLink). refLink: '+refLink);
    //document.querySelector('#inpt_nav').value = refLink;
    inpt_nav.value = refLink;

    //para que no aparezca TSK
    //showTab(document.querySelector('#btn_find'),'find');
    document.querySelector('#vklad_tsk').style.display = 'none';
    
    //console.log('llamo getRef()...');
    getRef(trans); 
}

function puntosInterval(){
    const element = document.querySelector(".puntos");
    var count = 0;
    if(element != null){
        setInterval(()=>{
            element.innerHTML += ".";
            count++;
            if(count == 4){
            count = 0;
            element.innerHTML = ''; 
            }               
        }, 500);
    }
}

function showTabMob(btn_id, param, el){
    //1. abro menu mobile
    openSidebar(el);
    //2. llamo showTab(document.querySelector('#btn_nav'),'nav')
    showTab(document.querySelector(btn_id), param);
}


function makeTransObj_old(){
    var arrTrans = [
        "rstStrongRed",
        //"rstStrong", desconecto por ser inecesario
        "rstt",
        "rsti2",
        "rstm",
        "nrt",
        "rstStrong_rv60",
        "opnz",
        
        "ukr_fil",
        "ukr_ogi",
        "ukr_hom",
        "ukr_gyz",
        "ukr_tur",
        "ukr_der",
        
        "rv60",
        "lbla"

        //"kjv",
        //"nkjv",
    ];

    var arrTransObj = [];
    //var arrTransObj = {};
    //let y = 0;

    for (let i = 0; i < arrTrans.length; i++) {
        const el = arrTrans[i];
        //console.log(i);
        //console.log(el);

        //saco ajustes de este modulo en json
        url_bq = `modules/text/${el}/bibleqt.json`;
        //console.log(url_bq);

        fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {
            arrTransObj[i] = bq;
            //console.log(arrTransObj);
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            console.log('makeTransObj. error promesa: '+error);
        });        
    }

    //return arrTrans;
    return arrTransObj;
}










function makeTskObj(){
    var arrTsk = [
        "tsk"
        //"tsk_gromov",
        //"tsk_otro",
    ];

    var arrTskObj = [];

    for (let i = 0; i < arrTsk.length; i++) {
        const el = arrTsk[i];
        //console.log(i);
        //console.log(el);

        //saco ajustes de este modulo en json
        url_bq = `modules/text/${el}/bibleqt.json`;
        //console.log(url_bq);

        fetch(url_bq)
        .then((response) => response.json())
        .then((bq) => {
            arrTskObj[i] = bq;
            //console.log(arrTskObj);
        })
        .catch(error => { 
            // Código a realizar cuando se rechaza la promesa
            console.log('makeTskObj. error promesa: '+error);
        });        
    }

    return arrTskObj;
}









//Modifico sólo los links si es para traducción rusa, ya que TSK viene con EnglishPlsalms = Y
//convertir links de Español a Ruso //antes checkLink()
function convertLinkFromEspToRus(book, chapter, verse, to_verse = null){
    //console.log('Convierto Psalmo 119:63 en Псалом 118:63 para menu u otras cosas.');

    var book = parseInt(book);
    var chapter = (chapter != null) ? parseInt(chapter) : null;
    var verse = parseInt(verse);
    var to_verse = parseInt(to_verse);

    //nuevos datos
    var bookNumber = book;
    var chapterNumber = chapter;
    var verseNumber = verse;
    var to_verseNumber = to_verse;

    //Miro la traducción con EnglishPsalms
    switch (book) {

        case 3: //Числа
                if(chapter == 12 && verse == 16){//Nm.12:16 => Чис.13:1
                    chapterNumber = 13;
                    verseNumber = 1;
                }
                if(chapter == 13){//Nm.13:1 => Чис.13:2 
                    verseNumber += 1;
                    to_verseNumber += 1;
                }
            break;

        case 5: //Иисус Навин
                if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1
                    //todo ok    
                }
                if(chapter == 6){//Иис.Нав.6:22 => Jos.6:21// ver en Gen 19:12
                    if(verse == 1){
                        chapterNumber = 5;
                        verseNumber = 16;
                    }else{
                        verseNumber -= 1;//para tsk es (verse - 1) //ok
                        to_verseNumber -= 1;
                    }
                }
            break; 
            
        case 8: //1Samuel (1Царств) 
                if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                    //todo ok     
                }
                if(chapter == 23 && verse == 29){//
                    chapterNumber = 24;
                    verseNumber = 1;
                }
                if(chapter == 24){//1Цар.24:1 => 1S.23:29
                    verseNumber += 1;
                    to_verseNumber += 1;
                }
            break; 
        
        case 17: //Job 
                if(chapter == 39){//39:31-35 => 40:1-5  | 40:6-24 =>	40: -5
                    //todo ok. 
                }
                if(chapter == 40){ 
                    if(verse >= 1 && verse <= 5){//Job.40:1-5 => 39:31-35
                        chapterNumber = 39;
                        verseNumber += 30;
                        to_verseNumber += 30;
                        if(to_verseNumber >= 35) to_verseNumber = 35;//ultimo verse de capitulo 39
                        //alert('Job '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                    }
                    if(verse >= 6 && verse <= 24){
                        chapterNumber = 40;
                        verseNumber -= 5;
                        to_verseNumber -= 5;
                        //alert('Job '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                    }  
                }
                if(chapter == 41){//40:1-26 => 41:9-34
                    if(verse >= 1 && verse <= 8){
                        chapterNumber = 40;
                        verseNumber += 19;
                        to_verseNumber += 19;                        
                        //alert('Job '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                    } 
                    if(verse >= 9 && verse <= 34){
                        chapterNumber = 41;
                        verseNumber -= 8;
                        to_verseNumber -= 8;
                        //alert('Job '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                    }
                }
            break; 

        case 18: //Psalmos 
                if(chapter >= 3 && chapter <= 9){//3:1 - 9:20 =>	Х : +1 *
                    verseNumber += 1;
                    to_verseNumber += 1;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                if(chapter == 10){//
                    chapterNumber = 9;
                    verseNumber += 21;
                    to_verseNumber += 21;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula Esp => Rus //Пс.X:1 => Ps.X+1:1 
                //+1 : Х
                if(
                    (chapter == 11) || 
                    (chapter >= 14 && chapter <= 17) || 
                    (chapter >= 23 && chapter <= 29) || 
                    (chapter >= 32 && chapter <= 33) || 
                    (chapter == 35) || 
                    (chapter == 37) || 
                    (chapter == 43) || 
                    (chapter == 50) || 
                    (chapter == 66) || 
                    (chapter >= 71 && chapter <= 74) || 
                    (chapter >= 78 && chapter <= 79) || 
                    (chapter == 82) || 
                    (chapter == 86) || 
                    (chapter == 87) || 
                    (chapter == 91) || 
                    (chapter >= 93 && chapter <= 101) || 
                    (chapter >= 103 && chapter <= 107) || 
                    (chapter >= 109 && chapter <= 114) || 
                    (chapter >= 117 && chapter <= 146)
                ){
                    chapterNumber -= 1;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula Esp => Rus //Ps.X:1 => Пс.X-1:2 
                //-1 : +1
                if(
                    (chapter == 12) || 
                    (chapter >= 18 && chapter <= 22) || 
                    (chapter >= 30 && chapter <= 31) || 
                    (chapter == 34) || 
                    (chapter == 36) || 
                    (chapter >= 38 && chapter <= 42) || 
                    (chapter >= 44 && chapter <= 49) || 
                    (chapter == 53) || 
                    (chapter >= 55 && chapter <= 59) || 
                    (chapter >= 61 && chapter <= 65) || 
                    (chapter >= 67 && chapter <= 70) || 
                    (chapter >= 75 && chapter <= 77) || 
                    (chapter >= 80 && chapter <= 81) || 
                    (chapter >= 83 && chapter <= 85) || 
                    (chapter >= 88 && chapter < 90) || 
                    (chapter == 92) || 
                    (chapter == 102) || 
                    (chapter == 108)
                ){
                    chapterNumber -= 1;
                    verseNumber += 1;
                    to_verseNumber += 1;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //2en1
                if(chapter == 13){//13:05 => 12:6-а | 13:06 => 12:6-б
                    chapterNumber -= 1;
                    verseNumber += 1;
                    to_verseNumber += 1;
                    if(verse == 6) verseNumber = 6;
                    if(to_verse == 6) to_verseNumber = 6;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //-1 : +2 *
                if(
                    (chapter >= 51 && chapter <= 52) ||
                    (chapter == 54) || 
                    (chapter == 60)
                ){
                    chapterNumber -= 1;
                    verseNumber += 2;
                    to_verseNumber += 2;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //2en1
                if(chapter == 90){//90:05 => 89:6-а | 90:06	=> 89:6-б 
                    chapterNumber -= 1;
                    if(verse <= 5){
                        verseNumber += 1;
                        to_verseNumber += 1;
                    }
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //-2: +8
                if(chapter == 115){//115:1-18 => 113: +8
                    chapterNumber -= 2;
                    verseNumber += 8;
                    to_verseNumber += 8;
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //-2: X
                if(chapter == 116){//116:1-9 => 114: Х
                    if(verse <= 9){
                        chapterNumber -= 2;
                    }
                    if(verse >= 10){
                        chapterNumber -= 1;
                        verseNumber -= 9;
                        to_verseNumber -= 9;
                    }
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                //Formula
                //-1: X (especial)
                if(chapter == 147){//147:1-11 => 146:1-11
                    if(verse <= 11){
                        chapterNumber -= 1;
                    }
                    if(verse >= 12){
                        verseNumber -= 11;
                        to_verseNumber -= 11;
                    }
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
            break;

        case 19: //Притчи
                if(chapter == 4){
                   // todo ok
                }
            break;
    
        case 21: //Cantares - Песня песней
                if(chapter == 1){
                    if(verse > 1){
                        verseNumber -= 1;
                        to_verseNumber -= 1;
                    }
                    //alert('Ps '+chapterNumber+':'+verseNumber+'-'+to_verseNumber);
                }
                if(chapter == 6){//06:13 =>	07:1
                    if(verse == 13){
                        chapterNumber = 7;
                        verseNumber = 1;
                        to_verseNumber = 1;
                    }
                }
                if(chapter == 7){//7:1-13 => 7: +1 (7:2-14)
                    verseNumber += 1;
                    to_verseNumber += 1;
                }
            break;

        case 22: //Isaías - Исаия
                if(chapter == 3){
                    if(verse >=20){
                        verseNumber -= 1;
                        to_verseNumber -= 1;
                    } 
                }
            break;

        case 26: //Daniel - Даниил
                if(chapter == 3){//3:1-30 => 3:1-30
                    //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                    //todo ok
                }
                if(chapter == 4){//4:1-3 => 3:31-33 | 4:4-37 => 4: -3
                    if(verse <= 3){
                        chapterNumber = 3;
                        verseNumber += 30;
                        to_verseNumber += 30;
                    } 
                    if(verse >= 4){
                        verseNumber -= 3;
                        to_verseNumber -= 3;
                    }
                }
            break;

        case 27: //Oseas - Осия
                if(chapter == 13){//13:16 => 14:1
                    if(verse == 16){
                        chapterNumber = 14;
                        verseNumber = 1;
                    } 
                }
                if(chapter == 14){//14:1-9 => 14:2-10
                    verseNumber += 1;
                    to_verseNumber += 1;
                }
            break;

        case 31: //Jonas - Иона
                if(chapter == 1){//1:17 => 2:1
                    if(verse == 17){
                        chapterNumber = 2;
                        verseNumber = 1;
                    } 
                }
                if(chapter == 2){//2:1-10 => 2:2-11
                    verseNumber += 1;
                    to_verseNumber += 1;
                }
            break;


        case 44: //Romanos - Римлянам
                //book = book + 7;// 44 + 7 = 51 //Romanos - Римлянам
                if(chapter == 16){// 16:25-27 => 14:24-26                                          
                    if(verse >= 25){
                        chapterNumber = 14;
                        verseNumber -= 1;
                        to_verseNumber -= 1;
                    }
                }
            break;

        case 46: //2Corintios - 2-Коринфянам
                //book = book + 7;// 46 + 7 = 53 //2Corintios - 2-Коринфянам
                if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                    if(verse >= 13){
                        verseNumber -= 1;
                        to_verseNumber -= 1;
                    } 
                }

        default:
            //console.log('default en switch');
            break;
    }//fin switch

    to_verseNumber = (isNaN(to_verseNumber)) ? null : to_verseNumber ;

    var result = [bookNumber, chapterNumber, verseNumber, to_verseNumber];

    return result;
}


function getStrongNumberVersion1(numberStr, lang = null, paramfirstLetter = null){
    
    let div_strong_head = document.querySelector('#strong_head');
    let div_strong_body = document.querySelector('#strong_body');
    var numberInt, numberStrShow, strongFile;

    //si numero strong es clecked desde findWords y viene rojo... 
    if(numberStr.includes('<b class="f_red">') || numberStr.includes('</b>')){
        numberStr = numberStr.replace('<b class="f_red">','');
        numberStr = numberStr.replace('</b>','');
    }

    if(window.innerWidth < pantallaTabletMinPx){//si es mobile
        openSidebar(document.querySelector('.btnMenu'));//simulo click sobre el boton hamburguesa        
    }
    
    //H7225 or G6225
    if(numberStr.includes('H') || numberStr.includes('G')){
        let firstLetter = numberStr.substr(0,1);
        //console.log('firstLetter: '+firstLetter);       
        numberInt = parseInt(numberStr.substr(1));
        numberStrShow = numberStr;
        strongFile = (firstLetter == 'G') ? 'greek.htm' : 'hebrew.htm' ;
    }else{//00776 
        numberInt = parseInt(numberStr); 
        if(lang == 'Grk'){
            numberStrShow = 'G'+numberInt;
            strongFile = 'greek.htm';
        }else{
            numberStrShow = 'H'+numberInt;
            strongFile = 'hebrew.htm';
        }
    }
    //console.log('numberInt: '+numberInt);
    //console.log('numberStrShow: '+numberStrShow);
    //console.log('strongFile: '+strongFile);  


    fetch(`modules/text/strongs/${strongFile}`)
    .then((response) => response.text())
    .then((strong) => {
        //console.log(strong);

        let arr_strong = strong.split('<h4>')[numberInt + 1].split('</h4>');//una linea 
        let strongIndex = arr_strong[0];
        let strongText = arr_strong[1];

        //console.log('strongIndex: '+strongIndex);
        //console.log('strongText: '+strongText);

        //strong_head.innerHTML = strongIndex;
        //strong_body.innerHTML = strongText;

        //div_strong_head.innerHTML = '';//reset datos
        div_strong_body.innerHTML = '';//reset datos

        showTab(document.querySelector('#btn_strong'),'strong');  
        
        const span_hist_strong = document.createElement('span');
        span_hist_strong.className = 'hist_strong';
        //span_hist_strong.setAttribute('onclick',"getStrongNumber('"+strongIndex+"')");
        span_hist_strong.setAttribute('onclick',"getStrongNumber('"+numberStrShow+"')");
        //span_hist_strong.innerHTML = strongIndex;
        span_hist_strong.innerHTML = numberStrShow;
        
        let hist_strong_all = document.querySelectorAll('.hist_strong');
        let ult_hist_strong = hist_strong_all[0];
        if(typeof ult_hist_strong == 'undefined' && hist_strong_all.length == 0){//vacio y 1-er element
            div_strong_head.prepend(span_hist_strong);
            //console.log('1 strongIndex');
        }else if(ult_hist_strong.innerHTML != numberStrShow){
            div_strong_head.prepend(span_hist_strong);
            //console.log('2 y mas strongIndex ...');
        }else{
            //console.log('no hago nada...');
        }

        const span_num_strong = document.createElement('span');
        span_num_strong.className = 'num_strong';
        span_num_strong.innerHTML = numberStrShow+' <span class="f_r">'+strongIndex+'</span>';

        let arr_w = strongText.split(' ');
        let arr_new = [];

        arr_w = arr_w.filter(elm => elm);

        arr_w.forEach((el,i,arr)=>{   
            if(parseInt(el)){
                if(typeof arr[i+2] !== 'undefined' && arr[i+2].includes('BQTHeb')){
                    el = '<span class="sp_strong Heb">'+el+'</span>';
                }else if(typeof arr[i+2] !== 'undefined' && arr[i+2].includes('BQTGrk')){
                    el = '<span class="sp_strong Grk">'+el+'</span>';
                }else{
                    el = '<span class="sp_strong noLink">'+el+'</span>';
                }
            }
            //console.log(el);
            arr_new.push(el);
        });
        var new_strongText = arr_new.join(' ');

        const span_text_strong = document.createElement('span');
        span_text_strong.className = 'text_strong';
        span_text_strong.innerHTML = new_strongText;            

        const p_v = document.createElement('p');//найти стихи с этим номером
        p_v.className = 'p_v';
        p_v.innerHTML = `Найти стихи с этим номером.`;
        p_v.onclick = function(){

            showTab(btn_find,'find');
            
            if(paramfirstLetter != null && paramfirstLetter == 'Y'){
                inpt_find.value = numberStrShow;
                cbox1.checked = false;
                cbox2.checked = false;
                cbox3.checked = false;
                cbox4.checked = false;
                cbox5.checked = false;
                cbox6.checked = false;
                cbox7.checked = true;//si hace falta
                findWords(numberStrShow);//rstStrongRed - ok
            }else{
                inpt_find.value = numberStr;
                if(numberStr.includes('H') || numberStr.includes('G')){//rstStrongRed
                    cbox1.checked = false;
                    cbox2.checked = false;
                    cbox3.checked = false;
                    cbox4.checked = false;
                    cbox5.checked = false;
                    cbox6.checked = false;
                    cbox7.checked = true;//si hace falta
                    findWords(numberStr);
                }else{//rstStrong (старый)
                    cbox1.checked = false;
                    cbox2.checked = false;
                    cbox3.checked = false;
                    cbox4.checked = true;//si hace falta
                    cbox5.checked = false;
                    cbox6.checked = false;    
                    cbox7.checked = false;//si hace falta
                    findWords(numberStr);//rstStrong
                }
            }
            //findWords(strongIndex);//rstStrong - ok
            //findWords(numberStr);
        }
        div_strong_body.append(p_v);

        const p = document.createElement('p');
        p.append(span_num_strong);
        p.append(span_text_strong);

        div_strong_body.append(p);

        //Listener para Strong Heb
        if(typeof new_strongText !== 'undefined' && new_strongText.includes('sp_strong Heb')){
            document.querySelectorAll('.sp_strong.Heb').forEach(el=>{ 
                el.addEventListener('click', function(){ 
                    getStrongNumber(el.innerHTML, 'Heb');
                });    
            });
        }
        //Listener para Strong Grk
        if(typeof new_strongText !== 'undefined' && new_strongText.includes('sp_strong Grk')){
            document.querySelectorAll('.sp_strong.Grk').forEach(el=>{ 
                el.addEventListener('click', function(){ 
                    getStrongNumber(el.innerHTML, 'Grk');
                });    
            });
        }
        mySizeStrong();//altura de div_strong_body despues de meter div_strong_head
    })
    .catch(error => { 
        // Código a realizar cuando se rechaza la promesa
        //console.log('error promesa strong: '+error);
    });
}

//general
function getStrongNumber(numberStr, lang = null, paramfirstLetter = null){
    numberStr = numberStr.toUpperCase();

    //getStrongNumberVersion1(numberStr, lang, paramfirstLetter);//old
    getStrongNumberVersion2(numberStr, lang, paramfirstLetter);//new

}


function cboxChange(e){
    //console.log('=== function cboxChange() ===');
    //console.log('e.id: '+e.id);
    
    //var cbox1 = document.querySelector('#cbox1');//1. Искомое содержит хотя бы одно слово
    //var cbox2 = document.querySelector('#cbox2');//2. Cлова идут в заданном порядке
    //var cbox3 = document.querySelector('#cbox3');//3. Искать точную фразу
    //var cbox4 = document.querySelector('#cbox4');//4. Выражения не могут быть частями слов
    //var cbox5 = document.querySelector('#cbox5');//5. Различать прописные и заглавные буквы
    //var cbox6 = document.querySelector('#cbox6');//6. Различать буквы с ударениями (если есть)
    //var cbox7 = document.querySelector('#cbox7');//7. Искать только номер Стронга (если есть) *

    if(e.id == 'cbox1'){
        if(cbox1.checked){
            cbox2.checked = false;
            cbox3.checked = false;
        }
    }
    if(e.id == 'cbox2'){
        if(cbox2.checked){
            cbox1.checked = false;
            cbox3.checked = false;
        }
    }
    if(e.id == 'cbox3'){
        if(cbox3.checked){
            cbox1.checked = false;
            cbox2.checked = false;
            cbox4.checked = false;
            cbox5.checked = false;
        }
    }
    if(e.id == 'cbox4'){
        if(cbox3.checked){
            cbox3.checked = false;
        }
    }
    if(e.id == 'cbox7'){        
        if(cbox7.checked){
            cbox1.checked = false;
            cbox2.checked = false;
            cbox3.checked = false;
            cbox4.checked = false;
            cbox5.checked = false;
            cbox6.checked = false;
        }
    }
}

function stopFindWords(){
    document.querySelector('#btn_ok_stop').classList.remove('d-block');
    document.querySelector('#btn_ok_stop').classList.add('d-none');

    document.querySelector('#btn_ok_find').classList.remove('d-none');
    document.querySelector('#btn_ok_find').classList.add('d-block');

    window.doFind = false;
    //console.log('--- window.stopFind ---: '+window.doFind);
  
}

function guardWordsFind(words){
    //console.log('=== guardWordsFind(words) ===');
    //console.log('words: '+words);
    var inpt_find = document.querySelector('#inpt_find');

    const p = document.createElement('p');
    p.className = 'pf';
    p.innerHTML = inpt_find.value.trim();

    if(document.querySelectorAll('.pf').length == 0 || words != document.querySelectorAll('.pf')[0].innerText){
        //console.log('distinto');
        let formData = new FormData();
        formData.append('words', words);
    
        fetch('app/guardWordsFind.php',{
            method: 'POST',
            body: formData                            
        })
        .then(response => response.text())//aki .text()
        .then(data => {
            //console.log(data);
            if(data){
                //getGuardWordsFind();
            }
        })
        .catch(error => console.log('error de guard: '+ error));    
    }
}

//getGuardWordsFind();//al cargar la web para mostrar

function getGuardWordsFind(){
    var inpt_find = document.querySelector('#inpt_find');
    var wr_hist_find = document.querySelector('.wr_hist_find');

    fetch('app/guardWordsFind_file.json')
    .then(response => response.json())
    .then(data=>{
        //console.log(data);
        wr_hist_find.innerHTML = '';
        if(data != ''){           
            data.forEach((el,i)=>{
                if(i == 0){
                    inpt_find.value = el.words;
                }
                
                const p = document.createElement('p');
                p.className = 'pf';
                p.title = el.fecha;
                p.onclick = function(){
                    inpt_find.value = el.words;
                    close_hist_find();
                };
                p.innerHTML = el.words;
                wr_hist_find.append(p);
            });
        }
    });  
}


function findWords(words_input){
    //console.log('function findWords(). words_input: '+words_input);
    let btn_ok_find = document.querySelector('#btn_ok_find');
    btn_ok_find.classList.remove('d-block');
    btn_ok_find.classList.add('d-none');
    let btn_ok_stop = document.querySelector('#btn_ok_stop');
    btn_ok_stop.classList.remove('d-none');
    btn_ok_stop.classList.add('d-block');
    window.doFind = true;

    //var gde = document.querySelector('#gde');//select donde buscar
    //var cbox1 = document.querySelector('#cbox1');//искомое содержит хотя бы одно слово ('Иисус Христос' или Иисус или Христос)
    //var cbox2 = document.querySelector('#cbox2');//cлова идут в заданном порядке
    //var cbox3 = document.querySelector('#cbox3');//искать точную фразу
    //var cbox4 = document.querySelector('#cbox4');//выражения не могут быть частями слов
    //var cbox5 = document.querySelector('#cbox5');//различать прописные и Заглавные буквы
    //var cbox6 = document.querySelector('#cbox6');//6. различать буквы с ударениями (если есть)
    //var cbox7 = document.querySelector('#cbox7');//7. Номер Стронга (если есть)

    //console.log('cbox1.checked: '+cbox1.checked);
    //console.log('cbox2.checked: '+cbox2.checked);
    //console.log('cbox3.checked: '+cbox3.checked);
    //console.log('cbox4.checked: '+cbox4.checked);
    //console.log('cbox5.checked: '+cbox5.checked);
    //console.log('cbox6.checked: '+cbox6.checked);
    //console.log('cbox7.checked: '+cbox7.checked);

    //var limit = document.querySelector('#limit').value;
    let limit_val = (limit.value != '*') ? parseInt(limit.value) : '*' ;
    var book_start = null;
    var book_end = null;
    var book_one = null;

    switch (gde.value) {
        case 'TB'://ВСЯ БИБЛИЯ
            book_start = 0;
            book_end = (document.querySelectorAll('#v_book .v_li').length == 77) ? 76 : 65;
            break;
    
        case 'AT'://ВЕТХИЙ ЗАВЕТ
            book_start = 0;
            book_end = 38;
            break;
    
        case 'NT'://НОВЫЙ ЗАВЕТ
            book_start = 39;
            var book_end = 65;
            break;
    
        case 'M'://Пятикнижье
            book_start = 0;
            book_end = 4;
            break;
    
        case 'Hist'://Исторические книги
            book_start = 5;
            book_end = 16;
            break;

        case 'Poet'://Поэтические книги
            book_start = 17;
            book_end = 21;
            break;

        case 'Prof'://Пророки
            book_start = 22;
            book_end = 38;
            break;

        case 'EvActs'://Евангелия и Деяния
            book_start = 39;
            book_end = 43;
            break;
    
        case 'EpPablo'://Послания Павла
            book_start = 44;
            book_end = 57;
            break;

        case 'EpSoborn'://Соборные Послания
            book_start = 58;
            book_end = 65;
            break;

        case 'EpApoc'://Послания и Откровение
            book_start = 44;
            book_end = 65;
            break;
    
        case 'Apocrif'://Неканонические книги
            book_start = 66;
            book_end = 76;
            break;
    
        default: book_one = parseInt(gde.value);
            break;
    }
    //console.log('book_start: '+book_start);
    //console.log('book_end: '+book_end);
    //console.log('book_one: '+book_one);
    if(book_one != null){
        book_start = book_one;
        book_end = book_one;
    }

    var div_find_head = document.querySelector('#find_head'); 
    var div_find_result = document.querySelector('#find_result'); 
    var div_find_body = document.querySelector('#find_body');
    div_find_result.innerHTML = '';//reset
    div_find_body.innerHTML = '';//reset
    window.res_show = '';//reset
     
    words_input = words_input.trim();
    if(words_input == ''){
        const p = document.createElement('p');
        p.className = 'prim';
        p.innerHTML = 'Введите слово или словосочетание для поиска, пожалуйста.'
        div_find_body.append(p);
        return false;
    }
    //meto words en el history
    //guardWordsFind(words_input);
    close_hist_find();

    var words = words_input;
    var arr_words = words.split(' ');
    //console.log('abajo arr_words: ');
    //console.log(arr_words);
    arr_words = arr_words.filter(elm => elm);
    //console.log(arr_words);


    //TIPOS DE BÚSQUEDA   
    //0. - por defecto. nada marcado //ok
    //1. искомое содержит хотя бы одно слово //ok
    //Пример: найти не только стихи, содержащие 'Иисус Христос', но и те, которые содержат 'Иисус' или 'Христос'.
    //Слова: 'Иисус Христос' или 'Иисус' или 'Христос' //ok
    //2. cлова идут в заданном порядке //ok
    //Пример: найти стихи, где встречается 'Иисус Христос', но не 'Христос Иисус'.
    //3. искать точную фразу. //ok
    //Пример: найти стихи, где есть 'Благословен Бог', но не 'Благословен ГОСПОДЬ Бог'.
    //Слова: 'Иисус Христос' но не 'Иисус МЕССИЯ Христос') //ok
    //4. выражения не могут быть частями слов
    //Пример: найти стихи, где есть 'благословен', но не 'благословенИЕ'.
    var no_part_word = (cbox4.checked) ? 'Y' : 'N' ;  
    //5. различать прописные и ЗАГЛАВНЫЕ буквы //ok
    //Пример: различать при поиске слова 'БОГ' и 'бог'.
    var case_sens = (cbox5.checked) ? '' : 'i' ;// '' = case sensitive. Различаются маленькие и БОЛЬШИЕ буквы; 'i' = case insensitive. Все равно какие буквы.
    //6. различать буквы с ударениями (если есть)
    //Пример: различать при поиске слова 'creó' (сотворил) и 'creo' (верю).
    var accent_match = (cbox6.checked) ? 'Y' : 'N' ;// 'Y' = en la búsqueda tener en cuenta tildes si hay; 'N' = da igual tildes;
    //7. Номер Стронга StrongNumber
    if(cbox7.checked){
        var search_only_in_text_without_StrongTags = false;//buscar también en los numeros de Strong
    }else{//por defecto se busca solo en el texto sin buscar en los tags
        //buscar solo en text o tambien en los tags de strong
        var search_only_in_text_without_StrongTags = true;//quitar los StrongTags con el número inclusive para buscar solo en texto
    }

    var tipo = 'gm' + case_sens ;//i => Case insensitive (da igual miníscula o mayúscula); g => global (se buscan todas coincidencias exactas); '' => solo primera coincidencia; m => en diferentes líneas

    //var inpt_nav = document.querySelector('#inpt_nav');

    let Translation = (inpt_nav.dataset.trans != '') ? inpt_nav.dataset.trans : div_trans1.getAttribute('data-trans');
    //var btnStrong = document.querySelector('#btnStrong');
    var btnStrongIsActive = false;
    if(btnStrong.classList.contains('btn_active')){
        btnStrongIsActive = true;
    }

    //añado el texto de búsqueda en el historial
    addWordsToHistFind(Translation, words_input);


    //Antes de buscar, muestro esto...
    if(document.querySelector('.res_f') == null){
        const f_book = document.createElement('p');
        f_book.className = 'f_book';
        // f_book.innerHTML = `<span class="trans_name"></span> <span class="book_name"></span>`;//antes=
        f_book.innerHTML = `<span class="book_name"></span>`;
        div_find_head.append(f_book);

        const p_i = document.createElement('p');
        p_i.className = 'res_f';
        //p_i.innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span title="Стихов">(.)</span> <span class="res_m f_r" title="Совпадений">[.]</span>`;
        p_i.innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span>(.)</span><span class="tooltip" data-tooltip="Количество стихов: <span class='f_r'>0</span> <br>Количество совпадений: 0" onmouseenter="showTooltip(this)" mouseleave="hideTooltip(this)">*</span> <span class="res_m f_r">[.]</span>`;
        div_find_head.append(p_i);
    }

    let trans_find_obj = arrFavTransObj.find(v => v.Translation === Translation);
    if(cbox7.checked && 
        btnStrong.classList.contains('btn_active') && 
        typeof trans_find_obj.StrongNumbers !== 'undefined' && 
        trans_find_obj.StrongNumbers == 'Y' &&
        trans_find_obj.StrongNumberTagStart == '<S>' &&
        trans_find_obj.StrongNumberTagEnd == '</S>' 
        ){
        const wr_strong_btns = document.createElement('div');
        wr_strong_btns.className = 'wr_strong_btns';
        wr_strong_btns.style.display = 'none';//no lo muestro porque todavía no hay resultado
        wr_strong_btns.innerHTML = `<span class="wr_strong_btns_inner">
                                        <button id="btn_finded_s" class="btn s_active" onclick="showOnlyStrongNumberFinded_2Actions()">Finded S#</button>
                                        <button id="btn_all_s" class="btn" onclick="showAllStrongNumber_2Actions()">All S#</button>
                                    </span>
                                    `;
        div_find_head.append(wr_strong_btns);
    }else{
        //si están botones finded_s y all_s en la trans sin strong lo quito
        if(document.querySelector('.wr_strong_btns') != null){
            document.querySelector('.wr_strong_btns').remove();
        }
    }
    mySizeFind();//altura de div_find_body

    //Muestro loader tres puntos (...)
    const d_loader = document.createElement('div');
    d_loader.className = 'loader';
    d_loader.innerHTML = `<span class="loader__element"></span>
                          <span class="loader__element"></span>
                          <span class="loader__element"></span>`;
    div_find_body.append(d_loader);


    var result_finded = [];
    var result_show = [];
    var count_f = 0;//cantidad de versiculos con frases encontradas
    var arr_result_m_total = [];//tottal array de ocurrencias (matches) en el versículo encontradas
    var arr_result_m = [];//array de ocurrencias (matches) en el versículo encontradas
    var count_m_total = 0;//total cantidad de ocurrencias (matches) en el versículo encontradas
    var count_m = 0;//cantidad de ocurrencias (matches) en el versículo encontradas

    //Si existe traducción...
    if(Translation != null){
        
        var objTrans = arrFavTransObj.find(v => v.Translation === Translation);

        //MODO NEW. Cuando  ya está creado el objeto 'objTrans' desde 'arrFavTransObj'
        if(typeof objTrans != 'undefined' && objTrans != null && objTrans != ''){
            //console.log('findWords() --- objTrans está creado. abajo objTrans: ');
            //console.log(objTrans);            
            
            //saco ajustes de este modulo en json               
            var bq = objTrans;
            //console.log(' abajo bq:');
            //console.log(bq);

            //muestro trans en result de busqueda
            //document.querySelector(".f_book .trans_name").innerHTML = bq.BibleShortName;//antes
            document.querySelector(".title_par .trans_name").innerHTML = bq.BibleShortName;
        
            if(book_start != null && book_end != null){
    
                for(let index = book_start; index <= book_end; index++){                
                    
                    //console.log('--- for --- index: '+index);
                    let book = index;//genesis

                    //si no existe objeto lo creo
                    if(typeof obj_bible_files[Translation] == 'undefined'){
                        obj_bible_files[Translation] = {};
                        obj_bible_files[Translation].Books = [];
                    }

                    //si existe objeto con Translation. Saco datos del objeto
                    if(typeof obj_bible_files[Translation] != 'undefined'){
                        if(typeof obj_bible_files[Translation].Books != 'undefined'){
                            if(typeof obj_bible_files[Translation].Books[book] != 'undefined'){

                                if(obj_bible_files[Translation].Books[book].fileName == bq.Books[book].PathName && obj_bible_files[Translation].Books[book].fileContent != ''){

                                    console.log(' --- SI EXISTE objeto obj_bible_files con Translation');
                                    console.log(`--- --- starting from myPromise --- Translation: ${Translation} `);
                                    
                                    // Registra el tiempo de inicio
                                    const tiempoInicio = new Date().getTime();
                                    //console.log('obj_bible_files --- tiempoInicio: '+tiempoInicio);

                                    var myPromise_find = new Promise(function(resolve, reject){
                                        resolve('ok');
                                    });

                                    myPromise_find
                                    .then((data) => {//data = ok
                                        //console.log(' --- if: ');

                                        if(data == 'ok'){
                                            var bookModule = obj_bible_files[Translation].Books[book].fileContent;
                                        }

                                        if(window.doFind){
                                            //console.log(index+') hago doFind. window.doFind: '+window.doFind);
                                            //console.log('Bible book: '+bq.Books[book].FullName);
                        
                                            //console.log(bookModule);
                                            //показываю в каких книгах ищу
                                            document.querySelector(".f_book .book_name").innerHTML = bq.Books[book].FullName;
                    
                                            var nb = bookModule.split('<h4>');//делю файл на главы
                                            //console.log(nb);
                                            
                                            nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                            //console.log(nb);
                    
                                            var arr_chapters = nb;
                                            //arr_chapters.shift();//elimino index0 ('<h2></h2>\n')
                    
                                            arr_chapters.forEach( (el_ch, i_ch) => {
                                                //console.log(el_ch);
                                                let chapter = i_ch;
                                                let ChapterId = i_ch;
                                                
                                                if(el_ch.includes('<p>')){
                                                    var arr_verses = el_ch.split('<p>');
                                                    //console.log(arr_verses);
                                                    
                                                    //Recorrer todos los verses
                                                    arr_verses.forEach((el,i) => {
                    
                                                        if(el.includes('</p>')){
                                                            var arr_p_text = el.split('</p>');
                                                            var p_Text = arr_p_text[0];
                                                        }else{
                                                            var p_Text = el;
                                                        }
                                                        //console.log('p_Text: '+p_Text); 
                    
                                                        var arr_p = p_Text.split(' ');
                                                        var VerseId = arr_p[0];
                                                        //console.log('VerseId: '+VerseId);
                    
                                                        var VerseText = '';
                                                        for(let index = 1; index < arr_p.length; index++){
                                                            VerseText += arr_p[index] + ' ';
                                                            //console.log('arr_p['+index+']: '+arr_p[index]);
                                                        }
                                                        //console.log('VerseText: '+VerseText);
                                                        
                                                        if(VerseText != ''){
                                                            //VerseText = removeTags(VerseText);//solo quita los tag's pero deja el contenido de tags pares. de '<S>H430</S>' => 'H430' 
                                                            //console.log('sin tags --- VerseText: '+VerseText);
            
                                                            if(search_only_in_text_without_StrongTags){
                                                                if(bq.StrongNumberTags == 'Y' && bq.StrongNumberTagStart != '' && bq.StrongNumberTagEnd != ''){
                                                                    VerseText = removeTagsWithStrongNumber(VerseText, bq.StrongNumberTagStart, bq.StrongNumberTagEnd);
                                                                }
                                                            }
                                                        }
                                
                    
                                                        //Si hay palabras para buscar...
                                                        if(arr_words.length > 0){
                                                            
                                                            //tipos de busqueda
                                                            var is_match = false;
                    
                    
                                                            //=======================================================================//  
                                                            //0. por defecto - nada marcado //ok
                                                            //=======================================================================//  
                                                            if(!cbox1.checked && !cbox2.checked && !cbox3.checked && !cbox7.checked){
                                                                let arr_matches = [];  
                                                                //1. проверяю есть ли каждое слово из фразы в стихе                                      
                                                                arr_words.forEach(w => {
                                                                    if(accent_match == 'Y'){//cbox6
                                                                        if(no_part_word == 'Y'){//cbox4
                                                                            var arr_no_part_word = [];
                                                                            w = "^" +w +"$";//entera palabra del array, no parte
                                                                            var regex_w = RegExp(w, tipo);
                                                                            VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                                if(removeSymbols(el).match(regex_w)){
                                                                                    //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                                    arr_no_part_word.push(1);
                                                                                }else{
                                                                                    //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                                    arr_no_part_word.push(0);
                                                                                } 
                                                                            });
                                                                            if(arr_no_part_word.includes(1)){
                                                                                arr_matches.push(1);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }else if(no_part_word == 'N'){
                                                                            var regex_w = RegExp(w, tipo);
                                                                            arr_result_m = VerseText.match(regex_w);
                                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                            if(count_m > 0){
                                                                                arr_matches.push(1);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }
                                                                    }else if(accent_match == 'N'){
                                                                        if(no_part_word == 'Y'){
                                                                            var arr_no_part_word = [];
                                                                            w = "^" +w +"$";//entera palabra del array, no parte
                                                                            var regex_w = RegExp(removeAccents(w), tipo);
                                                                            removeAccents(VerseText).split(' ').filter(elm=>elm).forEach(el=> {
                                                                                if(removeSymbols(el).match(regex_w)){
                                                                                    //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                                    arr_no_part_word.push(1);
                                                                                }else{
                                                                                    //console.log('--- removeSymbols(el) ('+removeSymbols(el)+') NO match regex_w: '+false);
                                                                                    arr_no_part_word.push(0);
                                                                                } 
                                                                            });
                                                                            if(arr_no_part_word.includes(1)){
                                                                                arr_matches.push(1);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }else if(no_part_word == 'N'){
                                                                            var regex_w = RegExp(removeAccents(w), tipo); 
                                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                            if(count_m > 0){
                                                                                arr_matches.push(1);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }
                                                                    }
                                                                });
                                                                //console.log('Word. w: ', w);
                                                                //console.log('VerseText: ', VerseText);
                                                                if(!arr_matches.includes(0)){//когда все слова из фразы есть в стихе
                                                                    //2. в цикле отмечаю красным все совпадения, но уже не нужно arr_matches.push()
                                                                    arr_words.forEach(w => {
                                                                        if(accent_match == 'Y'){//cbox6
                                                                            if(no_part_word == 'Y'){//cbox4
                                                                                var arr_VerseText_red = [];
                                                                                var regex_w = RegExp(w, tipo);                                                       
                                                                                VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                                    if(removeSymbols(el).match(regex_w)){
                                                                                        //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                                        el = el.replace(regex_w, function (x) {
                                                                                            return '<b class="f_red">' + x + '</b>';
                                                                                        });
                                                                                        arr_VerseText_red.push(el);
                                                                                    }else{
                                                                                        //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                                        arr_VerseText_red.push(el);
                                                                                    } 
                                                                                });
                                                                                VerseText = arr_VerseText_red.join(' ');
                                                                                //console.log('VerseText: ', VerseText);
                                                                            }else if(no_part_word == 'N'){
                                                                                var regex_w = RegExp(w, tipo);
                                                                                arr_result_m = VerseText.match(regex_w);
                                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                                if(count_m > 0){
                                                                                    VerseText = VerseText.replace(regex_w, function (x) {
                                                                                        return '<b class="f_red">' + x + '</b>';
                                                                                    });
                                                                                }
                                                                            }
                                                                        }else if(accent_match == 'N'){
                                                                            var regex_w = RegExp(removeAccents(w), tipo); 
                                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                            if(count_m > 0){
                                                                                var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                                    return '{' + x + '}';
                                                                                });
                                                                                var text_original = VerseText;
                                                                                var text_marcas = prepararTextMarcas(text_marcas);
                                                                                VerseText = markRed(text_original, text_marcas);
                                                                            }
                                                                        }
                                                                    });
                                                                    is_match = true;
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                    //console.log('count_m_total: ', count_m_total);
                                                                    //console.log('arr_result_m_total: ', arr_result_m_total);
                                                                    //console.log('VerseText: ', VerseText);
                    
                                                                }else{
                                                                    is_match = false;
                                                                }
                                                            }
                                                            //=======================================================================//  
                                                            //end //0. por defecto - nada marcado //ok                                 
                                                            //=======================================================================//                                    
                                                            
                    
                                                            //=======================================================================//                                    
                                                            //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                            //=======================================================================//
                                                            if(cbox1.checked){
                                                                let arr_matches = [];
                                                                if(no_part_word == 'Y'){
                                                                    arr_words.forEach(w => {
                                                                        if(no_part_word == 'Y'){
                                                                            // w = "\\b" +w +"\\b";//palabras enteras// exacta coincidencia
                                                                            w = "\\B" +w +"\\B";//marcar si 'w' está rodeada por otras letras dentro de 'aawaa'.//true
                                                                        }
                                                                        if(accent_match == 'Y'){
                                                                            var regex_w = RegExp(w, tipo); 
                                                                            arr_result_m = VerseText.match(regex_w);
                                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                            if(count_m > 0){
                                                                                arr_matches.push(1);
                                                                                VerseText = VerseText.replace(regex_w, function (x) {
                                                                                    return '<b class="f_red">' + x + '</b>';
                                                                                });
                                                                                count_m_total += count_m;
                                                                                arr_result_m_total.push(arr_result_m);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }else if(accent_match == 'N'){
                                                                            var regex_w = RegExp(removeAccents(w), tipo); 
                                                                            arr_result_m = removeAccents(VerseText).match(regex_w);;
                                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                            if(count_m > 0){
                                                                                arr_matches.push(1);
                                                                                var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                                    return '{' + x + '}';
                                                                                });
                                                                                var text_original = VerseText;
                                                                                var text_marcas = prepararTextMarcas(text_marcas);
                                                                                VerseText = markRed(text_original, text_marcas);
                                                                                count_m_total += count_m;
                                                                                arr_result_m_total.push(arr_result_m);
                                                                            }else{
                                                                                arr_matches.push(0);
                                                                            }
                                                                        }
                                                                    });
                                                                    if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                                        is_match = true;
                                                                    }else{
                                                                        is_match = false;
                                                                    }
                                                                }else if(no_part_word == 'N'){
                                                                    if(accent_match == 'Y'){
                                                                        words = arr_words.join('|');
                                                                        var regex1 = RegExp(words, tipo);//buscar todo
                                                                        arr_result_m = VerseText.match(regex1);
                                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                        if(count_m > 0){
                                                                            is_match = true;
                                                                            count_m_total += count_m;
                                                                            arr_result_m_total.push(arr_result_m);
                                                                            VerseText = VerseText.replace(regex1, function (x) {
                                                                                return '<b class="f_red">' + x + '</b>';
                                                                            });
                                                                        }else{
                                                                            is_match = false;
                                                                        } 
                                                                    }else if(accent_match == 'N'){
                                                                        words = arr_words.join('|');
                                                                        var regex_w = RegExp(removeAccents(words), tipo); 
                                                                        arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                        if(count_m > 0){
                                                                            arr_matches.push(1);
                                                                            var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                                return '{' + x + '}';
                                                                            });
                                                                            var text_original = VerseText;
                                                                            text_marcas = prepararTextMarcas(text_marcas);
                                                                            VerseText = markRed(text_original, text_marcas);
                                                                            //console.log('VerseText: '+VerseText);
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                        if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                                            is_match = true;
                                                                            count_m_total += count_m;
                                                                            arr_result_m_total.push(arr_result_m);
                                                                        }else{
                                                                            is_match = false;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            //=======================================================================//
                                                            //end //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                            //=======================================================================//
                    
                    
                                                            //=======================================================================//
                                                            //2. - //cлова идут в заданном порядке //ok
                                                            //=======================================================================//
                                                            if(cbox2.checked){
                                                                //console.log('//tipo búsqueda --- //2. - //cлова идут в заданном порядке');
                                                                let arr_matches = [];
                                                                let arr_matches_w = [];//matches en words
                                                                let arr_regex_w = [];
                                                                let arr_regex_w_l = [];//для сравнения
                                                                arr_words.forEach( (w,i,arr_w) => {
                                                                    if(accent_match == 'Y'){
                                                                        var regex_w = RegExp(w, tipo);
                                                                        arr_regex_w.push(regex_w);
                                                                        var regex_w_l = (typeof w != 'undefined') ? RegExp(w.toLowerCase(), tipo) : RegExp(w, tipo);//для сравнения
                                                                        arr_regex_w_l.push(regex_w_l);
                                                                        arr_result_m = VerseText.match(regex_w);
                                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                        if(count_m > 0){
                                                                            //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                            if(typeof arr_w[i+1] != 'undefined'){
                                                                                if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                                    var index_first_w = VerseText.indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                                    var index_next_w = VerseText.indexOf(arr_w[i+1], index_first_w);
                                                                                    if(index_first_w < index_next_w){
                                                                                        //console.log('VerseText: '+VerseText);
                                                                                        //console.log('caso2a. index_first_w: '+index_first_w);
                                                                                        //console.log('caso2a. index_next_w: '+index_next_w);
                                                                                        let arr_VerseText_a = VerseText.split(' ');
                                                                                        let arr_VerseText_a_ed = [];
                                                                                        for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                            let el_a = arr_VerseText_a[a];
                                                                                            if(no_part_word == 'Y'){
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                                var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                            }else{//no_part_word == 'N'
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                                var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                            }
                                                                                            //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                            if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                                el_a = el_a.replace(regex_aw, function (x) {
                                                                                                    return '<b class="f_red">' + x + '</b>';
                                                                                                });
                                                                                                sovpad++;
                                                                                                arr_matches_w.push(1);
                                                                                                count_m_total += 1;
                                                                                                arr_result_m_total.push(arr_result_m);
                                                                                            }
                                                                                            if(sovpad == arr_words.length){
                                                                                                sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                            }
                                                                                            arr_VerseText_a_ed.push(el_a); 
                                                                                        }
                                                                                        VerseText = arr_VerseText_a_ed.join(' ');
                                                                                        //console.log(VerseText);
                                                                                    }else{
                                                                                        arr_matches.push(0);
                                                                                    }
                                                                                }else if(case_sens == 'i'){//все равно какие буквы
                                                                                    //превращаю в мал. буквы только для сравнения.
                                                                                    var index_first_w = VerseText.toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                                    var index_next_w = VerseText.toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                                    if(index_first_w < index_next_w){
                                                                                        //console.log('VerseText: '+VerseText);
                                                                                        //console.log('VerseText.toLowerCase(): '+VerseText.toLowerCase());
                                                                                        //console.log('caso2b. index_first_w: '+index_first_w);
                                                                                        //console.log('caso2b. index_next_w: '+index_next_w);
                                                                                        let arr_VerseText_a = VerseText.split(' ');
                                                                                        let arr_VerseText_a_ed = [];
                                                                                        for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                            let el_a = arr_VerseText_a[a];
                                                                                            if(no_part_word == 'Y'){
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                                var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                            }else{//no_part_word == 'N'
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                                var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                            }
                                                                                            //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                            if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                                el_a = el_a.replace(regex_aw, function (x) {
                                                                                                    return '<b class="f_red">' + x + '</b>';
                                                                                                });
                                                                                                sovpad++;
                                                                                                arr_matches_w.push(1);
                                                                                                count_m_total += 1;
                                                                                                arr_result_m_total.push(arr_result_m);
                                                                                            }
                                                                                            if(sovpad == arr_words.length){
                                                                                                sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                            }
                                                                                            arr_VerseText_a_ed.push(el_a); 
                                                                                        }
                                                                                        VerseText = arr_VerseText_a_ed.join(' ');
                                                                                        //console.log(VerseText);
                                                                                    }else{
                                                                                        arr_matches.push(0);
                                                                                    }
                                                                                }                                                    
                                                                            }
                                                                        }    
                                                                    }else if(accent_match == 'N'){
                                                                        var regex_w = RegExp(removeAccents(w), tipo);
                                                                        arr_regex_w.push(regex_w);
                                                                        var regex_w_l = (typeof w != 'undefined') ? RegExp(removeAccents(w).toLowerCase(), tipo) : RegExp(removeAccents(w), tipo);//для сравнения
                                                                        arr_regex_w_l.push(regex_w_l);
                                                                        arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                        if(count_m > 0){
                                                                            //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                            if(typeof arr_w[i+1] != 'undefined'){
                                                                                if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                                    var index_first_w = removeAccents(VerseText).indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                                    var index_next_w = removeAccents(VerseText).indexOf(arr_w[i+1], index_first_w);
                                                                                    if(index_first_w < index_next_w){
                                                                                        //console.log('removeAccents(VerseText): '+removeAccents(VerseText));
                                                                                        //console.log('caso2a. index_first_w: '+index_first_w);
                                                                                        //console.log('caso2a. index_next_w: '+index_next_w);
                                                                                        let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                                        let arr_VerseText_a_ed = [];
                                                                                        for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                            let el_a = arr_VerseText_a[a];
                                                                                            if(no_part_word == 'Y'){
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                                var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                            }else{//no_part_word == 'N'
                                                                                                var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                                var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                            }
                                                                                            //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                            if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                                el_a = removeAccents(el_a).replace(regex_aw, function (x) {
                                                                                                    return '{' + x + '}';
                                                                                                });
                                                                                                sovpad++;
                                                                                                arr_matches_w.push(1);
                                                                                                count_m_total += 1;
                                                                                                arr_result_m_total.push(arr_result_m);
                                                                                            }
                                                                                            if(sovpad == arr_words.length){
                                                                                                sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                            }
                                                                                            arr_VerseText_a_ed.push(el_a); 
                                                                                        }
                                                                                        var text_original = VerseText;
                                                                                        var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                                        VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                                        //console.log('VerseText: '+VerseText); 
                                                                                    }else{
                                                                                        arr_matches.push(0);
                                                                                    }
                                                                                }else if(case_sens == 'i'){//все равно какие буквы
                                                                                    //превращаю в мал. буквы только для сравнения.
                                                                                    var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                                    var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                                    if(index_first_w < index_next_w){
                                                                                        //console.log('VerseText: '+removeAccents(VerseText));
                                                                                        //console.log('VerseText.toLowerCase(): '+removeAccents(VerseText).toLowerCase());
                                                                                        //console.log('caso2b. index_first_w: '+index_first_w);
                                                                                        //console.log('caso2b. index_next_w: '+index_next_w);
                                                                                        let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                                        let arr_VerseText_a_ed = [];
                                                                                        for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                            let el_a = arr_VerseText_a[a];
                                                                                            if(no_part_word == 'Y'){
                                                                                                //var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);//antes y ok
                                                                                                var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                                if(arr_w[i+sovpad] < arr_w.length){
                                                                                                    var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                                }else{
                                                                                                    var sovpad_word = (el_a.toLowerCase() == arr_w[arr_w.length-1].toLowerCase()) ? true : false ;
                                                                                                }
                                                                                            }else{//no_part_word == 'N'
                                                                                                var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                                var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                            }
                                                                                            //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                            if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                                el_a = el_a.replace(regex_aw, function (x) {
                                                                                                    return '{' + x + '}';
                                                                                                });
                                                                                                sovpad++;
                                                                                                arr_matches_w.push(1);
                                                                                                count_m_total += 1;
                                                                                                arr_result_m_total.push(arr_result_m);
                                                                                            }
                                                                                            if(sovpad == arr_words.length){
                                                                                                sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                            }
                                                                                            arr_VerseText_a_ed.push(el_a); 
                                                                                        }
                                                                                        var text_original = VerseText;
                                                                                        var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                                        VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                                        //console.log('VerseText: '+VerseText); 
                                                                                    }else{
                                                                                        arr_matches.push(0);
                                                                                    }
                                                                                }                                                    
                                                                            }
                                                                        }
                                                                    }//end //else if(accent_match == 'N')
                                                                });
                                                                if(!arr_matches.includes(0)){//si todos ocurrencias hay
                                                                    for (let i = 0; i < arr_regex_w.length; i++) {
                                                                        if(typeof arr_regex_w[i+1] != 'undefined' || typeof arr_regex_w_l[i+1] != 'undefined'){
                                                                            if(accent_match == 'Y'){
                                                                                if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                                    var index_first_w = VerseText.indexOf(arr_words[i]);
                                                                                    var index_next_w = VerseText.indexOf(arr_words[i+1], index_first_w);    
                                                                                }if(case_sens == 'i'){//все равно какие буквы
                                                                                    var index_first_w = VerseText.toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                                    var index_next_w = VerseText.toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                                }
                                                                            }else if(accent_match == 'N'){
                                                                                if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                                    var index_first_w = removeAccents(VerseText).indexOf(arr_words[i]);
                                                                                    var index_next_w = removeAccents(VerseText).indexOf(arr_words[i+1], index_first_w);    
                                                                                }if(case_sens == 'i'){//все равно какие буквы
                                                                                    var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                                    var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                                }
                                                                            }
                                                                            if(index_first_w < index_next_w && arr_matches_w.includes(1)){
                                                                                //console.log('VerseText: '+VerseText);
                                                                                //console.log('VerseText: '+VerseText);
                                                                                VerseText = VerseText.replace(arr_regex_w[i], function (x) {
                                                                                    return '<b class="f_red">' + x + '</b>';
                                                                                });
                                                                                //console.log(' con red --- VerseText: '+VerseText);
                                                                                //console.log('first arr_regex_w['+i+']: '+arr_regex_w[i] + ' --- index_first_regex: '+index_first_regex);
                                                                                //console.log('second arr_regex_w['+(i+1)+']: '+arr_regex_w[i+1]+ ' --- index_next_regex: '+index_next_regex);                                                        
                                                                                is_match = true;
                                                                            }else{
                                                                                is_match = false;
                                                                            }
                                                                        }
                                                                    }//end for
                                                                    //quito tag's sobrantes de las coincidencias con for
                                                                    if(is_match){
                                                                        let tag_f_red_start = '';
                                                                        let tag_f_red_end = '';
                                                                        //console.log(' inicio tag_f_red_start: '+tag_f_red_start);
                                                                        //console.log(' inicio tag_f_red_end: '+tag_f_red_end);
                                                                        for (let index = 0; index < arr_words.length; index++) {
                                                                            tag_f_red_start += '<b class="f_red">';
                                                                            tag_f_red_end += '</b>';
                                                                            //console.log(' en for --- tag_f_red_start: '+tag_f_red_start);
                                                                            //console.log(' en for --- tag_f_red_end: '+tag_f_red_end);
                                                                            if(index > 0){
                                                                                VerseText = VerseText.replace(tag_f_red_start,'<b class="f_red">');
                                                                                VerseText = VerseText.replace(tag_f_red_end,'</b>'); 
                                                                                //console.log(' en for --- VerseText: '+VerseText);
                                                                            }                                                                        
                                                                        }
                                                                        //console.log(' despues de for --- VerseText: '+VerseText);
                                                                    }                                           
                                                                }else{
                                                                    is_match = false;
                                                                }
                                                            }
                                                            //=======================================================================//
                                                            //end //2. - //cлова идут в заданном порядке //ok
                                                            //=======================================================================//
                                                            
                    
                                                            //=======================================================================//
                                                            //3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                            //=======================================================================//
                                                            if(cbox3.checked){
                                                                var words = arr_words.join(' ');
                                                                VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                                var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                                VerseText = arr_VerseText_or.join(' ');
                                                                if(accent_match == 'Y'){
                                                                    var regex_w = RegExp(words, tipo);
                                                                    arr_result_m = VerseText.match(regex_w);
                                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                    if(count_m > 0){
                                                                        VerseText = VerseText.replace(regex_w, function (x) {
                                                                            return '<b class="f_red">' + x + '</b>';
                                                                        });
                                                                        is_match = true;
                                                                        count_m_total += count_m;
                                                                        arr_result_m_total.push(arr_result_m);
                                                                    }else{
                                                                        is_match = false;
                                                                    } 
                                                                }else if(accent_match == 'N'){
                                                                    var regex_w = RegExp(removeAccents(words), tipo);
                                                                    arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                    if(count_m > 0){
                                                                        var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                            return '{' + x + '}';
                                                                        });
                                                                        var text_original = VerseText;
                                                                        var arr_frases = prepararFrases(text_original,text_marcas);
                                                                        var frase_original = arr_frases[0];
                                                                        var frase_exacta = arr_frases[1];
                                                                        //console.log('frase_original: '+frase_original);
                                                                        //console.log('frase_exacta: '+frase_exacta);
                                                                        text_marcas = prepararTextMarcas(frase_exacta);                                                                        
                                                                        VerseText = markRed(frase_original, text_marcas);//FUNCIONA
                                                                        //console.log('VerseText: '+VerseText);
                                                                        VerseText = VerseText.replace(/¬/g,' ');//quito lo puesto temporalmente
                                                                        is_match = true;
                                                                        count_m_total += count_m;
                                                                        arr_result_m_total.push(arr_result_m);
                                                                    }else{
                                                                        is_match = false;
                                                                    }
                                                                }
                                                            }
                                                            //=======================================================================//
                                                            //end 3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                            //=======================================================================//


                                                            //=======================================================================//
                                                            //7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                            //=======================================================================//
                                                            if(cbox7.checked){
                                                                var words = arr_words.join(' ');
                                                                VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                                var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                                VerseText = arr_VerseText_or.join(' ');
                                                                var regex_w = RegExp(words, tipo);
                                                                var arr_VerseText_con_sn = [];
                                                                var arr_sn = [];//arr de strong numbers finded
                                                                arr_VerseText_or.forEach(el=>{  
                                                                    if(el.includes('<S>') && el.includes('</S>')){//number strong 
                                                                        //console.log('el: '+el);
                                                                        let sNumber_sin_tags = removeTags(el); 
                                                                        //console.log('sNumber_sin_tags: '+sNumber_sin_tags);
                                                                        if(sNumber_sin_tags == words){
                                                                            //console.log('sNumber_sin_tags == words');
                                                                            arr_sn.push(sNumber_sin_tags);
                                                                            let sNumber_con_tags = el.replace(regex_w, function (x) {
                                                                                return '<b class="f_red">' + x + '</b>';
                                                                            }); 
                                                                            el = sNumber_con_tags;
                                                                            //console.log('nuevo el: '+el);
                                                                            arr_VerseText_con_sn.push(el);//con sn red
                                                                        }else{
                                                                            arr_VerseText_con_sn.push(el);
                                                                        }
                                                                    }else{
                                                                        arr_VerseText_con_sn.push(el);
                                                                    }
                                                                });
                                                                //console.log('arr_sn: '+arr_sn);
                                                                VerseText = arr_VerseText_con_sn.join(' ');
                                                                //console.log('------------- 2374 --- con StrongNumber --- VerseText: '+VerseText);
                                                                arr_result_m = arr_sn;
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    is_match = true;
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                }else{
                                                                    is_match = false;
                                                                }
                                                            }
                                                            //=======================================================================//
                                                            //end 7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                            //=======================================================================//

                    
                                                        }//end //if(arr_words.length > 0)
                    
                    
                    
                                                        //Matches
                                                        if(is_match){
                                                            //console.log('VerseText regex1: '+VerseText.match(regex1));
                                                            //console.log('VerseText: '+VerseText);
                    
                                                            const span_num_find = document.createElement('span');
                                                            span_num_find.className = 'sp_f';
                                                            count_f++;
                                                            span_num_find.innerText = count_f;
                    
                                                            var p = document.createElement('p');
                                                            p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                            
                                                            var a = document.createElement('a');
                                                            a.href = '#';
                                                            a.classList.add = 'blink';
                                                            let aLink = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                                            a.innerHTML = aLink;
                                                            a.setAttribute('onclick',`goToLinkFromFind('${Translation}', '${aLink}')`);//funciona
                                                            
                                                            p.append(span_num_find);
                                                            p.append(a);
                                                            p.append(' '); 
                                    
                                                            const span_vt = document.createElement('span');
                                                            span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
                                    
                                    
                                                            //Номера Стронга в стихах (RST+)
                                                            if(bq.StrongNumbers == "Y"){
                                                                let t = VerseText;
                                                                var arr_t = t.split(' ');
                                    
                                                                arr_t.forEach((el,i) => {    
                                                                    
                                                                    //element of string is Strong Number
                                                                    if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                                        const span_strong = document.createElement('span');
                                                                        if(btnStrongIsActive){
                                                                            span_strong.className = 'strong show strongActive'; 
                                                                        }else{
                                                                            span_strong.className = 'strong'; 
                                                                        }
                                                                        let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
                                    
                                                                        //si ultimo carácter es string
                                                                        if(last_char != '' && isNaN(last_char)){
                                                                            let el_number = el.substring(0,el.length-1);
                                                                            let el_string = last_char;
                                                                            span_strong.innerHTML = el_number;
                                                                            p.append(span_strong);
                                                                            p.append(el_string);
                                                                        }else{//es number
                                                                            span_strong.innerHTML = el;
                                                                            p.append(span_strong);
                                                                        }
                                    
                                                                    }else{//is word
                                                                        p.append(' ');
                                                                        if(btnStrongIsActive){
                                                                            if(el.includes('<S>')){
                                                                                el = el.replace('<S>','<S class="show strongActive">');
                                                                            }
                                                                        }
                                                                        p.append(el);
                                                                    }
                                                                });
                                                                p.innerHTML.trim();
                                    
                                                                //console.log('antes: ' + p.innerHTML);
                                                                if(bq.HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                                //console.log('despues: '+p.innerHTML);
                                    
                                                                if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                                    p.querySelectorAll('.strongActive').forEach((el)=>{
                                                                        el.addEventListener('click', ()=>{
                                                                            //console.log('2. book: '+book);
                                                                            //console.log('2. el.innerHTML: '+el.innerHTML);
                                                                            if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                                //getStrongNumber(el.innerHTML);//antes
                                                                                getStrongNumber(el.innerText);
                                                                            }else{//rstStrong
                                                                                lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                                //getStrongNumber(el.innerHTML, lang);//antes
                                                                                getStrongNumber(el.innerText, lang);
                                                                            }
                                                                        });
                                                                    }); 
                                                                }
                                                            }
                                    
                                                            //Примечания редактора в стихах (RSTi2)
                                                            if(bq.Notes == 'Y'){
                                                                let t = VerseText;
                                    
                                                                if(t.includes(bq.NoteSign)){// '*'
                                                                    let arr_t0 = t.split(bq.NoteSign);
                                                                    let before_Note = arr_t0[0];
                                    
                                                                    if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                                        let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                                        let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                                        let text_Note = arr_t2[0];
                                                                        let after_Note = arr_t2[1];
                                    
                                                                        const span_t = document.createElement('span');
                                                                        span_t.className = 'tooltip';
                                                                        span_t.setAttribute('data-tooltip',text_Note);
                                                                        span_t.innerHTML = bq.NoteSign;
                                    
                                                                        span_t.addEventListener('mouseenter', function(){
                                                                            showTooltip(this);
                                                                        });
                                                                        span_t.addEventListener('mouseleave', function(){
                                                                            hideTooltip(this);
                                                                        });
                                                                                    
                                                                        before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                                        span_vt.append(before_Note);
                                                                        span_vt.append(span_t);
                                                                        after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                                        span_vt.append(after_Note);
                                    
                                                                        p.append(span_vt);//antes
                                                                        if(bq.HTMLFilter == 'Y'){//aki en find si lo meto
                                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                                        }
                                                                    }
                                                                }else{
                                                                    //p.append(VerseText);//antes
                                                                    span_vt.append(VerseText);
                                                                    p.append(span_vt);
                                    
                                                                    if(bq.HTMLFilter == 'Y'){
                                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                                    }
                                                                }
                                                                //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.
                                                            }
                                    
                                                            //Оглавления в стихах (NRT)
                                                            if(bq.Titles == 'Y'){
                                                                let t = VerseText;
                                    
                                                                if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                                    let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                                    let before_Title = arr_t1[0];
                                                                    let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                                    let text_Title = arr_t2[0];
                                                                    let after_Title = arr_t2[1];
                                    
                                                                    const span_title = document.createElement('span');
                                                                    span_title.className = 'verse_title';
                                                                    span_title.innerHTML = text_Title;
                                    
                                                                    p.append(before_Title);
                                                                    p.append(span_title);
                                                                    p.append(after_Title);
                                                                }else{
                                                                    p.append(VerseText);
                                                                }
                                    
                                                                if(bq.HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                            }
                                    
                                                            //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                            if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                                //p.append(VerseText);//antes
                                                                span_vt.append(VerseText);
                                                                p.append(span_vt);
                                    
                                                                if(bq.HTMLFilter == 'Y'){
                                                                    p.innerHTML = htmlEntities(p.innerHTML);
                                                                }
                                                            }
                    
                                                            result_finded.push(p);
                                                            
                                                        }      
                                                    });
                                                }
                                            });
                                        
                                        }else{
                                            //console.log(index+') stop doFind. window.doFind: '+window.doFind);
                                        }//end else (window.doFind)
                    
                    
                    
                                        //Formar links para resultados de búsqueda
                                        if(result_finded.length > 0){
                                            
                                            //console.log('2. abajo result_finded:');
                                            //console.log(result_finded);
                    
                                            //console.log('2. abajo arr_result_m_total:');
                                            //console.log(arr_result_m_total);
                                        
                                            if(document.querySelectorAll('.res_f').length > 0){
                                                document.querySelectorAll('.res_f').forEach(el=>{
                                                    // el.remove();//elimino resultado anterior si lo hay
                                                })
                                            }                    
                    
                                            //inserto resultado de búsqueda                        
                                            //document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span title="Стихов">(${count_f})</span> <span class="res_m f_r" title="Совпадений">[${count_m_total}]</span>`;
                                            document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span>(${count_f})</span><span class="tooltip" data-tooltip="Количество стихов: <span class='f_r'>${count_f}</span> <br>Количество совпадений: ${count_m_total}" onmouseenter="showTooltip(this)" mouseleave="hideTooltip(this)">*</span> <span class="res_m f_r">[${count_m_total}]</span>`;
                                            mySizeFind();//altura de div_find_body
                    
                                            var arr_l = [];
                                            var limit_n = limit_val;
                                            for (let i = 0; i < result_finded.length; i++) {
                                                const el = result_finded[i];
                                                //console.log(el);
                    
                                                if(i > limit_n - 2 || i == result_finded.length - 1){
                                                    arr_l.push(el);
                                                    result_show.push(arr_l); 
                                                    limit_n += limit_val;
                                                    arr_l = [];
                                                }else{
                                                    arr_l.push(el);
                                                }                            
                                            }
                                            //console.log('result_show');
                                            //console.log(result_show);
                    
                                            window.res_show = result_show;
                                            //console.log('res_show');
                                            //console.log(res_show);
                    
                                            if(result_show != null){
                                                if(index == book_end){
                                                    //console.log('1. con el ultimo book de find --- llamo mostrar_res_show(0)');
                                                    mostrar_res_show(0);//por defecto los primeros 50
                                                }
                                            }
                                            result_show = [];
                    
                                            if(index == book_end){
                                                stopFindWords();//показываю кнопку 'Find'
                                            }
                                            
                                        }else{
                                            if(index == book_end && result_finded.length == 0){
                                                mostrar_no_res();
                                                stopFindWords();//показываю кнопку 'Find'
                                            }
                                        }
                                        

                                    })                                
                                    .catch(error => { 
                                        // Código a realizar cuando se rechaza la promesa
                                        console.log('2. error promesa find: '+error);
                                    });

                                }else{
                                    console.log('No coincide el nombre del fichero o fileContent está vacío');
                                }

                            }
                        }
                    }


                    //si no existe objeto obj_bible_files con Translation. hago fetch()
                    if(typeof obj_bible_files[Translation].Books[book] == 'undefined'){

                        console.log(' --- NO EXISTE objeto obj_bible_files con Translation. hago fetch() --- ');
                        //console.log('abajo bq: ');
                        //console.log(bq);

                        //url del libro necesario
                        url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//01_genesis.htm;   
                        //console.log('--- url: '+url);
                        fetch(url)
                        .then((response) => response.text())
                        .then((bookModule) => {
                            
                            if(window.doFind){
                                //console.log(index+') hago doFind. window.doFind: '+window.doFind);
                                //console.log('Bible book: '+bq.Books[book].FullName);
            
                                //console.log(bookModule);
                                //показываю в каких книгах ищу
                                document.querySelector(".f_book .book_name").innerHTML = bq.Books[book].FullName;
        
                                var nb = bookModule.split('<h4>');//делю файл на главы
                                //console.log(nb);
                                
                                nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                //console.log(nb);
        
                                var arr_chapters = nb;
                                //arr_chapters.shift();//elimino index0 ('<h2></h2>\n')
        
                                arr_chapters.forEach( (el_ch, i_ch) => {
                                    //console.log(el_ch);
                                    let chapter = i_ch;
                                    let ChapterId = i_ch;
                                    
                                    if(el_ch.includes('<p>')){
                                        var arr_verses = el_ch.split('<p>');
                                        //console.log(arr_verses);
                                        
                                        //Recorrer todos los verses
                                        arr_verses.forEach((el,i) => {
        
                                            if(el.includes('</p>')){
                                                var arr_p_text = el.split('</p>');
                                                var p_Text = arr_p_text[0];
                                            }else{
                                                var p_Text = el;
                                            }
                                            //console.log('p_Text: '+p_Text); 
        
                                            var arr_p = p_Text.split(' ');
                                            var VerseId = arr_p[0];
                                            //console.log('VerseId: '+VerseId);
        
                                            var VerseText = '';
                                            for(let index = 1; index < arr_p.length; index++){
                                                VerseText += arr_p[index] + ' ';
                                                //console.log('arr_p['+index+']: '+arr_p[index]);
                                            }
                                            //console.log('VerseText: '+VerseText);
                                            

                                            if(VerseText != ''){
                                                //VerseText = removeTags(VerseText);//solo quita los tag's pero deja el contenido de tags pares. de '<S>H430</S>' => 'H430' 
                                                //console.log('sin tags --- VerseText: '+VerseText);

                                                if(search_only_in_text_without_StrongTags){
                                                    if(bq.StrongNumberTags == 'Y' && bq.StrongNumberTagStart != '' && bq.StrongNumberTagEnd != ''){
                                                        VerseText = removeTagsWithStrongNumber(VerseText, bq.StrongNumberTagStart, bq.StrongNumberTagEnd);
                                                    }
                                                }
                                            }

        
        
                                            //Si hay palabras para buscar...
                                            if(arr_words.length > 0){
                                                
                                                //tipos de busqueda
                                                var is_match = false;
        
        
                                                //=======================================================================//  
                                                //0. por defecto - nada marcado //ok
                                                //=======================================================================//  
                                                if(!cbox1.checked && !cbox2.checked && !cbox3.checked && !cbox7.checked){
                                                    let arr_matches = [];  
                                                    //1. проверяю есть ли каждое слово из фразы в стихе                                      
                                                    arr_words.forEach(w => {
                                                        if(accent_match == 'Y'){//cbox6
                                                            if(no_part_word == 'Y'){//cbox4
                                                                var arr_no_part_word = [];
                                                                w = "^" +w +"$";//entera palabra del array, no parte
                                                                var regex_w = RegExp(w, tipo);
                                                                VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                    if(removeSymbols(el).match(regex_w)){
                                                                        //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                        arr_no_part_word.push(1);
                                                                    }else{
                                                                        //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                        arr_no_part_word.push(0);
                                                                    } 
                                                                });
                                                                if(arr_no_part_word.includes(1)){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(no_part_word == 'N'){
                                                                var regex_w = RegExp(w, tipo);
                                                                arr_result_m = VerseText.match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        }else if(accent_match == 'N'){
                                                            if(no_part_word == 'Y'){
                                                                var arr_no_part_word = [];
                                                                w = "^" +w +"$";//entera palabra del array, no parte
                                                                var regex_w = RegExp(removeAccents(w), tipo);
                                                                removeAccents(VerseText).split(' ').filter(elm=>elm).forEach(el=> {
                                                                    if(removeSymbols(el).match(regex_w)){
                                                                        //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                        arr_no_part_word.push(1);
                                                                    }else{
                                                                        //console.log('--- removeSymbols(el) ('+removeSymbols(el)+') NO match regex_w: '+false);
                                                                        arr_no_part_word.push(0);
                                                                    } 
                                                                });
                                                                if(arr_no_part_word.includes(1)){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(no_part_word == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        }
                                                    });
                                                    //console.log('Word. w: ', w);
                                                    //console.log('VerseText: ', VerseText);
                                                    if(!arr_matches.includes(0)){//когда все слова из фразы есть в стихе
                                                        //2. в цикле отмечаю красным все совпадения, но уже не нужно arr_matches.push()
                                                        arr_words.forEach(w => {
                                                            if(accent_match == 'Y'){//cbox6
                                                                if(no_part_word == 'Y'){//cbox4
                                                                    var arr_VerseText_red = [];
                                                                    var regex_w = RegExp(w, tipo);                                                       
                                                                    VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                        if(removeSymbols(el).match(regex_w)){
                                                                            //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                            el = el.replace(regex_w, function (x) {
                                                                                return '<b class="f_red">' + x + '</b>';
                                                                            });
                                                                            arr_VerseText_red.push(el);
                                                                        }else{
                                                                            //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                            arr_VerseText_red.push(el);
                                                                        } 
                                                                    });
                                                                    VerseText = arr_VerseText_red.join(' ');
                                                                    //console.log('VerseText: ', VerseText);
                                                                }else if(no_part_word == 'N'){
                                                                    var regex_w = RegExp(w, tipo);
                                                                    arr_result_m = VerseText.match(regex_w);
                                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                    if(count_m > 0){
                                                                        VerseText = VerseText.replace(regex_w, function (x) {
                                                                            return '<b class="f_red">' + x + '</b>';
                                                                        });
                                                                    }
                                                                }
                                                            }else if(accent_match == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                        return '{' + x + '}';
                                                                    });
                                                                    var text_original = VerseText;
                                                                    var text_marcas = prepararTextMarcas(text_marcas);
                                                                    VerseText = markRed(text_original, text_marcas);
                                                                }
                                                            }
                                                        });
                                                        is_match = true;
                                                        count_m_total += count_m;
                                                        arr_result_m_total.push(arr_result_m);
                                                        //console.log('count_m_total: ', count_m_total);
                                                        //console.log('arr_result_m_total: ', arr_result_m_total);
                                                        //console.log('VerseText: ', VerseText);
        
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//  
                                                //end //0. por defecto - nada marcado //ok                                 
                                                //=======================================================================//                                    
                                                
        
                                                //=======================================================================//                                    
                                                //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                //=======================================================================//
                                                if(cbox1.checked){
                                                    let arr_matches = [];
                                                    if(no_part_word == 'Y'){
                                                        arr_words.forEach(w => {
                                                            if(no_part_word == 'Y'){
                                                                // w = "\\b" +w +"\\b";//palabras enteras// exacta coincidencia
                                                                w = "\\B" +w +"\\B";//marcar si 'w' está rodeada por otras letras dentro de 'aawaa'.//true
                                                            }
                                                            if(accent_match == 'Y'){
                                                                var regex_w = RegExp(w, tipo); 
                                                                arr_result_m = VerseText.match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                    VerseText = VerseText.replace(regex_w, function (x) {
                                                                        return '<b class="f_red">' + x + '</b>';
                                                                    });
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(accent_match == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);;
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                    var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                        return '{' + x + '}';
                                                                    });
                                                                    var text_original = VerseText;
                                                                    var text_marcas = prepararTextMarcas(text_marcas);
                                                                    VerseText = markRed(text_original, text_marcas);
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        });
                                                        if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                            is_match = true;
                                                        }else{
                                                            is_match = false;
                                                        }
                                                    }else if(no_part_word == 'N'){
                                                        if(accent_match == 'Y'){
                                                            words = arr_words.join('|');
                                                            var regex1 = RegExp(words, tipo);//buscar todo
                                                            arr_result_m = VerseText.match(regex1);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                is_match = true;
                                                                count_m_total += count_m;
                                                                arr_result_m_total.push(arr_result_m);
                                                                VerseText = VerseText.replace(regex1, function (x) {
                                                                    return '<b class="f_red">' + x + '</b>';
                                                                });
                                                            }else{
                                                                is_match = false;
                                                            } 
                                                        }else if(accent_match == 'N'){
                                                            words = arr_words.join('|');
                                                            var regex_w = RegExp(removeAccents(words), tipo); 
                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                arr_matches.push(1);
                                                                var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                    return '{' + x + '}';
                                                                });
                                                                var text_original = VerseText;
                                                                text_marcas = prepararTextMarcas(text_marcas);
                                                                VerseText = markRed(text_original, text_marcas);
                                                                //console.log('VerseText: '+VerseText);
                                                            }else{
                                                                arr_matches.push(0);
                                                            }
                                                            if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                                is_match = true;
                                                                count_m_total += count_m;
                                                                arr_result_m_total.push(arr_result_m);
                                                            }else{
                                                                is_match = false;
                                                            }
                                                        }
                                                    }
                                                }
                                                //=======================================================================//
                                                //end //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                //=======================================================================//
        
        
                                                //=======================================================================//
                                                //2. - //cлова идут в заданном порядке //ok
                                                //=======================================================================//
                                                if(cbox2.checked){
                                                    //console.log('//tipo búsqueda --- //2. - //cлова идут в заданном порядке');
                                                    let arr_matches = [];
                                                    let arr_matches_w = [];//matches en words
                                                    let arr_regex_w = [];
                                                    let arr_regex_w_l = [];//для сравнения
                                                    arr_words.forEach( (w,i,arr_w) => {
                                                        if(accent_match == 'Y'){
                                                            var regex_w = RegExp(w, tipo);
                                                            arr_regex_w.push(regex_w);
                                                            var regex_w_l = (typeof w != 'undefined') ? RegExp(w.toLowerCase(), tipo) : RegExp(w, tipo);//для сравнения
                                                            arr_regex_w_l.push(regex_w_l);
                                                            arr_result_m = VerseText.match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                if(typeof arr_w[i+1] != 'undefined'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = VerseText.indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                        var index_next_w = VerseText.indexOf(arr_w[i+1], index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+VerseText);
                                                                            //console.log('caso2a. index_first_w: '+index_first_w);
                                                                            //console.log('caso2a. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = VerseText.split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '<b class="f_red">' + x + '</b>';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            VerseText = arr_VerseText_a_ed.join(' ');
                                                                            //console.log(VerseText);
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }else if(case_sens == 'i'){//все равно какие буквы
                                                                        //превращаю в мал. буквы только для сравнения.
                                                                        var index_first_w = VerseText.toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                        var index_next_w = VerseText.toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+VerseText);
                                                                            //console.log('VerseText.toLowerCase(): '+VerseText.toLowerCase());
                                                                            //console.log('caso2b. index_first_w: '+index_first_w);
                                                                            //console.log('caso2b. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = VerseText.split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                    var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                    var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '<b class="f_red">' + x + '</b>';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            VerseText = arr_VerseText_a_ed.join(' ');
                                                                            //console.log(VerseText);
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }                                                    
                                                                }
                                                            }    
                                                        }else if(accent_match == 'N'){
                                                            var regex_w = RegExp(removeAccents(w), tipo);
                                                            arr_regex_w.push(regex_w);
                                                            var regex_w_l = (typeof w != 'undefined') ? RegExp(removeAccents(w).toLowerCase(), tipo) : RegExp(removeAccents(w), tipo);//для сравнения
                                                            arr_regex_w_l.push(regex_w_l);
                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                if(typeof arr_w[i+1] != 'undefined'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = removeAccents(VerseText).indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                        var index_next_w = removeAccents(VerseText).indexOf(arr_w[i+1], index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('removeAccents(VerseText): '+removeAccents(VerseText));
                                                                            //console.log('caso2a. index_first_w: '+index_first_w);
                                                                            //console.log('caso2a. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = removeAccents(el_a).replace(regex_aw, function (x) {
                                                                                        return '{' + x + '}';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            var text_original = VerseText;
                                                                            var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                            VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                            //console.log('VerseText: '+VerseText); 
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }else if(case_sens == 'i'){//все равно какие буквы
                                                                        //превращаю в мал. буквы только для сравнения.
                                                                        var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                        var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+removeAccents(VerseText));
                                                                            //console.log('VerseText.toLowerCase(): '+removeAccents(VerseText).toLowerCase());
                                                                            //console.log('caso2b. index_first_w: '+index_first_w);
                                                                            //console.log('caso2b. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    //var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);//antes y ok
                                                                                    var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                    if(arr_w[i+sovpad] < arr_w.length){
                                                                                        var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                    }else{
                                                                                        var sovpad_word = (el_a.toLowerCase() == arr_w[arr_w.length-1].toLowerCase()) ? true : false ;
                                                                                    }
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                    var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '{' + x + '}';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            var text_original = VerseText;
                                                                            var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                            VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                            //console.log('text_original: '+text_original); 
                                                                            //console.log('text_marcas: '+text_marcas); 
                                                                            //console.log('con markRed --- VerseText: '+VerseText); 
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }                                                    
                                                                }
                                                            }
                                                        }//end //else if(accent_match == 'N')
                                                    });
                                                    if(!arr_matches.includes(0)){//si todos ocurrencias hay
                                                        for (let i = 0; i < arr_regex_w.length; i++) {
                                                            if(typeof arr_regex_w[i+1] != 'undefined' || typeof arr_regex_w_l[i+1] != 'undefined'){
                                                                if(accent_match == 'Y'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = VerseText.indexOf(arr_words[i]);
                                                                        var index_next_w = VerseText.indexOf(arr_words[i+1], index_first_w);    
                                                                    }if(case_sens == 'i'){//все равно какие буквы
                                                                        var index_first_w = VerseText.toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                        var index_next_w = VerseText.toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                    }
                                                                }else if(accent_match == 'N'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = removeAccents(VerseText).indexOf(arr_words[i]);
                                                                        var index_next_w = removeAccents(VerseText).indexOf(arr_words[i+1], index_first_w);    
                                                                    }if(case_sens == 'i'){//все равно какие буквы
                                                                        var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                        var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                    }
                                                                }
                                                                if(index_first_w < index_next_w && arr_matches_w.includes(1)){
                                                                    //console.log('VerseText: '+VerseText);
                                                                    VerseText = VerseText.replace(arr_regex_w[i], function (x) {
                                                                        return '<b class="f_red">' + x + '</b>';
                                                                    });
                                                                    //console.log(' con red --- VerseText: '+VerseText);
                                                                    //console.log('first arr_regex_w['+i+']: '+arr_regex_w[i] + ' --- index_first_regex: '+index_first_regex);
                                                                    //console.log('second arr_regex_w['+(i+1)+']: '+arr_regex_w[i+1]+ ' --- index_next_regex: '+index_next_regex);                                                        
                                                                    is_match = true;
                                                                }else{
                                                                    is_match = false;
                                                                }
                                                            }
                                                        }//end for
                                                        //quito tag's sobrantes de las coincidencias con for
                                                        if(is_match){
                                                            let tag_f_red_start = '';
                                                            let tag_f_red_end = '';
                                                            //console.log(' inicio tag_f_red_start: '+tag_f_red_start);
                                                            //console.log(' inicio tag_f_red_end: '+tag_f_red_end);
                                                            for (let index = 0; index < arr_words.length; index++) {
                                                                tag_f_red_start += '<b class="f_red">';
                                                                tag_f_red_end += '</b>';
                                                                //console.log(' en for --- tag_f_red_start: '+tag_f_red_start);
                                                                //console.log(' en for --- tag_f_red_end: '+tag_f_red_end);
                                                                if(index > 0){
                                                                    VerseText = VerseText.replace(tag_f_red_start,'<b class="f_red">');
                                                                    VerseText = VerseText.replace(tag_f_red_end,'</b>'); 
                                                                    //console.log(' en for --- VerseText: '+VerseText);
                                                                }                                                                        
                                                            }
                                                            //console.log(' despues de for --- VerseText: '+VerseText);
                                                        }                                           
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//
                                                //end //2. - //cлова идут в заданном порядке //ok
                                                //=======================================================================//
                                                
        
                                                //=======================================================================//
                                                //3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                //=======================================================================//
                                                if(cbox3.checked){
                                                    var words = arr_words.join(' ');
                                                    VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                    var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                    VerseText = arr_VerseText_or.join(' ');
                                                    //console.log('------------- 2347 --- VerseText: '+VerseText);
                                                    if(accent_match == 'Y'){
                                                        var regex_w = RegExp(words, tipo);
                                                        arr_result_m = VerseText.match(regex_w);
                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                        if(count_m > 0){
                                                            VerseText = VerseText.replace(regex_w, function (x) {
                                                                return '<b class="f_red">' + x + '</b>';
                                                            });
                                                            is_match = true;
                                                            count_m_total += count_m;
                                                            arr_result_m_total.push(arr_result_m);
                                                        }else{
                                                            is_match = false;
                                                        } 
                                                    }else if(accent_match == 'N'){
                                                        var regex_w = RegExp(removeAccents(words), tipo);
                                                        arr_result_m = removeAccents(VerseText).match(regex_w);
                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                        if(count_m > 0){
                                                            var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                return '{' + x + '}';
                                                            });
                                                            var text_original = VerseText;
                                                            var arr_frases = prepararFrases(text_original,text_marcas);
                                                            var frase_original = arr_frases[0];
                                                            var frase_exacta = arr_frases[1];
                                                            //console.log('frase_original: '+frase_original);
                                                            //console.log('frase_exacta: '+frase_exacta);
                                                            text_marcas = prepararTextMarcas(frase_exacta);                                                            
                                                            VerseText = markRed(frase_original, text_marcas);//FUNCIONA
                                                            //console.log('VerseText: '+VerseText);
                                                            VerseText = VerseText.replace(/¬/g,' ');//quito lo puesto temporalmente
                                                            is_match = true;
                                                            count_m_total += count_m;
                                                            arr_result_m_total.push(arr_result_m);
                                                        }else{
                                                            is_match = false;
                                                        }
                                                    }                                                    
                                                }
                                                //=======================================================================//
                                                //end 3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                //=======================================================================//


                                                //=======================================================================//
                                                //7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                //=======================================================================//
                                                if(cbox7.checked){
                                                    var words = arr_words.join(' ');
                                                    VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                    var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                    VerseText = arr_VerseText_or.join(' ');
                                                    var regex_w = RegExp(words, tipo);
                                                    var arr_VerseText_con_sn = [];
                                                    var arr_sn = [];//arr de strong numbers finded
                                                    arr_VerseText_or.forEach(el=>{  
                                                        if(el.includes('<S>') && el.includes('</S>')){//number strong 
                                                            //console.log('el: '+el);
                                                            let sNumber_sin_tags = removeTags(el); 
                                                            //console.log('sNumber_sin_tags: '+sNumber_sin_tags);
                                                            if(sNumber_sin_tags == words){
                                                                //console.log('sNumber_sin_tags == words');
                                                                arr_sn.push(sNumber_sin_tags);
                                                                let sNumber_con_tags = el.replace(regex_w, function (x) {
                                                                    return '<b class="f_red">' + x + '</b>';
                                                                }); 
                                                                el = sNumber_con_tags;
                                                                //console.log('nuevo el: '+el);
                                                                arr_VerseText_con_sn.push(el);//con sn red
                                                            }else{
                                                                arr_VerseText_con_sn.push(el);
                                                            }
                                                        }else{
                                                            arr_VerseText_con_sn.push(el);
                                                        }
                                                    });
                                                    //console.log('arr_sn: '+arr_sn);
                                                    VerseText = arr_VerseText_con_sn.join(' ');
                                                    //console.log('------------- 2374 --- con StrongNumber --- VerseText: '+VerseText);
                                                    arr_result_m = arr_sn;
                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                    if(count_m > 0){
                                                        is_match = true;
                                                        count_m_total += count_m;
                                                        arr_result_m_total.push(arr_result_m);
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//
                                                //end 7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                //=======================================================================//
        
                                            }//end //if(arr_words.length > 0)
        
        
        
                                            //Matches
                                            if(is_match){
                                                //console.log('VerseText regex1: '+VerseText.match(regex1));
                                                //console.log('VerseText: '+VerseText);
        
                                                const span_num_find = document.createElement('span');
                                                span_num_find.className = 'sp_f';
                                                count_f++;
                                                span_num_find.innerText = count_f;
        
                                                var p = document.createElement('p');
                                                p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                
                                                var a = document.createElement('a');
                                                a.href = '#';
                                                a.classList.add = 'blink';
                                                let aLink = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                                a.innerHTML = aLink;
                                                a.setAttribute('onclick',`goToLinkFromFind('${Translation}', '${aLink}')`);//funciona
                                                
                                                p.append(span_num_find);
                                                p.append(a);
                                                p.append(' '); 
                        
                                                const span_vt = document.createElement('span');
                                                span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
                        
                        
                                                //Номера Стронга в стихах (RST+)
                                                if(bq.StrongNumbers == "Y"){
                                                    let t = VerseText;
                                                    var arr_t = t.split(' ');
                        
                                                    arr_t.forEach((el,i) => {    
                                                        
                                                        //element of string is Strong Number
                                                        if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                            const span_strong = document.createElement('span');
                                                            if(btnStrongIsActive){
                                                                span_strong.className = 'strong show strongActive'; 
                                                            }else{
                                                                span_strong.className = 'strong'; 
                                                            }
                                                            let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
                        
                                                            //si ultimo carácter es string
                                                            if(last_char != '' && isNaN(last_char)){
                                                                let el_number = el.substring(0,el.length-1);
                                                                let el_string = last_char;
                                                                span_strong.innerHTML = el_number;
                                                                p.append(span_strong);
                                                                p.append(el_string);
                                                            }else{//es number
                                                                span_strong.innerHTML = el;
                                                                p.append(span_strong);
                                                            }
                        
                                                        }else{//is word
                                                            p.append(' ');
                                                            if(btnStrongIsActive){
                                                                if(el.includes('<S>')){
                                                                    el = el.replace('<S>','<S class="show strongActive">');
                                                                }
                                                            }
                                                            p.append(el);
                                                        }
                                                    });
                                                    p.innerHTML.trim();
                        
                                                    //console.log('antes: ' + p.innerHTML);
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                    //console.log('despues: '+p.innerHTML);
                        
                                                    if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                        p.querySelectorAll('.strongActive').forEach((el)=>{
                                                            el.addEventListener('click', ()=>{
                                                                //console.log('2. book: '+book);
                                                                //console.log('2. el.innerHTML: '+el.innerHTML);
                                                                if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                    //getStrongNumber(el.innerHTML);
                                                                    getStrongNumber(el.innerText);
                                                                }else{//rstStrong
                                                                    lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                    //getStrongNumber(el.innerHTML, lang);
                                                                    getStrongNumber(el.innerText, lang);
                                                                }
                                                            });
                                                        }); 
                                                    }
                                                }
                        
                                                //Примечания редактора в стихах (RSTi2)
                                                if(bq.Notes == 'Y'){
                                                    let t = VerseText;
                        
                                                    if(t.includes(bq.NoteSign)){// '*'
                                                        let arr_t0 = t.split(bq.NoteSign);
                                                        let before_Note = arr_t0[0];
                        
                                                        if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                            let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                            let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                            let text_Note = arr_t2[0];
                                                            let after_Note = arr_t2[1];
                        
                                                            const span_t = document.createElement('span');
                                                            span_t.className = 'tooltip';
                                                            span_t.setAttribute('data-tooltip',text_Note);
                                                            span_t.innerHTML = bq.NoteSign;
                        
                                                            span_t.addEventListener('mouseenter', function(){
                                                                showTooltip(this);
                                                            });
                                                            span_t.addEventListener('mouseleave', function(){
                                                                hideTooltip(this);
                                                            });
                                                                        
                                                            before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                            span_vt.append(before_Note);
                                                            span_vt.append(span_t);
                                                            after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                            span_vt.append(after_Note);
                        
                                                            p.append(span_vt);//antes
                                                            if(bq.HTMLFilter == 'Y'){//aki en find si lo meto
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                    }else{
                                                        //p.append(VerseText);//antes
                                                        span_vt.append(VerseText);
                                                        p.append(span_vt);
                        
                                                        if(bq.HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.
                                                }
                        
                                                //Оглавления в стихах (NRT)
                                                if(bq.Titles == 'Y'){
                                                    let t = VerseText;
                        
                                                    if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                        let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                        let before_Title = arr_t1[0];
                                                        let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                        let text_Title = arr_t2[0];
                                                        let after_Title = arr_t2[1];
                        
                                                        const span_title = document.createElement('span');
                                                        span_title.className = 'verse_title';
                                                        span_title.innerHTML = text_Title;
                        
                                                        p.append(before_Title);
                                                        p.append(span_title);
                                                        p.append(after_Title);
                                                    }else{
                                                        p.append(VerseText);
                                                    }
                        
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
                        
                                                //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);
                        
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
        
                                                result_finded.push(p);
                                                
                                            }      
                                        });
                                    }
                                });
                            
                            }else{
                                //console.log(index+') stop doFind. window.doFind: '+window.doFind);
                            }//end else (window.doFind)
        
        
        
                            //Formar links para resultados de búsqueda
                            if(result_finded.length > 0){
                                
                                //console.log('2. abajo result_finded:');
                                //console.log(result_finded);
        
                                //console.log('2. abajo arr_result_m_total:');
                                //console.log(arr_result_m_total);
                            
                                if(document.querySelectorAll('.res_f').length > 0){
                                    document.querySelectorAll('.res_f').forEach(el=>{
                                        // el.remove();//elimino resultado anterior si lo hay
                                    })
                                }                    
        
                                //inserto resultado de búsqueda                        
                                //document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span title="Стихов">(${count_f})</span> <span class="res_m f_r" title="Совпадений">[${count_m_total}]</span>`;
                                document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span>(${count_f})</span><span class="tooltip" data-tooltip="Количество стихов: <span class='f_r'>${count_f}</span> <br>Количество совпадений: ${count_m_total}" onmouseenter="showTooltip(this)" mouseleave="hideTooltip(this)">*</span> <span class="res_m f_r">[${count_m_total}]</span>`;
                                mySizeFind();//altura de div_find_body
        
                                var arr_l = [];
                                var limit_n = limit_val;
                                for (let i = 0; i < result_finded.length; i++) {
                                    const el = result_finded[i];
                                    //console.log(el);
        
                                    if(i > limit_n - 2 || i == result_finded.length - 1){
                                        arr_l.push(el);
                                        result_show.push(arr_l); 
                                        limit_n += limit_val;
                                        arr_l = [];
                                    }else{
                                        arr_l.push(el);
                                    }                            
                                }
                                //console.log('result_show');
                                //console.log(result_show);
        
                                window.res_show = result_show;
                                //console.log('res_show');
                                //console.log(res_show);
        
                                if(result_show != null){
                                    if(index == book_end){
                                        //console.log('2. con el ultimo book de find --- llamo mostrar_res_show(0)');
                                        mostrar_res_show(0);//por defecto los primeros 50
                                    }
                                }
                                result_show = [];
        
                                if(index == book_end){
                                    stopFindWords();//показываю кнопку 'Find'
                                }
                                
                            }else{
                                if(index == book_end && result_finded.length == 0){
                                    mostrar_no_res();
                                    stopFindWords();//показываю кнопку 'Find'
                                }
                            }                    
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('2. error promesa find: '+error);
                        }); 
                        
                        /*if(window.doFind){
                            console.log(index+') fin for. hago doFind. window.doFind: '+window.doFind);
                        }else{
                            alert(index+') fin for. stop doFind. window.doFind: '+window.doFind);
                            break;
                        }*/

                    }
    
                }//end for
            }

        }else{//MODO OLD. como en Text3()
            
            console.log(`MODO OLD. no existe el objeto 'objTrans' desde 'arrFavTransObj' `);

            fetch(`modules/text/${Translation}/bibleqt.json`)
            .then((response) => response.json())
            .then((bq) => {
                //console.log(bq);

                //muestro trans en result de busqueda
                //document.querySelector(".f_book .trans_name").innerHTML = bq.BibleShortName;//antes 
                document.querySelector(".title_par .trans_name").innerHTML = bq.BibleShortName;               
        
                if(book_start != null && book_end != null){
        
                    for (let index = book_start; index <= book_end; index++) {                
                        
                        //console.log('--- for --- index: '+index);
                        let book = index;//genesis
        
                        //url del libro necesario
                        url = `modules/text/${Translation}/${bq.Books[book].PathName}`;//01_genesis.htm;   
                        //console.log('--- url: '+url);
        
                        fetch(url)
                        .then((response) => response.text())
                        .then((bookModule) => {
                            
                            if(window.doFind){
                                //console.log(index+') hago doFind. window.doFind: '+window.doFind);
                                //console.log('Bible book: '+bq.Books[book].FullName);
            
                                //console.log(bookModule);
                                //показываю в каких книгах ищу
                                document.querySelector(".f_book .book_name").innerHTML = bq.Books[book].FullName;
        
                                var nb = bookModule.split('<h4>');//делю файл на главы
                                //console.log(nb);
                                
                                nb = nb.filter(elm => elm);//удаляю пустые елементы массива
                                //console.log(nb);
        
                                var arr_chapters = nb;
                                //arr_chapters.shift();//elimino index0 ('<h2></h2>\n')
        
                                arr_chapters.forEach( (el_ch, i_ch) => {
                                    //console.log(el_ch);
                                    let chapter = i_ch;
                                    let ChapterId = i_ch;
                                    
                                    if(el_ch.includes('<p>')){
                                        var arr_verses = el_ch.split('<p>');
                                        //console.log(arr_verses);
                                        
                                        //Recorrer todos los verses
                                        arr_verses.forEach((el,i) => {
        
                                            if(el.includes('</p>')){
                                                var arr_p_text = el.split('</p>');
                                                var p_Text = arr_p_text[0];
                                            }else{
                                                var p_Text = el;
                                            }
                                            //console.log('p_Text: '+p_Text); 
        
                                            var arr_p = p_Text.split(' ');
                                            var VerseId = arr_p[0];
                                            //console.log('VerseId: '+VerseId);
        
                                            var VerseText = '';
                                            for(let index = 1; index < arr_p.length; index++){
                                                VerseText += arr_p[index] + ' ';
                                                //console.log('arr_p['+index+']: '+arr_p[index]);
                                            }
                                            //console.log('VerseText: '+VerseText);
                                            
                                            if(VerseText != ''){
                                                //VerseText = removeTags(VerseText);//solo quita los tag's pero deja el contenido de tags pares. de '<S>H430</S>' => 'H430' 
                                                //console.log('sin tags --- VerseText: '+VerseText);

                                                if(search_only_in_text_without_StrongTags){
                                                    if(bq.StrongNumberTags == 'Y' && bq.StrongNumberTagStart != '' && bq.StrongNumberTagEnd != ''){
                                                        VerseText = removeTagsWithStrongNumber(VerseText, bq.StrongNumberTagStart, bq.StrongNumberTagEnd);
                                                    }
                                                }
                                            }
        
        
                                            //Si hay palabras para buscar...
                                            if(arr_words.length > 0){
                                                
                                                //tipos de busqueda
                                                var is_match = false;
        
        
                                                //=======================================================================//  
                                                //0. por defecto - nada marcado //ok
                                                //=======================================================================//  
                                                if(!cbox1.checked && !cbox2.checked && !cbox3.checked && !cbox7.checked){
                                                    let arr_matches = [];  
                                                    //1. проверяю есть ли каждое слово из фразы в стихе                                      
                                                    arr_words.forEach(w => {
                                                        if(accent_match == 'Y'){//cbox6
                                                            if(no_part_word == 'Y'){//cbox4
                                                                var arr_no_part_word = [];
                                                                w = "^" +w +"$";//entera palabra del array, no parte
                                                                var regex_w = RegExp(w, tipo);
                                                                VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                    if(removeSymbols(el).match(regex_w)){
                                                                        //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                        arr_no_part_word.push(1);
                                                                    }else{
                                                                        //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                        arr_no_part_word.push(0);
                                                                    } 
                                                                });
                                                                if(arr_no_part_word.includes(1)){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(no_part_word == 'N'){
                                                                var regex_w = RegExp(w, tipo);
                                                                arr_result_m = VerseText.match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        }else if(accent_match == 'N'){
                                                            if(no_part_word == 'Y'){
                                                                var arr_no_part_word = [];
                                                                w = "^" +w +"$";//entera palabra del array, no parte
                                                                var regex_w = RegExp(removeAccents(w), tipo);
                                                                removeAccents(VerseText).split(' ').filter(elm=>elm).forEach(el=> {
                                                                    if(removeSymbols(el).match(regex_w)){
                                                                        //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                        arr_no_part_word.push(1);
                                                                    }else{
                                                                        //console.log('--- removeSymbols(el) ('+removeSymbols(el)+') NO match regex_w: '+false);
                                                                        arr_no_part_word.push(0);
                                                                    } 
                                                                });
                                                                if(arr_no_part_word.includes(1)){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(no_part_word == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        }
                                                    });
                                                    //console.log('Word. w: ', w);
                                                    //console.log('VerseText: ', VerseText);
                                                    if(!arr_matches.includes(0)){//когда все слова из фразы есть в стихе
                                                        //2. в цикле отмечаю красным все совпадения, но уже не нужно arr_matches.push()
                                                        arr_words.forEach(w => {
                                                            if(accent_match == 'Y'){//cbox6
                                                                if(no_part_word == 'Y'){//cbox4
                                                                    var arr_VerseText_red = [];
                                                                    var regex_w = RegExp(w, tipo);                                                       
                                                                    VerseText.split(' ').filter(elm=>elm).forEach(el=> {
                                                                        if(removeSymbols(el).match(regex_w)){
                                                                            //console.log('removeSymbols(el) ('+removeSymbols(el)+') match regex_w: '+true);
                                                                            el = el.replace(regex_w, function (x) {
                                                                                return '<b class="f_red">' + x + '</b>';
                                                                            });
                                                                            arr_VerseText_red.push(el);
                                                                        }else{
                                                                            //console.log('--- el ('+el+') NO match regex_w: '+false);
                                                                            arr_VerseText_red.push(el);
                                                                        } 
                                                                    });
                                                                    VerseText = arr_VerseText_red.join(' ');
                                                                    //console.log('VerseText: ', VerseText);
                                                                }else if(no_part_word == 'N'){
                                                                    var regex_w = RegExp(w, tipo);
                                                                    arr_result_m = VerseText.match(regex_w);
                                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                    if(count_m > 0){
                                                                        VerseText = VerseText.replace(regex_w, function (x) {
                                                                            return '<b class="f_red">' + x + '</b>';
                                                                        });
                                                                    }
                                                                }
                                                            }else if(accent_match == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                        return '{' + x + '}';
                                                                    });
                                                                    var text_original = VerseText;
                                                                    var text_marcas = prepararTextMarcas(text_marcas);
                                                                    VerseText = markRed(text_original, text_marcas);
                                                                }
                                                            }
                                                        });
                                                        is_match = true;
                                                        count_m_total += count_m;
                                                        arr_result_m_total.push(arr_result_m);
                                                        //console.log('count_m_total: ', count_m_total);
                                                        //console.log('arr_result_m_total: ', arr_result_m_total);
                                                        //console.log('VerseText: ', VerseText);
        
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//  
                                                //end //0. por defecto - nada marcado //ok                                 
                                                //=======================================================================//                                    
                                                
        
                                                //=======================================================================//                                    
                                                //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                //=======================================================================//
                                                if(cbox1.checked){
                                                    let arr_matches = [];
                                                    if(no_part_word == 'Y'){
                                                        arr_words.forEach(w => {
                                                            if(no_part_word == 'Y'){
                                                                // w = "\\b" +w +"\\b";//palabras enteras// exacta coincidencia
                                                                w = "\\B" +w +"\\B";//marcar si 'w' está rodeada por otras letras dentro de 'aawaa'.//true
                                                            }
                                                            if(accent_match == 'Y'){
                                                                var regex_w = RegExp(w, tipo); 
                                                                arr_result_m = VerseText.match(regex_w);
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                    VerseText = VerseText.replace(regex_w, function (x) {
                                                                        return '<b class="f_red">' + x + '</b>';
                                                                    });
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }else if(accent_match == 'N'){
                                                                var regex_w = RegExp(removeAccents(w), tipo); 
                                                                arr_result_m = removeAccents(VerseText).match(regex_w);;
                                                                count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                                if(count_m > 0){
                                                                    arr_matches.push(1);
                                                                    var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                        return '{' + x + '}';
                                                                    });
                                                                    var text_original = VerseText;
                                                                    var text_marcas = prepararTextMarcas(text_marcas);
                                                                    VerseText = markRed(text_original, text_marcas);
                                                                    count_m_total += count_m;
                                                                    arr_result_m_total.push(arr_result_m);
                                                                }else{
                                                                    arr_matches.push(0);
                                                                }
                                                            }
                                                        });
                                                        if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                            is_match = true;
                                                        }else{
                                                            is_match = false;
                                                        }
                                                    }else if(no_part_word == 'N'){
                                                        if(accent_match == 'Y'){
                                                            words = arr_words.join('|');
                                                            var regex1 = RegExp(words, tipo);//buscar todo
                                                            arr_result_m = VerseText.match(regex1);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                is_match = true;
                                                                count_m_total += count_m;
                                                                arr_result_m_total.push(arr_result_m);
                                                                VerseText = VerseText.replace(regex1, function (x) {
                                                                    return '<b class="f_red">' + x + '</b>';
                                                                });
                                                            }else{
                                                                is_match = false;
                                                            } 
                                                        }else if(accent_match == 'N'){
                                                            words = arr_words.join('|');
                                                            var regex_w = RegExp(removeAccents(words), tipo); 
                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                arr_matches.push(1);
                                                                var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                    return '{' + x + '}';
                                                                });
                                                                var text_original = VerseText;
                                                                text_marcas = prepararTextMarcas(text_marcas);
                                                                VerseText = markRed(text_original, text_marcas);
                                                                //console.log('VerseText: '+VerseText);
                                                            }else{
                                                                arr_matches.push(0);
                                                            }
                                                            if(arr_matches.includes(1)){//si por lo menos hay 1 match
                                                                is_match = true;
                                                                count_m_total += count_m;
                                                                arr_result_m_total.push(arr_result_m);
                                                            }else{
                                                                is_match = false;
                                                            }
                                                        }
                                                    }
                                                }
                                                //=======================================================================//
                                                //end //1. - искомое содержит хотя бы одно слово ('Иисус Христос' или 'Иисус' или 'Христос') //ok
                                                //=======================================================================//
        
        
                                                //=======================================================================//
                                                //2. - //cлова идут в заданном порядке //ok
                                                //=======================================================================//
                                                if(cbox2.checked){
                                                    //console.log('//tipo búsqueda --- //2. - //cлова идут в заданном порядке');
                                                    let arr_matches = [];
                                                    let arr_matches_w = [];//matches en words
                                                    let arr_regex_w = [];
                                                    let arr_regex_w_l = [];//для сравнения
                                                    arr_words.forEach( (w,i,arr_w) => {
                                                        if(accent_match == 'Y'){
                                                            var regex_w = RegExp(w, tipo);
                                                            arr_regex_w.push(regex_w);
                                                            var regex_w_l = (typeof w != 'undefined') ? RegExp(w.toLowerCase(), tipo) : RegExp(w, tipo);//для сравнения
                                                            arr_regex_w_l.push(regex_w_l);
                                                            arr_result_m = VerseText.match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                if(typeof arr_w[i+1] != 'undefined'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = VerseText.indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                        var index_next_w = VerseText.indexOf(arr_w[i+1], index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+VerseText);
                                                                            //console.log('caso2a. index_first_w: '+index_first_w);
                                                                            //console.log('caso2a. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = VerseText.split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '<b class="f_red">' + x + '</b>';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            VerseText = arr_VerseText_a_ed.join(' ');
                                                                            //console.log(VerseText);
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }else if(case_sens == 'i'){//все равно какие буквы
                                                                        //превращаю в мал. буквы только для сравнения.
                                                                        var index_first_w = VerseText.toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                        var index_next_w = VerseText.toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+VerseText);
                                                                            //console.log('VerseText.toLowerCase(): '+VerseText.toLowerCase());
                                                                            //console.log('caso2b. index_first_w: '+index_first_w);
                                                                            //console.log('caso2b. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = VerseText.split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                    var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);
                                                                                    var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '<b class="f_red">' + x + '</b>';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            VerseText = arr_VerseText_a_ed.join(' ');
                                                                            //console.log(VerseText);
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }                                                    
                                                                }
                                                            }    
                                                        }else if(accent_match == 'N'){
                                                            var regex_w = RegExp(removeAccents(w), tipo);
                                                            arr_regex_w.push(regex_w);
                                                            var regex_w_l = (typeof w != 'undefined') ? RegExp(removeAccents(w).toLowerCase(), tipo) : RegExp(removeAccents(w), tipo);//для сравнения
                                                            arr_regex_w_l.push(regex_w_l);
                                                            arr_result_m = removeAccents(VerseText).match(regex_w);
                                                            count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                            if(count_m > 0){
                                                                //console.log('ok --- regex_w match arr_words. w: '+w);
                                                                if(typeof arr_w[i+1] != 'undefined'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = removeAccents(VerseText).indexOf(arr_w[i]);//The indexOf() method is case sensitive.
                                                                        var index_next_w = removeAccents(VerseText).indexOf(arr_w[i+1], index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('removeAccents(VerseText): '+removeAccents(VerseText));
                                                                            //console.log('caso2a. index_first_w: '+index_first_w);
                                                                            //console.log('caso2a. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a == arr_w[i+sovpad]) ? true : false ;
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = RegExp(arr_w[i+sovpad], tipo);
                                                                                    var sovpad_word = (el_a.match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = removeAccents(el_a).replace(regex_aw, function (x) {
                                                                                        return '{' + x + '}';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            var text_original = VerseText;
                                                                            var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                            VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                            //console.log('VerseText: '+VerseText); 
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }else if(case_sens == 'i'){//все равно какие буквы
                                                                        //превращаю в мал. буквы только для сравнения.
                                                                        var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i].toLowerCase());//The indexOf() method is case sensitive.
                                                                        var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_w[i+1].toLowerCase(), index_first_w);
                                                                        if(index_first_w < index_next_w){
                                                                            //console.log('VerseText: '+removeAccents(VerseText));
                                                                            //console.log('VerseText.toLowerCase(): '+removeAccents(VerseText).toLowerCase());
                                                                            //console.log('caso2b. index_first_w: '+index_first_w);
                                                                            //console.log('caso2b. index_next_w: '+index_next_w);
                                                                            let arr_VerseText_a = removeAccents(VerseText).split(' ');
                                                                            let arr_VerseText_a_ed = [];
                                                                            for (let a = 0, sovpad = 0; a < arr_VerseText_a.length; a++) {
                                                                                let el_a = arr_VerseText_a[a];
                                                                                if(no_part_word == 'Y'){
                                                                                    //var regex_aw = RegExp(arr_w[i+sovpad].toLowerCase(), tipo);//antes y ok
                                                                                    var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                    if(arr_w[i+sovpad] < arr_w.length){
                                                                                        var sovpad_word = (el_a.toLowerCase() == arr_w[i+sovpad].toLowerCase()) ? true : false ;
                                                                                    }else{
                                                                                        var sovpad_word = (el_a.toLowerCase() == arr_w[arr_w.length-1].toLowerCase()) ? true : false ;
                                                                                    }
                                                                                }else{//no_part_word == 'N'
                                                                                    var regex_aw = (arr_w[i+sovpad] < arr_w.length) ? RegExp(arr_w[i+sovpad].toLowerCase(), tipo) : RegExp(arr_w[arr_w.length-1].toLowerCase(), tipo) ;
                                                                                    var sovpad_word = (el_a.toLowerCase().match(regex_aw)) ? true : false ;
                                                                                }
                                                                                //si 'Иисус' es la última palabra de frase buscada 'Христос Иисус'
                                                                                if(sovpad_word && sovpad < arr_words.length && i+sovpad < arr_words.length){
                                                                                    el_a = el_a.replace(regex_aw, function (x) {
                                                                                        return '{' + x + '}';
                                                                                    });
                                                                                    sovpad++;
                                                                                    arr_matches_w.push(1);
                                                                                    count_m_total += 1;
                                                                                    arr_result_m_total.push(arr_result_m);
                                                                                }
                                                                                if(sovpad == arr_words.length){
                                                                                    sovpad = 0;//reset para buscar otros maches en el mismo verso
                                                                                }
                                                                                arr_VerseText_a_ed.push(el_a); 
                                                                            }
                                                                            var text_original = VerseText;
                                                                            var text_marcas = prepararTextMarcas(arr_VerseText_a_ed.join(' '));
                                                                            VerseText = markRed(text_original, text_marcas);//FUNCIONA
                                                                            //console.log('VerseText: '+VerseText); 
                                                                        }else{
                                                                            arr_matches.push(0);
                                                                        }
                                                                    }                                                    
                                                                }
                                                            }
                                                        }//end //else if(accent_match == 'N')
                                                    });
                                                    if(!arr_matches.includes(0)){//si todos ocurrencias hay
                                                        for (let i = 0; i < arr_regex_w.length; i++) {
                                                            if(typeof arr_regex_w[i+1] != 'undefined' || typeof arr_regex_w_l[i+1] != 'undefined'){
                                                                if(accent_match == 'Y'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = VerseText.indexOf(arr_words[i]);
                                                                        var index_next_w = VerseText.indexOf(arr_words[i+1], index_first_w);    
                                                                    }if(case_sens == 'i'){//все равно какие буквы
                                                                        var index_first_w = VerseText.toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                        var index_next_w = VerseText.toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                    }
                                                                }else if(accent_match == 'N'){
                                                                    if(case_sens == ''){//различать маленькие и БОЛЬШИЕ буквы
                                                                        var index_first_w = removeAccents(VerseText).indexOf(arr_words[i]);
                                                                        var index_next_w = removeAccents(VerseText).indexOf(arr_words[i+1], index_first_w);    
                                                                    }if(case_sens == 'i'){//все равно какие буквы
                                                                        var index_first_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i].toLowerCase());
                                                                        var index_next_w = removeAccents(VerseText).toLowerCase().indexOf(arr_words[i+1].toLowerCase(), index_first_w);    
                                                                    }
                                                                }
                                                                if(index_first_w < index_next_w && arr_matches_w.includes(1)){
                                                                    //console.log('VerseText: '+VerseText);
                                                                    //console.log('VerseText: '+VerseText);
                                                                    VerseText = VerseText.replace(arr_regex_w[i], function (x) {
                                                                        return '<b class="f_red">' + x + '</b>';
                                                                    });
                                                                    //console.log(' con red --- VerseText: '+VerseText);
                                                                    //console.log('first arr_regex_w['+i+']: '+arr_regex_w[i] + ' --- index_first_regex: '+index_first_regex);
                                                                    //console.log('second arr_regex_w['+(i+1)+']: '+arr_regex_w[i+1]+ ' --- index_next_regex: '+index_next_regex);                                                        
                                                                    is_match = true;
                                                                }else{
                                                                    is_match = false;
                                                                }
                                                            }
                                                        }//end for
                                                        //quito tag's sobrantes de las coincidencias con for
                                                        if(is_match){
                                                            let tag_f_red_start = '';
                                                            let tag_f_red_end = '';
                                                            //console.log(' inicio tag_f_red_start: '+tag_f_red_start);
                                                            //console.log(' inicio tag_f_red_end: '+tag_f_red_end);
                                                            for (let index = 0; index < arr_words.length; index++) {
                                                                tag_f_red_start += '<b class="f_red">';
                                                                tag_f_red_end += '</b>';
                                                                //console.log(' en for --- tag_f_red_start: '+tag_f_red_start);
                                                                //console.log(' en for --- tag_f_red_end: '+tag_f_red_end);
                                                                if(index > 0){
                                                                    VerseText = VerseText.replace(tag_f_red_start,'<b class="f_red">');
                                                                    VerseText = VerseText.replace(tag_f_red_end,'</b>'); 
                                                                    //console.log(' en for --- VerseText: '+VerseText);
                                                                }                                                                        
                                                            }
                                                            //console.log(' despues de for --- VerseText: '+VerseText);
                                                        }                                           
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//
                                                //end //2. - //cлова идут в заданном порядке //ok
                                                //=======================================================================//
                                                
        
                                                //=======================================================================//
                                                //3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                //=======================================================================//
                                                if(cbox3.checked){
                                                    var words = arr_words.join(' ');
                                                    VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                    var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                    VerseText = arr_VerseText_or.join(' ');
                                                    if(accent_match == 'Y'){
                                                        var regex_w = RegExp(words, tipo);
                                                        arr_result_m = VerseText.match(regex_w);
                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                        if(count_m > 0){
                                                            VerseText = VerseText.replace(regex_w, function (x) {
                                                                return '<b class="f_red">' + x + '</b>';
                                                            });
                                                            is_match = true;
                                                            count_m_total += count_m;
                                                            arr_result_m_total.push(arr_result_m);
                                                        }else{
                                                            is_match = false;
                                                        } 
                                                    }else if(accent_match == 'N'){
                                                        var regex_w = RegExp(removeAccents(words), tipo);
                                                        arr_result_m = removeAccents(VerseText).match(regex_w);
                                                        count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                        if(count_m > 0){
                                                            var text_marcas = removeAccents(VerseText).replace(regex_w, function (x) {
                                                                return '{' + x + '}';
                                                            });
                                                            var text_original = VerseText;
                                                            var arr_frases = prepararFrases(text_original,text_marcas);
                                                            var frase_original = arr_frases[0];
                                                            var frase_exacta = arr_frases[1];
                                                            //console.log('frase_original: '+frase_original);
                                                            //console.log('frase_exacta: '+frase_exacta);
                                                            text_marcas = prepararTextMarcas(frase_exacta);                                                            
                                                            VerseText = markRed(frase_original, text_marcas);//FUNCIONA
                                                            //console.log('VerseText: '+VerseText);
                                                            VerseText = VerseText.replace(/¬/g,' ');//quito lo puesto temporalmente
                                                            is_match = true;
                                                            count_m_total += count_m;
                                                            arr_result_m_total.push(arr_result_m);
                                                        }else{
                                                            is_match = false;
                                                        }
                                                    }
                                                }
                                                //=======================================================================//
                                                //end 3. - //искать точную фразу  'Иисус Христос' как одно слово //ok
                                                //=======================================================================//
                                                
                                                
                                                //=======================================================================//
                                                //7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                //=======================================================================//
                                                if(cbox7.checked){
                                                    var words = arr_words.join(' ');
                                                    VerseText = VerseText.replace(/(\n|\t|\r)/g,'');
                                                    var arr_VerseText_or = VerseText.split(' ').filter(e=>e);
                                                    VerseText = arr_VerseText_or.join(' ');
                                                    var regex_w = RegExp(words, tipo);
                                                    var arr_VerseText_con_sn = [];
                                                    var arr_sn = [];//arr de strong numbers finded
                                                    arr_VerseText_or.forEach(el=>{  
                                                        if(el.includes('<S>') && el.includes('</S>')){//number strong 
                                                            //console.log('el: '+el);
                                                            let sNumber_sin_tags = removeTags(el); 
                                                            //console.log('sNumber_sin_tags: '+sNumber_sin_tags);
                                                            if(sNumber_sin_tags == words){
                                                                //console.log('sNumber_sin_tags == words');
                                                                arr_sn.push(sNumber_sin_tags);
                                                                let sNumber_con_tags = el.replace(regex_w, function (x) {
                                                                    return '<b class="f_red">' + x + '</b>';
                                                                }); 
                                                                el = sNumber_con_tags;
                                                                //console.log('nuevo el: '+el);
                                                                arr_VerseText_con_sn.push(el);//con sn red
                                                            }else{
                                                                arr_VerseText_con_sn.push(el);
                                                            }
                                                        }else{
                                                            arr_VerseText_con_sn.push(el);
                                                        }
                                                    });
                                                    //console.log('arr_sn: '+arr_sn);
                                                    VerseText = arr_VerseText_con_sn.join(' ');
                                                    //console.log('------------- 2374 --- con StrongNumber --- VerseText: '+VerseText);
                                                    arr_result_m = arr_sn;
                                                    count_m = (arr_result_m != null) ? arr_result_m.length : 0 ;
                                                    if(count_m > 0){
                                                        is_match = true;
                                                        count_m_total += count_m;
                                                        arr_result_m_total.push(arr_result_m);
                                                    }else{
                                                        is_match = false;
                                                    }
                                                }
                                                //=======================================================================//
                                                //end 7. - //Искать только номер Стронга (если есть) Пример: Искать толко номер Стронга <S>H430</S>.
                                                //=======================================================================//
        
                                            }//end //if(arr_words.length > 0)
        
        
        
                                            //Matches
                                            if(is_match){
                                                //console.log('VerseText regex1: '+VerseText.match(regex1));
                                                //console.log('VerseText: '+VerseText);
        
                                                const span_num_find = document.createElement('span');
                                                span_num_find.className = 'sp_f';
                                                count_f++;
                                                span_num_find.innerText = count_f;
        
                                                var p = document.createElement('p');
                                                p.id = Translation +'__'+book + '__' + chapter + '__' + VerseId;
                                
                                                var a = document.createElement('a');
                                                a.href = '#';
                                                a.classList.add = 'blink';
                                                let aLink = bq.Books[book].ShortNames[0] + ChapterId + ':' + VerseId;
                                                a.innerHTML = aLink;
                                                a.setAttribute('onclick',`goToLinkFromFind('${Translation}', '${aLink}')`);//funciona
                                                
                                                p.append(span_num_find);
                                                p.append(a);
                                                p.append(' '); 
                        
                                                const span_vt = document.createElement('span');
                                                span_vt.className = 'vt';//text de Verse para aplicar HTMLFilter si hay
                        
                        
                                                //Номера Стронга в стихах (RST+)
                                                if(bq.StrongNumbers == "Y"){
                                                    let t = VerseText;
                                                    var arr_t = t.split(' ');
                        
                                                    arr_t.forEach((el,i) => {    
                                                        
                                                        //element of string is Strong Number
                                                        if(!isNaN(parseInt(el)) || el == '0'){//number                         
                                                            const span_strong = document.createElement('span');
                                                            if(btnStrongIsActive){
                                                                span_strong.className = 'strong show strongActive'; 
                                                            }else{
                                                                span_strong.className = 'strong'; 
                                                            }
                                                            let last_char = (el.length > 1) ? el.charAt(el.length-1) : "" ;
                        
                                                            //si ultimo carácter es string
                                                            if(last_char != '' && isNaN(last_char)){
                                                                let el_number = el.substring(0,el.length-1);
                                                                let el_string = last_char;
                                                                span_strong.innerHTML = el_number;
                                                                p.append(span_strong);
                                                                p.append(el_string);
                                                            }else{//es number
                                                                span_strong.innerHTML = el;
                                                                p.append(span_strong);
                                                            }
                        
                                                        }else{//is word
                                                            p.append(' ');
                                                            if(btnStrongIsActive){
                                                                if(el.includes('<S>')){
                                                                    el = el.replace('<S>','<S class="show strongActive">');
                                                                }
                                                            }
                                                            p.append(el);
                                                        }
                                                    });
                                                    p.innerHTML.trim();
                        
                                                    //console.log('antes: ' + p.innerHTML);
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                    //console.log('despues: '+p.innerHTML);
                        
                                                    if(btnStrongIsActive && p.innerHTML.includes('strongActive')){
                                                        p.querySelectorAll('.strongActive').forEach((el)=>{
                                                            el.addEventListener('click', ()=>{
                                                                //console.log('2. book: '+book);
                                                                //console.log('2. el.innerHTML: '+el.innerHTML);
                                                                if(el.innerHTML.includes('H') || el.innerHTML.includes('G')){//rstStrongRed G3056 /H3056
                                                                    //getStrongNumber(el.innerHTML);
                                                                    getStrongNumber(el.innerText);
                                                                }else{//rstStrong
                                                                    lang = (book >= 39) ? 'Grk' : 'Heb' ;
                                                                    //getStrongNumber(el.innerHTML, lang);
                                                                    getStrongNumber(el.innerText, lang);
                                                                }
                                                            });
                                                        }); 
                                                    }
                                                }
                        
                                                //Примечания редактора в стихах (RSTi2)
                                                if(bq.Notes == 'Y'){
                                                    let t = VerseText;
                        
                                                    if(t.includes(bq.NoteSign)){// '*'
                                                        let arr_t0 = t.split(bq.NoteSign);
                                                        let before_Note = arr_t0[0];
                        
                                                        if(t.includes(bq.StartNoteSign) && t.includes(bq.EndNoteSign)){
                                                            let arr_t1 = t.split(bq.StartNoteSign);//'[('
                                                            let arr_t2 = arr_t1[1].split(bq.EndNoteSign);//')]'
                                                            let text_Note = arr_t2[0];
                                                            let after_Note = arr_t2[1];
                        
                                                            const span_t = document.createElement('span');
                                                            span_t.className = 'tooltip';
                                                            span_t.setAttribute('data-tooltip',text_Note);
                                                            span_t.innerHTML = bq.NoteSign;
                        
                                                            span_t.addEventListener('mouseenter', function(){
                                                                showTooltip(this);
                                                            });
                                                            span_t.addEventListener('mouseleave', function(){
                                                                hideTooltip(this);
                                                            });
                                                                        
                                                            before_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(before_Note) : before_Note ;
                                                            span_vt.append(before_Note);
                                                            span_vt.append(span_t);
                                                            after_Note = (bq.HTMLFilter == 'Y') ? htmlEntities(after_Note) : after_Note ;
                                                            span_vt.append(after_Note);
                        
                                                            p.append(span_vt);//antes
                                                            if(bq.HTMLFilter == 'Y'){//aki en find si lo meto
                                                                p.innerHTML = htmlEntities(p.innerHTML);
                                                            }
                                                        }
                                                    }else{
                                                        //p.append(VerseText);//antes
                                                        span_vt.append(VerseText);
                                                        p.append(span_vt);
                        
                                                        if(bq.HTMLFilter == 'Y'){
                                                            p.innerHTML = htmlEntities(p.innerHTML);
                                                        }
                                                    }
                                                    //SIMULTANEAMENTE CON '*' Y '<' Y '> ' la función htmlEntities() DESHABILITA tooltip.
                                                }
                        
                                                //Оглавления в стихах (NRT)
                                                if(bq.Titles == 'Y'){
                                                    let t = VerseText;
                        
                                                    if(t.includes(bq.StartTitleSign) && t.includes(bq.EndTitleSign)){
                                                        let arr_t1 = t.split(bq.StartTitleSign);//'[('
                                                        let before_Title = arr_t1[0];
                                                        let arr_t2 = arr_t1[1].split(bq.EndTitleSign);//')]'
                                                        let text_Title = arr_t2[0];
                                                        let after_Title = arr_t2[1];
                        
                                                        const span_title = document.createElement('span');
                                                        span_title.className = 'verse_title';
                                                        span_title.innerHTML = text_Title;
                        
                                                        p.append(before_Title);
                                                        p.append(span_title);
                                                        p.append(after_Title);
                                                    }else{
                                                        p.append(VerseText);
                                                    }
                        
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
                        
                                                //Нет ни Номеров Стронга, ни Примечаний ни Оглавлений
                                                if(bq.StrongNumbers == "N" && bq.Notes == 'N' && bq.Titles == 'N'){
                                                    //p.append(VerseText);//antes
                                                    span_vt.append(VerseText);
                                                    p.append(span_vt);
                        
                                                    if(bq.HTMLFilter == 'Y'){
                                                        p.innerHTML = htmlEntities(p.innerHTML);
                                                    }
                                                }
        
                                                result_finded.push(p);
                                                
                                            }      
                                        });
                                    }
                                });
                            
                            }else{
                                //console.log(index+') stop doFind. window.doFind: '+window.doFind);
                            }//end else (window.doFind)
        
        
        
                            //Formar links para resultados de búsqueda
                            if(result_finded.length > 0){
                                
                                //console.log('2. abajo result_finded:');
                                //console.log(result_finded);
        
                                //console.log('2. abajo arr_result_m_total:');
                                //console.log(arr_result_m_total);
                            
                                if(document.querySelectorAll('.res_f').length > 0){
                                    document.querySelectorAll('.res_f').forEach(el=>{
                                       // el.remove();//elimino resultado anterior si lo hay
                                    })
                                }                    
        
                                //inserto resultado de búsqueda                        
                                //document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span title="Стихов">(${count_f})</span> <span class="res_m f_r" title="Совпадений">[${count_m_total}]</span>`;
                                document.querySelector('.res_f').innerHTML = `"<b class="f_r-ed">${words_input}</b>" <span>(${count_f})</span><span class="tooltip" data-tooltip="Количество стихов: <span class='f_r'>${count_f}</span> <br>Количество совпадений: ${count_m_total}" onmouseenter="showTooltip(this)" mouseleave="hideTooltip(this)">*</span> <span class="res_m f_r">[${count_m_total}]</span>`;
                                mySizeFind();//altura de div_find_body
        
                                var arr_l = [];
                                var limit_n = limit_val;
                                for (let i = 0; i < result_finded.length; i++) {
                                    const el = result_finded[i];
                                    //console.log(el);
        
                                    if(i > limit_n - 2 || i == result_finded.length - 1){
                                        arr_l.push(el);
                                        result_show.push(arr_l); 
                                        limit_n += limit_val;
                                        arr_l = [];
                                    }else{
                                        arr_l.push(el);
                                    }                            
                                }
                                //console.log('result_show');
                                //console.log(result_show);
        
                                window.res_show = result_show;
                                //console.log('res_show');
                                //console.log(res_show);
        
                                if(result_show != null){
                                    if(index == book_end){
                                        //console.log('3. con el ultimo book de find --- llamo mostrar_res_show(0)');
                                        mostrar_res_show(0);//por defecto los primeros 50
                                    } 
                                }
                                result_show = [];
        
                                if(index == book_end){
                                    stopFindWords();//показываю кнопку 'Find'
                                }
                                
                            }else{
                                if(index == book_end && result_finded.length == 0){
                                    mostrar_no_res();
                                    stopFindWords();//показываю кнопку 'Find'
                                }
                            }                    
                        })
                        .catch(error => { 
                            // Código a realizar cuando se rechaza la promesa
                            console.log('2. error promesa find: '+error);
                        }); 
                        
                        /*if(window.doFind){
                            console.log(index+') fin for. hago doFind. window.doFind: '+window.doFind);
                        }else{
                            alert(index+') fin for. stop doFind. window.doFind: '+window.doFind);
                            break;
                        }*/
        
                    }//end for
                }        
        
            })
            .then(()=>{
                //console.log('res_show');
                //console.log(res_show);
            })
            .catch(error => { 
                // Código a realizar cuando se rechaza la promesa
                console.log('error promesa find: '+error);
            });

        }

    }else{
        console.log('Translation no está seleccionada');
    }
    
}//end - findWords()


function mostrar_res_show(index){
    //console.log('=== function mostrar_res_show() ===');

    var div_find_body = document.querySelector('#find_body');
    div_find_body.innerHTML = '';//reset
    //console.log(' abajo window.res_show: ');
    //console.log(window.res_show);

    const p_footer = document.createElement('p');
    p_footer.className = 'wr_res_link';

    for(let index = 0; index < res_show.length; index++){
        const res_link = document.createElement('span');
        res_link.className = 'res_link';
        res_link.setAttribute('onclick', `mostrar_res_show(${index}); show_sn_finded();`);
        res_link.innerHTML = res_show[index][0].querySelector('.sp_f').innerText + '-' + res_show[index][res_show[index].length-1].querySelector('.sp_f').innerText ;
        p_footer.append(res_link); 
        
        //para ejecutar 1 vez
        if(index == 0){
            var ejecutar_1vez = true; 
        }
    }

    //añado los versiculos encontrados en la 1-ra pagina de redultados encontrados abajo en div_find_body
    for(let i = 0;  i < res_show[index].length; i++){
        const el = res_show[index][i];
        //добавляю стих в див 
        div_find_body.append(el);        
    }

    div_find_body.append(p_footer); 
    document.querySelectorAll('.res_link')[index].classList.add('active');
    document.querySelector('#find_body').scrollTop = 0;

    //cuando todo está añadido en div_find_body, hago esto...
    if(ejecutar_1vez == true){//solo ejecuto 1 vez
        //let inpt_nav = document.querySelector('#inpt_nav');
        let trans_find = (inpt_nav.dataset.trans != '') ? inpt_nav.dataset.trans : div_trans1.dataset.trans ;
        let trans_find_obj = arrFavTransObj.find(v => v.Translation === trans_find);
        if(cbox7.checked &&
            btnStrong.classList.contains('btn_active') &&    
            typeof trans_find_obj.StrongNumbers !== 'undefined' && 
            trans_find_obj.StrongNumbers == 'Y' && 
            trans_find_obj.StrongNumberTagStart == '<S>' && 
            trans_find_obj.StrongNumberTagEnd == '</S>' 
            ){
            //muestro block de botones finded_s y all_s
            let wr_strong_btns = document.querySelector('.wr_strong_btns');
            wr_strong_btns.style.display = 'block';
            mySizeFind();//altura de div_find_body
            if(wr_strong_btns.querySelector('.s_active').id == 'btn_finded_s'){
                //console.log('llamo showOnlyStrongNumberFinded() desde mostrar_res_show()');
                showOnlyStrongNumberFinded();
            }else{//btn_all_s
                //console.log('llamo showAllStrongNumber() desde mostrar_res_show()');
                showAllStrongNumber();
            }
        }
        var ejecutar_1vez = false; 
    }
    makeStrongNumbersActiveFind();
}

//Strong Numbers in findWords()
function show_sn_finded(){
    //si es visible block de finded_s 
    let wr_strong_btns = document.querySelector('.wr_strong_btns');
    if(wr_strong_btns!= null && wr_strong_btns.offsetHeight > 0){
        
        markarStrongNumberFinded();

        if(wr_strong_btns.querySelector('#btn_finded_s').classList.contains('s_active')){
            showOnlyStrongNumberFinded();
        }
        
        if(wr_strong_btns.querySelector('#btn_all_s').classList.contains('s_active')){
            showAllStrongNumber();
        }
    }else{
        return false;
    }    
}

function mostrar_no_res(){
        //console.log('=== function mostrar_no_res() ===');

        var div_find_body = document.querySelector('#find_body');
        var inpt_find = document.querySelector('#inpt_find');
        let count_words = inpt_find.value.trim().split(' ').length;
        words_show = (count_words > 1) ? 'вводимую фразу' : 'вводимое слово' ;

        document.querySelector(".res_f b").innerHTML = `${inpt_find.value.trim()}`;
        document.querySelector(".res_f span").innerHTML = '(0)';
        document.querySelector(".res_f span.tooltip").setAttribute('data-tooltip',`Количество стихов: <span class='f_r'>0</span> <br>Количество совпадений: 0`);
        document.querySelector(".res_f span.tooltip").setAttribute('onmouseenter',`showTooltip(this)`);
        document.querySelector(".res_f span.tooltip").setAttribute('onmouseleave',`hideTooltip(this)`);
        document.querySelector(".res_f span.tooltip").innerHTML = '*';
        document.querySelector(".res_m").innerHTML = '[0]';

        div_find_body.innerHTML = '';//reset
        const p_footer = document.createElement('p');
        p_footer.className = 'wr_res_link';

        let trans_busqueda = document.querySelector('.trans_name').textContent;
    
        const p_f = document.createElement('p');
        p_f.className = 'prim16 mr-5';
        p_f.innerHTML = `<span class="trans_in_find">Поиск в переводе: <b>${trans_busqueda}</b> </span>`;
        p_f.innerHTML += `По запросу "<b class="f_red">${inpt_find.value.trim()}</b>" ничего не найдено. Проверьте выбранный для поиска перевод Библии, ${words_show} или попробуйте изменить параметры.`;
        //добавляю стих в див 
        div_find_body.append(p_f);    
}





function hideShowHistNav(){
    let bl_hist = document.querySelector('.wr_hist_nav');
    if(bl_hist.style.display == 'none'){
        show_hist_nav();
    }else{
        close_hist_nav();
    }
}
function show_hist_nav(){
    let bl_hist = document.querySelector('.wr_hist_nav');
    let hist_nav_img = document.querySelector('#hist_nav img');
    hist_nav_img.classList.add('razv');
    bl_hist.style.display = 'block';
    mySizeNav();//altura de div_nav_body
}
function close_hist_nav(){
    let bl_hist = document.querySelector('.wr_hist_nav');
    let hist_nav_img = document.querySelector('#hist_nav img');
    hist_nav_img.classList.remove('razv');
    bl_hist.style.display = 'none';
    mySizeNav();//altura de div_nav_body
}


function hideShowHistFind(){
    let bl_hist = document.querySelector('.wr_hist_find');
    if(bl_hist.style.display == 'none'){
        show_hist_find();
    }else{
        close_hist_find();
    }
}
function show_hist_find(){
    let bl_hist = document.querySelector('.wr_hist_find');
    let hist_find_img = document.querySelector('#hist_find img');
    hist_find_img.classList.add('razv');
    bl_hist.style.display = 'block';
    mySizeFind();//altura de div_find_body
}
function close_hist_find(){
    let bl_hist = document.querySelector('.wr_hist_find');
    let hist_find_img = document.querySelector('#hist_find img');
    hist_find_img.classList.remove('razv');
    bl_hist.style.display = 'none';
    mySizeFind();//altura de div_find_body
}

function hideShowFindParams(){
    let bl_par = document.querySelector('.bl_par');
    let title_par_img = document.querySelector('.title_par img');

    if(bl_par.style.display == 'none'){
        bl_par.style.display = 'block';
        title_par_img.classList.add('razv');
    }else{
        bl_par.style.display = 'none';
        title_par_img.classList.remove('razv');
    }
    mySizeFind();//altura de div_find_body
}


function removeTags(str){
    if(str === null || str === ''){
      return false;
    }else{
      str = str.toString();
    }
    // Regular expression to identify HTML tags in
    // the input string. Replacing the identified
    // HTML tag with a null string.
    return str.replace(/(<([^>]+)>)/ig, '');
}

function removeTagsWithStrongNumber(str, tagStart = null, tagEnd = null){
    if(tagStart != null && tagStart != '' && tagEnd != null && tagEnd != ''){
        let arr_str = str.split(' ');
        for(let i = 0; i < arr_str.length; i++) {
            if(arr_str[i].includes(tagStart) && arr_str[i].includes(tagEnd)){
                //console.log(`inluyye tag`);
                arr_str.splice(i, 1);
              i--; // Ajustar el índice para evitar omitir elementos después de eliminar uno
            }
        }
        //console.log('arr_str: '+arr_str);
        let str_new = arr_str.join(' ');
        return str_new;    
    }else{
        return str;
    }
}
  
function removeAccents(str){
    return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
} 

function removeSymbols(str){
    return str.replace(/[.,\/#!?$%\^&\*;:{}=\-_`~()\n\r\t]/g, '');
} 

function hasAccents(word) {
    const regex = /[\p{M}]/gu;
    return regex.test(word.normalize('NFD'));
}


function prepararFrases(text_original,text_marcas){
    var arr_orig = text_original.split(' ');//de aki cojo las marcas
    var arr_marcas = text_marcas.split(' ');//de aki cojo las marcas
    var buscar_end = false;//default
    var arr_new = [];

    //reviso si en text_marcas no hay frase de checkbox3 '{Criso Jesus}' o '{Criso Dios Jesus}'
    //para convertir en '{Criso} {Jesus}' o '{Criso} {Dios} Jesus}'
    arr_marcas.forEach((el,i,arr)=>{
        if(el.length > 1 && el[0] == '{' && el[el.length-1] != '}' && buscar_end == false){//start con '{'
            el = el + '¬';
            arr_orig[i] = arr_orig[i] + '¬';
            //console.log('1. el: ', el);
            buscar_end = true;
        }else if(el.length > 0 && el[0] != '{' && el[el.length-1] != '}' && buscar_end == true){//dentro
            el = el + '¬';
            arr_orig[i] = arr_orig[i] + '¬';
            //console.log('2. el: ', el);
        }else if(el.length > 0 && el[0] != '{' && el[el.length-1] == '}' && buscar_end == true){//end con '}'
            //console.log('3. el: ', el);
            buscar_end = false;
        }else{
            //console.log('normal. el: ', el);
        }
        arr_new.push(el);
    });
    var text_orig_new = arr_orig.join(' ').replace(/¬ /g,'¬');
    var text_marcas_new = arr_new.join(' ').replace(/¬ /g,'¬');
    //console.log('text_orig_new: ', text_orig_new);
    //console.log('text_marcas_new: ', text_marcas_new);
    return [text_orig_new, text_marcas_new];
}


function prepararTextMarcas(text_marcas){
    var arr_marcas_pre = text_marcas.split(' ');//de aki cojo las marcas;
    var arr_marcas_fin = [];
    var arr_parse = [];
    arr_marcas_pre.forEach((el_em, i_em, arr_em)=>{
        if( (el_em.match(/{|}/g) != null && el_em.match(/{|}/g).length / 2) > 3){
            el_em.split('}').forEach((el,u)=>{
                if(u < 3){
                    el = el +'}'; 
                    //console.log('el con llave: ', el); 
                    arr_parse.push(el);
                }else{ 
                    el = el.replace(/{/g,''); 
                    //console.log('--- el sin llave: ', el);
                    arr_parse.push(el);
                }
            }); 
            //console.log('arr_parse: ');
            //console.log(arr_parse);
            el_em = arr_parse.join('');
        }
        arr_marcas_fin.push(el_em);
    });
    var text_marcas_new = arr_marcas_fin.join(' ');
    //console.log('nuevo text_marcas_new: ');
    //console.log(text_marcas_new);
    return text_marcas_new;
}


function markRed(text_original, text_marcas){
    var arr_orig = text_original.split(' ');//aki luego meto '<b class="f_red">'
    var arr_marcas = text_marcas.split(' ');//de aki cojo las marcas
    var arr_parts_word_orig = [];
    //Recorrer palabras del texto
    arr_orig.forEach((el,i,arr_or)=>{
        //console.log(el);
        if(arr_marcas[i].includes('{') && arr_marcas[i].includes('}')){
            //si hay solo una parte marcada con '{}' Ejemplo: 
            //1. '...{RAPIDA}'
            if( (arr_marcas[i].match(/{|}/g).length / 2) == 1){//ok                   
                var position_start = arr_marcas[i].indexOf('{'); //3 //Starting position of the character to replace
                var position_end   = arr_marcas[i].indexOf('}'); //10 //Ending position of the character to replace  
                //console.log('1. position_start: ', position_start);
                //console.log('1. position_end: ', position_end);
                var word_new = el.substring(0,position_start) + 
                            '<b class="f_red">'+ el.substring(position_start,position_end-1) + '</b>' + 
                            el.substring(position_end-1, el.length);
                //console.log('word_new: ', word_new);
                //console.log(arr_marcas[i]);
                arr_orig[i] = word_new;
            }else{//si hay más de una parte marcada con '{}' Ejemplo: 
                //2. '...{RAPIDA}mente{Dios}' //hay 2
                //3. '...{RAPIDA}mente{Dios}...{PODEROSO}...' //hay 3
                //console.log(arr_marcas[i]);
                var count_marcas = arr_marcas[i].match(/{|}/g).length / 2;//ya que son pareja '{}'
                //divido palabra por el fin de marca '}'
                var arr_parts = arr_marcas[i].split('}');
                var arr_word_new = [];                
                //a cada parte si tiene '{' le añado '}'
                arr_parts.forEach((el,y,arry)=>{
                    if(el.includes('{')){
                        //console.log('el: ', el);
                        //console.log( y + '). el.length: ', el.length);
                        //saco todos los indexes de '{' y '}'
                        //2. '...{RAPIDA}mente{Dios}'
                        if( (arr_marcas[i].match(/{|}/g).length / 2) == 2){//ok
                            var position_start = el.indexOf('{');//3
                            var position_end   = el.length;//10 // no tiene '}' por eso el.length                                
                            //console.log(y+'). position_start: ', position_start);
                            //console.log(y+'). position_end: ', position_end);
                            if(y == 0){
                                var firstPart_or = arr_or[i].slice(0, position_end-1);//-1 por el '{'
                                var secondPart_or = arr_or[i].slice(position_end-1);
                                arr_parts_word_orig[0] = firstPart_or;
                                arr_parts_word_orig[1] = secondPart_or;
                                //console.log(y+'). firstPart_or: ', firstPart_or);
                                //console.log(y+'). secondPart_or: ', secondPart_or);
                            }                            
                            //primera parte
                            if(y == 0){    
                                var word_new = arr_parts_word_orig[y].substring(0,position_start) + 
                                        '<b class="f_red">'+ arr_parts_word_orig[y].substring(position_start,position_end-1) + '</b>' + 
                                        arr_parts_word_orig[y].substring(position_end, arr_parts_word_orig[y].length);
                            }
                            //segunda parte
                            if(y == 1){
                                var word_new = arr_parts_word_orig[y].substring(0,position_start) + 
                                        '<b class="f_red">'+ arr_parts_word_orig[y].substring(position_start,position_end-1) + '</b>' + 
                                        arr_parts_word_orig[y].substring(position_end-1, arr_parts_word_orig[y].length);
                            }
                        }
                        //3. '...{RAPIDA}mente{Dios}...{PODEROSO}...'
                        if( (arr_marcas[i].match(/{|}/g).length / 2) == 3){
                            var position_start = el.indexOf('{');//3
                            var position_end   = el.length;//10 // no tiene '}' por eso el.length
                            //console.log(y+'). position_start: ', position_start);
                            //console.log(y+'). position_end: ', position_end);
                            if(y == 0){
                                var position1_start = arr_marcas[i].indexOf('{', 0);
                                //console.log('position1_start: ', position1_start);
                                var position1_end   = arr_marcas[i].indexOf('}', position1_start);
                                //console.log('position1_end: ', position1_end);
                                var position2_start = arr_marcas[i].indexOf('{', position1_end);
                                //console.log('position2_start: ', position2_start);
                                var position2_end   = arr_marcas[i].indexOf('}', position2_start);
                                //console.log('position2_end: ', position2_end);
                                var position3_start = arr_marcas[i].indexOf('{', position2_end);
                                //console.log('position3_start: ', position3_start);
                                var position3_end   = arr_marcas[i].indexOf('}', position3_start);
                                //console.log('position3_end: ', position3_end);
                                var firstPart_or = arr_or[i].slice(0, position1_end-1);//'01234'
                                var secondPart_or = arr_or[i].slice(position1_end-1, position2_end-1-2);
                                var thirdPart_or = arr_or[i].slice(position2_end-1-2, arr_or[i].length);
                                //console.log(y+'). firstPart_or: ', firstPart_or);
                                //console.log(y+'). secondPart_or: ', secondPart_or);
                                //console.log(y+'). thirdPart_or: ', thirdPart_or);
                                arr_parts_word_orig[0] = firstPart_or;
                                arr_parts_word_orig[1] = secondPart_or;
                                arr_parts_word_orig[2] = thirdPart_or;
                            }
                            //primera parte
                            if(y == 0){    
                                var word_new = arr_parts_word_orig[y].substring(0,position_start) + 
                                        '<b class="f_red">'+ arr_parts_word_orig[y].substring(position_start,position_end-1) + '</b>' + 
                                        arr_parts_word_orig[y].substring(position_end, arr_parts_word_orig[y].length);
                            }
                            //segunda parte
                            if(y == 1){
                                var word_new = arr_parts_word_orig[y].substring(0,position_start) + 
                                        '<b class="f_red">'+ arr_parts_word_orig[y].substring(position_start,position_end-1) + '</b>' + 
                                        arr_parts_word_orig[y].substring(position_end-1, arr_parts_word_orig[y].length);
                            }
                            //tercera parte
                            if(y == 2){
                                var word_new = arr_parts_word_orig[y].substring(0,position_start) + 
                                        '<b class="f_red">'+ arr_parts_word_orig[y].substring(position_start,position_end-1) + '</b>' + 
                                        arr_parts_word_orig[y].substring(position_end-1, arr_parts_word_orig[y].length);
                            }
                        }
                        //console.log('word_new: ', word_new);
                        arr_word_new.push(word_new);
                        //console.log('arr_word_new: ', arr_word_new);
                    }
                });
                arr_orig[i] = arr_word_new.join('');
                //console.log('arr_orig[i]: ', arr_orig[i]);
            }//end else                 
        }

        if( (arr_marcas[i].includes('{') || arr_marcas[i].includes('}')) && arr_marcas[i].includes(' ')){

        }
    });
    //console.log('arr_orig');
    //console.log(arr_orig);
    //console.log(' ');
    //console.log('arr_marcas');
    //console.log(arr_marcas);
    //console.log(' ');
    //console.log('arr_parts_word_orig');
    //console.log(arr_parts_word_orig);
    //console.log(' ');
    var text_red = arr_orig.join(' ');
    return text_red;
}



// updateTransFromActiveCol();

function updateTransFromActiveCol(){
    //let inpt_nav = document.querySelector('#inpt_nav');
    document.querySelectorAll('.colsInner').forEach(el=>{
        el.onclick = ()=>{
            let trans_of_col = el.parentElement.querySelector('.colsHead').dataset.trans;
            let id_of_col = el.parentElement.querySelector('.colsHead').id;
            //console.log('trans_of_col: '+trans_of_col+' --- id_of_col: '+id_of_col);
            if(typeof trans_of_col != 'undefined'){
                inpt_nav.dataset.divtrans = id_of_col;
                inpt_nav.dataset.trans = trans_of_col;
                document.querySelector('#s_book').click();//function sel(; click на 'Книга', чтобы загрузились названия книг выбраного модуля.
            }
        }
    });
}










//convertir links de Ruso a Español // contrario a la anterior checkLink()
function convertLinkFromRusToEsp(book, chapter, verse, to_verse = null){
    //console.log('=== function convertLinkFromRusToEsp() ===');
    //console.log('--- Convierto Псалом 118:63 en Psalmo 119:63 para TSK  u otra cosa.');

    var book = parseInt(book);
    var chapter = parseInt(chapter);
    var verse = parseInt(verse);
    var to_verse = parseInt(to_verse);

    //nuevos datos
    var bookNumber = book;
    var chapterNumber = chapter;
    var verseNumber = verse;
    var to_verseNumber = to_verse;


    //Convierto link Ruso (Пс. 22:1) -> en Español (Ps. 23:1) 
    //Convierto link Ruso (Пс. 118:63) -> en Español (Ps. 119:63) 
    switch (book) {

        case 3: //Числа
                if(chapter == 12){//12:X => 12:X (quito ultimo verse)
                    //todo ok
                }
                if(chapter == 13){//Числа 13:1 => Num.12:16 
                    if(verse == 1){
                        chapterNumber = 12;
                        verseNumber = 16;
                    }
                    if(verse >= 2){
                        verseNumber -= 1;//Чис.13:2 => Nm.13:1
                    }
                }
            break;

        case 5: //Иисус Навин
                if(chapter == 5){//Иис.Нав.5:16 => Jos.6:1                                    
                    if(verse == 16){
                        chapterNumber = 6;
                        verseNumber = 1;
                    } 
                }
                if(chapter == 6){//Иис.Нав.6:1 => Jos.6:2 ... Иис.Нав.6:26 => Jos.6:27
                    verseNumber += 1; 
                }
            break; 
            
        case 8: //1Samuel (1Царств) 
                if(chapter == 20){//1Цар.20:42-43 => 1Sam 20:42
                    if(verse == 43){
                        verseNumber = 42;
                    }
                }
                if(chapter == 23){//
                    //ok
                }
                if(chapter == 24){//1Цар.24:1 => 1S.23:29
                    if(verse == 1){
                        chapterNumber = 23;
                        verseNumber = 29;
                    }
                    if(verse > 1){
                        verseNumber -= 1;
                    }
                }
            break; 
        
        case 17: //Job 
                if(chapter == 39){//39:31-35 => 40:1-5 | 40:6-24 => 40: -5
                    if(verse >= 31){
                        chapterNumber = 40;
                        verseNumber -= 30;
                    }
                }
                if(chapter == 40){//40:1-19 => 40:6-24 
                    if(verse <= 19){
                        verseNumber += 5;
                    }
                    if(verse >= 20){
                        chapterNumber = 41;
                        verseNumber -= 19;
                    }
                }
                if(chapter == 41){//40:1-26 => 41:9-34
                    verseNumber += 8;
                }
            break; 

        case 18: //Psalmos 
                //Formula Rus => Esp //Пс.3:1 - 9:20 =>	Х : +1 *
                if(chapter >= 3 && chapter <= 8){
                    if(verse > 1){
                        verseNumber -= 1;
                    }
                }
                if(chapter == 9){//3:1 - 9:20 => Х : +1 *
                    if(verse >= 2 && verse <= 21){
                        verseNumber -= 1;
                    }
                    if(verse >= 22){
                        chapterNumber = 10;
                        verseNumber -= 21;
                    }
                }
                //Formula Rus => Esp  //Пс.X:1 => Ps.X+1:1 
                //+1 : Х
                if(
                    (chapter == 10) || 
                    (chapter >= 13 && chapter <= 16) || 
                    (chapter >= 22 && chapter <= 28) || 
                    (chapter >= 31 && chapter <= 32) || 
                    (chapter == 34) || 
                    (chapter == 36) || 
                    (chapter == 42) || 
                    (chapter == 49) || 
                    (chapter == 65) || 
                    (chapter >= 70 && chapter <= 73) || 
                    (chapter >= 77 && chapter <= 78) || 
                    (chapter == 81) || 
                    (chapter == 85) || 
                    (chapter == 86) || 
                    (chapter == 90) || 
                    (chapter >= 92 && chapter <= 100) || 
                    (chapter >= 102 && chapter <= 106) || 
                    (chapter >= 108 && chapter < 113) || 
                    (chapter >= 116 && chapter <= 138) || //revisar!
                    (chapter >= 140 && chapter <= 145) //revisar!
                ){
                    chapterNumber += 1;//Psalom 22:2 ruso => Salmo 23:2 español
                    
                }
                //Formula Rus => Esp //Пс.X+1:2 => Ps.X:1 //добавляю пустой стих сначала в исп перевод
                //+1 : -1
                if(
                        (chapter == 11) || //revisar!
                    (chapter == 12) || 
                    (chapter >= 17 && chapter <= 21) ||
                    (chapter >= 29 && chapter <= 30) || 
                    (chapter == 33) || 
                    (chapter == 35) || 
                    (chapter >= 37 && chapter <= 41) || 
                    (chapter >= 43 && chapter <= 48) || 
                    (chapter == 52) || 
                    (chapter >= 54 && chapter <= 58) || 
                    (chapter >= 60 && chapter <= 64) || 
                    (chapter >= 66 && chapter <= 69) || 
                    (chapter >= 74 && chapter <= 76) || 
                    (chapter >= 79 && chapter <= 80) || 
                    (chapter >= 82 && chapter <= 84) || 
                    (chapter >= 87 && chapter < 89) || 
                    (chapter == 91) || 
                    (chapter == 101) || 
                    (chapter == 107) ||
                    (chapter == 139) //revisar! 
                ){
                    chapterNumber += 1;
                    if(verse >= 2){
                        verseNumber -= 1;
                    }
                }
                //Formula Rus => Esp
                //+1 : -2 | Ej.:  50:0 => 51:1 | 50:1 => 51:2
                if(
                    (chapter >= 50 && chapter <= 51) ||
                    (chapter == 53) || 
                    (chapter == 59)
                ){
                    chapterNumber += 1;
                    if(verse <= 2){
                        verseNumber = 1;
                    }
                    if(verse >= 3){
                        verseNumber -= 2;
                    }
                }
                //Formula Rus => Esp
                //2en1
                if(chapter == 89){//89:6 => 90:5-6 
                    chapterNumber += 1;
                    if(verse >= 2){
                        verseNumber -= 1;
                    }
                }
                //Formula Rus => Esp
                //+2: -8
                if(chapter == 113){//113: +8 => 115:1-18 | Пс.113:9 => Sal.115:1
                    if(verse <= 8){
                        chapterNumber += 1;
                    }
                    if(verse >= 9){
                        chapterNumber += 2;
                        verseNumber -= 8;
                    }
                }
                //Formula Rus => Esp
                //-2: X
                if(chapter == 114){// Пс. 114:1-9 => Sal.116:1-9 
                    chapterNumber += 2;
                }
                if(chapter == 115){// Пс. 115:1-10 => Sal.116:10-19
                    chapterNumber += 1;
                    verseNumber += 9;
                }
                //Formula (especial)
                if(chapter == 146){// Пс.146:1-11 => Sal.147:1-11
                    chapterNumber += 1;
                }
                //Formula (especial)
                if(chapter == 147){// Пс.147:1-11 => Sal.147:12-20
                    verseNumber += 11;
                }
            break;                                 

        case 19: //Притчи
                if(chapter == 4){
                    if(verse >= 28){
                        verseNumber = 27;
                    } 
                }
            break;
        
        case 21: //Cantares - Песня песней
                if(chapter == 1){
                    verseNumber += 1;
                    if(verse == 17){
                        verseNumber = 17;
                    } 
                }
                if(chapter == 7){//07:1 => 06:13	
                    if(verse == 1){
                        chapterNumber = 6;
                        verseNumber = 13;
                    }
                    if(verse >= 2){
                        verseNumber -= 1;
                    } 
                }
            break;

        case 22: //Isaías - Исаия
                if(chapter == 3){
                    if(verse >=20){
                        verseNumber += 1;
                    }
                    if(verse == 26){
                        verseNumber = 26;
                    } 
                }
            break;

        case 26: //Daniel - Даниил
                if(chapter == 3){//3:1-30 => 3:1-30
                    //в Синодальном переводе есть вставочные стихи, которых нет в Исп Библии. Стихи с 24 по 90 включительно переведены с греческого, потому что в еврейском тексте их нет. - Прим. ред.
                    if(verse >= 30){
                        chapterNumber = 4;
                        verseNumber -= 30;
                    }
                }
                if(chapter == 4){
                    verseNumber += 3;                        
                }
            break;

        case 27: //Oseas - Осия
                if(chapter == 14){//14:1 => 13:16 
                    if(verse == 1){
                        chapterNumber = 13;
                        verseNumber = 16;
                    }
                    if(verse >= 2){
                        verseNumber -= 1;
                    }
                }
            break;

        case 31: //Jonas - Иона
                if(chapter == 1){
                    //ok
                }
                if(chapter == 2){// 2:1 => 1:17
                    if(verse == 1){
                        chapterNumber = 1;
                        verseNumber = 17;
                    }
                    if(verse >= 2){
                        verseNumber -= 1;
                    } 
                }
            break;

        case 44: //Romanos - Римлянам
                if(chapter == 14){// 14:24-26 => 16:25-27                                       
                    if(verse >= 24){
                        chapterNumber = 16;
                        verseNumber += 1;
                    }
                }
            break;

        case 46: //2Corintios - 2-Коринфянам
                if(chapter == 13){// 13:12-13 => 13:12 | 13:14 => 13:13                                          
                    if(verse == 13){
                        verseNumber = 14;
                    }    
                }
            break;

        default:
            //console.log('default en switch');
            break;
    }//fin switch

    var result = [bookNumber, chapterNumber, verseNumber];

    return result;

}


function checkRefNav(book, chapter = null, verse = null, to_verse = null){
    //console.log('=== function checkRefNav() ===');
    
    //var inpt_nav = document.querySelector('#inpt_nav');
    
    //var trans_base = div_trans1.dataset.trans;//la trans base de #trans1
    var trans_inpt = inpt_nav.dataset.trans;// trans desde input
    var divtrans_inpt = inpt_nav.dataset.divtrans;// trans desde input

    let bookNumber = (book != null) ? book : 0 ;
    let chapterNumber = chapter;
    let verseNumber = verse;
    let to_verseNumber = to_verse;

    // console.log('0. antes bookNumber: '+bookNumber);//empezando de 1
    // console.log('0. antes chapterNumber: '+chapterNumber);//empezando de 1
    // console.log('0. antes verseNumber: '+verseNumber);//empezando de 1
    // console.log('0. antes to_verseNumber: '+to_verseNumber);//mayor que verseNumber 


    if(divtrans_inpt != '' && divtrans_inpt != 'trans1'){
        
        //console.log('divtrans_inpt: '+divtrans_inpt);
    
        // preparo le ref
        // Usa el método find para buscar el objeto que contiene 'rst' como nombre
        const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
        const obj_trans_inpt = arrFavTransObj.find(v => v.Translation === trans_inpt);
        var trans_BookShortName = obj_trans_inpt.Books[book].ShortNames[0];
        
        //Convertir el link de Español a Ruso. (Sal.23:1 => Псалом 22:1)
        if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_inpt.EnglishPsalms == 'Y'){
            //convierto la ref de input en la ref de trans_base. Porque se forma a partir del trans1

            //console.log('--- entro aki 1. trans1 = Rus --- trans2 = Esp. --- convertir Link Rus => Esp');

            //Modifico sólo los links de ruso a español
            //trans1 = RST (base. metido antes. Пс 22:2. lo tengo que convertir en Sal.23:2)
            //trans2 = rv60 clicked
            var new_result = convertLinkFromRusToEsp(bookNumber, chapterNumber, verseNumber, to_verseNumber);//importante RusToEsp
            
            //asigno nuevo valor
            bookNumber = new_result[0];
            chapterNumber = new_result[1];
            verseNumber = new_result[2];
            to_verseNumber = new_result[3];

            // console.log('1. ahora bookNumber: '+bookNumber);//empezando de 1
            // console.log('1. ahora chapterNumber: '+chapterNumber);//empezando de 1
            // console.log('1. ahora verseNumber: '+verseNumber);//empezando de 1
            // console.log('1. ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber 
            // console.log('1. ahora trans_BookShortName: '+trans_BookShortName);
        }

        //Convertir el link de Ruso a Español. (Псалом 22:1 => Sal.23:1)
        if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_inpt.EnglishPsalms == 'N'){
            //convierto la ref de input en la ref de trans_base. Porque se forma a partir del trans1
            //console.log('entro aki 2. trans1 = Esp --- trans2 = Rus. convertir Link Esp => Esp');

            //Modifico sólo los links si en input se pone link ruso para mostrar link espñol
            var new_result = convertLinkFromEspToRus(bookNumber, chapterNumber, verseNumber, to_verseNumber);//importante EspToRus
            
            //asigno nuevo valor
            bookNumber = new_result[0];
            chapterNumber = new_result[1];
            verseNumber = new_result[2];
            to_verseNumber = new_result[3];

            // console.log('2. ahora bookNumber: '+bookNumber);//empezando de 1
            // console.log('2. ahora chapterNumber: '+chapterNumber);//empezando de 1
            // console.log('2. ahora verseNumber: '+verseNumber);//empezando de 1
            // console.log('2. ahora to_verseNumber: '+to_verseNumber);//mayor que verseNumber
            // console.log('2. ahora trans_BookShortName: '+trans_BookShortName);
        }

    }else{
        return false;
    }

    var result = [bookNumber, chapterNumber, verseNumber, to_verseNumber, trans_BookShortName];

    return result;
}























// setTimeout(()=>{    
//     pintRefOnScroll();
// },100);

function pintRefOnScroll(){

    const divContenedor = document.querySelector('#col1 .colsInner');
    //let divContenedor_rect = divContenedor.getBoundingClientRect();//para test
    //console.log(" ANTES de listener --- divContenedor_rect.top: " +divContenedor_rect.top);
    
    divContenedor.addEventListener('scroll', function(){        

        let divContenedor_rect = document.querySelector('#col1 .colsInner').getBoundingClientRect();
        let divContenedor_colsHead_rect = document.querySelector('#col1 .colsHead').getBoundingClientRect();
        const elementos = divContenedor.children;
        let primerElementoVisible = null;
        const mob_sh_link = document.querySelector('#col1 .mob_sh_link');
        let colsAll_length = document.querySelectorAll('.cols').length;

        //Recorrer elementos de '.colsInner'
        Array.from(elementos).forEach(elemento => {            
            
            const el_rect = elemento.getBoundingClientRect();

            //console.log(" ");
            //console.log("divContenedor_rect.top: "+divContenedor_rect.top);
            //console.log("abajo elemento: ");
            //console.log(elemento);
            //console.log("abajo elemento.id: " +elemento.id);
            //console.log("abajo el_rect: ");
            //console.log(el_rect);
            //console.log("el_rect.top: " + el_rect.top);
            //console.log("el_rect.bottom: " + el_rect.bottom);
            //console.log("divContenedor.clientHeight: " + divContenedor.clientHeight);
            //console.log("window.innerHeight: " + window.innerHeight);
            //console.log("--- cond 1: el_rect.top >= 0: " + (el_rect.top >= 0) );
            //console.log("--- cond 2: el_rect.top <= divContenedor_rect.top: " + (el_rect.top <= (divContenedor_rect.top)) );
            //console.log("--- cond 1: el_rect.bottom <= (divContenedor.clientHeight || window.innerHeight): " + (el_rect.bottom <= (divContenedor.clientHeight || window.innerHeight)) );

            if(window.innerWidth < pantallaTabletMinPx){//mobile
                //en mobile
                if(
                    el_rect.top >= 0 && 
                    el_rect.top <= divContenedor_rect.top &&
                    el_rect.bottom <= (divContenedor.clientHeight || window.innerHeight) &&
                    !primerElementoVisible
                ){
                    primerElementoVisible = elemento;
                    //console.log('--- MOBILE --- Si --- primerElementoVisible');
                    //console.log(
                    //`--- si --- element parcialmente está visto. 
                    //    --- elemento.tagName: ${elemento.tagName} 
                    //    --- elemento.id: ${elemento.id}
                    //    --- el_rect.top: ${el_rect.top}
                    //    --- el_rect.bottom: ${el_rect.bottom}
                    //`);
                }else{
                    elemento.classList.remove('elementoVisible');
                    //console.log('--- MOBILE --- NO --- primerElementoVisible');
                }
            }else{//desktop
                //en desktop
                if(
                    el_rect.top >= 0 &&
                    el_rect.top <= divContenedor_rect.top + 1 &&
                    el_rect.bottom >= divContenedor_rect.top + 1 &&
                    !primerElementoVisible               
                ){
                    primerElementoVisible = elemento;
                    //console.log('--- DESKTOP --- Si --- primerElementoVisible');
                    //console.log(
                    //    `--- si --- element parcialmente está visto. 
                    //    --- elemento.tagName: ${elemento.tagName} 
                    //    --- elemento.id: ${elemento.id}
                    //    --- el_rect.top: ${el_rect.top}
                    //    --- el_rect.bottom: ${el_rect.bottom}
                    //`);
                }else{
                    elemento.classList.remove('elementoVisible');
                    //console.log('--- DESKTOP --- NO --- primerElementoVisible');
                }
            }
        });
        //console.log('primerElementoVisible: ');
        //console.log(primerElementoVisible);

        if(primerElementoVisible){
            primerElementoVisible.classList.add('elementoVisible');
            //console.log(primerElementoVisible.getBoundingClientRect().top);
            //console.log(primerElementoVisible.getBoundingClientRect().bottom);    

            //console.log('añado class elementoVisible');
            //primerElementoVisible.style.background = 'pink';//test

            if(primerElementoVisible.tagName === 'P'){
                //console.log("primerElementoVisible.tagName: " + primerElementoVisible.tagName);
                //console.log(primerElementoVisible.querySelector('a').innerHTML);
                if(colsAll_length > 0){
                    putRefvisibleToHead(primerElementoVisible.id,0);//añado ref de todos cols en el header de trans
                }
            }else if(primerElementoVisible.tagName === 'H4' || primerElementoVisible.tagName === 'H2'){
                //console.log("else if --- primerElementoVisible.tagName: " + primerElementoVisible.tagName);
                let p_first = document.querySelector('#col1 .colsInner p');
                if(colsAll_length > 0){
                    putRefvisibleToHead(p_first.id,0);
                }    
            }  
        }
    });
}


//Si startingFromIndexCol es 0 se actualizan todos los heads, si es 1 -> todos menos cols[0] que es #col1
function putRefvisibleToHead(id_ref, startingFromIndexCol = 0){//id_ref: rv60__0__1__1 // trans__book__chapter__verse
    //console.log('=== function putRefvisibleToHead(ref) ===');
    //console.log('id_ref: ' +id_ref);
    //console.log('startingFromIndexCol: ' +startingFromIndexCol);
    let arr_ref = id_ref.split('__');
    let bookNumber = arr_ref[1];
    let chapterNumber = arr_ref[2];
    let verseNumber = arr_ref[3];

    //let trans_base = div_trans1.dataset.trans;
    
    let colsAll = document.querySelectorAll('.cols');

    colsAll.forEach((el,i)=>{
        //console.log(el);

        //si no es #col1
        if(i >= startingFromIndexCol){

            let trans_head = el.querySelector('.colsHead').dataset.trans;

            // preparo le ref
            // Usa el método find para buscar el objeto que contiene 'rst' como nombre
            const obj_trans_base = arrFavTransObj.find(v => v.Translation === trans_base);
            const obj_trans_head = arrFavTransObj.find(v => v.Translation === trans_head);

            //si está seleccionado traducción
            if(typeof trans_head != 'undefined' && typeof obj_trans_head.Books[bookNumber] != 'undefined'){

                var trans_BookShortName = obj_trans_head.Books[bookNumber].ShortNames[0];
            
                //Convertir el link de Español a Ruso. (Sal.23:1 => Псалом 22:1)
                if(obj_trans_base.EnglishPsalms == 'N' && obj_trans_head.EnglishPsalms == 'Y'){
                    //convierto la ref de input en la ref de trans_base. Porque se forma a partir del trans1
                    //console.log('--- ref head 1. trans1 = Rus --- trans2 = Esp. --- convertir Link Rus => Esp');

                    //Modifico sólo los links de ruso a español
                    //trans1 = RST (base. metido antes. Пс 22:2. lo tengo que convertir en Sal.23:2)
                    //trans2 = rv60 clicked
                    var new_result = convertLinkFromRusToEsp(bookNumber, chapterNumber, verseNumber);//importante RusToEsp
                    
                    //asigno nuevo valor
                    bookNumber = new_result[0];
                    chapterNumber = new_result[1];
                    verseNumber = new_result[2];

                    //console.log('1. ahora bookNumber: '+bookNumber);//empezando de 1
                    //console.log('1. ahora chapterNumber: '+chapterNumber);//empezando de 1
                    //console.log('1. ahora verseNumber: '+verseNumber);//empezando de 1
                    //console.log('1. ahora trans_BookShortName: '+trans_BookShortName);
                }

                //Convertir el link de Ruso a Español. (Псалом 22:1 => Sal.23:1)
                if(obj_trans_base.EnglishPsalms == 'Y' && obj_trans_head.EnglishPsalms == 'N'){
                    //convierto la ref de input en la ref de trans_base. Porque se forma a partir del trans1
                    //console.log('head 2. trans1 = Esp --- trans2 = Rus. convertir Link Esp => Esp');

                    //Modifico sólo los links si en input se pone link ruso para mostrar link espñol
                    var new_result = convertLinkFromEspToRus(bookNumber, chapterNumber, verseNumber);//importante EspToRus
                    
                    //asigno nuevo valor
                    bookNumber = new_result[0];
                    chapterNumber = new_result[1];
                    verseNumber = new_result[2];

                    // console.log('2. ahora bookNumber: '+bookNumber);//empezando de 1
                    // console.log('2. ahora chapterNumber: '+chapterNumber);//empezando de 1
                    // console.log('2. ahora verseNumber: '+verseNumber);//empezando de 1
                    // console.log('2. ahora trans_BookShortName: '+trans_BookShortName);
                }

                //console.log(id_ref + ' => ' + trans_BookShortName + ''+chapterNumber +':'+verseNumber);
                var new_ref = trans_BookShortName + ' '+chapterNumber +':'+verseNumber;

                el.querySelector('.partMob .mob_sh_link').innerHTML = new_ref;
                el.querySelector('.partDesk .desk_sh_link').innerHTML = new_ref;
            
            }else{
                var new_ref = '--. --:--';

                el.querySelector('.partMob .mob_sh_link').innerHTML = new_ref;
                el.querySelector('.partDesk .desk_sh_link').innerHTML = new_ref;
            } 

        }
    });
}


function pageUp() {    
    var colsAll = document.querySelectorAll('.colsInner');
    colsAll.forEach(el=>{
        var el_rect = el.getBoundingClientRect();
        let clientHeight = el.clientHeight;

        //console.log('el.parentElement.id :'+el.parentElement.id);
        //console.log('el.scrollTop: '+el.scrollTop);
        //console.log('clientHeight: '+clientHeight);
      
        // Calcula la cantidad de desplazamiento necesario para una página
        let pageHeight = clientHeight;
      
        // Calcula la nueva posición de desplazamiento
        let newScrollTop = el.scrollTop - pageHeight;
        //console.log('newScrollTop: '+newScrollTop);

        var newScrollTop_toVerse = false;
        var arr_elps = [];

        el.querySelectorAll('p').forEach(elp=>{
            let elp_rect = elp.getBoundingClientRect();
            //console.log('elp.id: '+elp.id + ' --- elp_rect.top: '+elp_rect.top +' --- elp_rect.bottom: '+elp_rect.bottom);

            //busco primer elemento que se ve entero en la pantalla para moverme alli
            if(elp_rect.top > -clientHeight){
                //console.log(' -------------- el elemento elp.id: '+elp.id + 
                //' --- elp_rect.top: '+elp_rect.top + 
                //' --- elp_rect.bottom: '+elp_rect.bottom  
                //);
                arr_elps.push(elp);
            }
        });
        //console.log('arr_elps: ');
        //console.log(arr_elps);
        //console.log('arp_elps[0].top: '+arr_elps[0].getBoundingClientRect().top);
        //console.log('arp_elps[0].bottom: '+arr_elps[0].getBoundingClientRect().bottom);

        if(arr_elps.length > 1){
            var first_p_rect = arr_elps[0].getBoundingClientRect();
            newScrollTop_toVerse = newScrollTop + (clientHeight - el_rect.top + first_p_rect.top);
            //console.log('newScrollTop_toVerse: ' + newScrollTop + ' + ('+ clientHeight + ' - '+ el_rect.top + ' + ' +  first_p_rect +') = '+newScrollTop_toVerse);
        }

        // Asegúrate de que no te desplaces más allá del final del contenido
        if(newScrollTop < 0) {
            el.scrollTop = 0;//mover al top
            //console.log(`1. me muevo al top --- el.scrollTop: ${el.scrollTop} `);
            if(newScrollTop < 0 && newScrollTop == -el.clientHeight){//if( newScrollTop: -926 y newScrollTop: -926 = -clientHeight: -926)
                //console.log(`1.b --- me muevo al cpítulo anterior. y al ultimo versículo.`);
                //console.log(`top --- el.scrollTop: ${el.scrollTop}. --- if(newScrollTop < 0 && newScrollTop == -el.clientHeight) --- . (${newScrollTop} < 0 && ${newScrollTop} == ${-el.clientHeight})`);
                chapterGo('prev');//OK    
            }
        }
        else if(newScrollTop >= 0) {
            //el.scrollTop = newScrollTop;//antes
            if(newScrollTop_toVerse){
                el.scrollTop = newScrollTop_toVerse;
                //console.log('2.--- ago newScrollTop_toVerse: ' + newScrollTop_toVerse);
            }else{
                el.scrollTop = newScrollTop;
                //console.log('3.--- ago newScrollTop: ' + newScrollTop);
            }
        }
        else{
            // Si ya estás en la parte superior del contenido, no hagas nada
            //console.log('4.--- Estoy en la parte superior del contenido.');
        }
    });
}


function pageDown() {
    var colsAll = document.querySelectorAll('.colsInner');   
    colsAll.forEach(el=>{
        var el_rect = el.getBoundingClientRect();
        let scrollHeight = el.scrollHeight;
        let clientHeight = el.clientHeight;
        //console.log('el.parentElement.id :'+el.parentElement.id);
        //console.log('scrollHeight: '+scrollHeight);
        //console.log('el.scrollTop: '+el.scrollTop);
        //console.log('clientHeight: '+clientHeight);
     
        // Calcula la cantidad de desplazamiento necesario para una página
        let pageHeight = clientHeight;
      
        // Calcula la nueva posición de desplazamiento
        let newScrollTop = el.scrollTop + pageHeight;
        //console.log('newScrollTop: '+newScrollTop);

        var newScrollTop_toVerse = false;

        el.querySelectorAll('p').forEach(elp=>{
            let elp_rect =elp.getBoundingClientRect();
            //console.log('elp.id: '+elp.id + ' --- elp_rect.top: '+elp_rect.top + ' --- elp_rect.bottom: '+elp_rect.bottom);

            //busco qué elp cual top es menos que newScrollTop (920) y su bottom es mas que newScrollTop (920)
            //primer click on pageDown
            if(clientHeight == newScrollTop){
                if(elp_rect.top <= newScrollTop + el_rect.top && elp_rect.bottom > newScrollTop + el_rect.top){
                    newScrollTop_toVerse = elp_rect.top - el_rect.top;
                    //console.log('---if------ newScrollTop_toVerse: '+elp_rect.top + ' - '+ el_rect.top +' = '+newScrollTop_toVerse);
                    //console.log('------ elp.id: '+elp.id)
                }
            }else{//segundo y posteriores clicks on pageDown
                var el_rect_bottom = el.getBoundingClientRect().bottom;
                if(elp_rect.top <= el_rect_bottom && elp_rect.bottom > el_rect_bottom){
                    newScrollTop_toVerse = newScrollTop - (el_rect_bottom - elp_rect.top) ;
                    //console.log('---else------ newScrollTop_toVerse: '+newScrollTop + ' - ('+ el_rect_bottom + ' - '+ elp_rect.top +') = '+newScrollTop_toVerse);
                    //console.log('------ elp.id: '+elp.id)
                }
            }
        });
      
        // Asegúrate de que no te desplaces más allá del final del contenido
        if(newScrollTop > scrollHeight) {
            el.scrollTop = scrollHeight;//mover al bottom
            //console.log('1. --- me muevo al bottom --- el.scrollTop: ' + el.scrollTop);
        }
        else if(newScrollTop < scrollHeight) {
            // el.scrollTop = newScrollTop;//antes
            if(newScrollTop_toVerse){
                el.scrollTop = newScrollTop_toVerse;
                //console.log('2. --- ago newScrollTop_toVerse: ' + newScrollTop_toVerse);
            }else{
                el.scrollTop = newScrollTop;
                //console.log('3. --- ago newScrollTop: ' + newScrollTop);
            }
        }
        else{
            // Si ya estás en la parte superior del contenido, no hagas nada
            //console.log('4. --- Estoy en la parte de abajo del contenido. voy al siguiente capítulo.');
            chapterGo('next');//OK 
        }
    });
}


/*
function bbb(n){

    document.querySelectorAll('.colsInner').forEach(el=>{
        console.log('voy al :nth-child: '+n);

            el.querySelector(`:nth-child(${n})`)
            //.scrollIntoView();
            .scrollIntoView({behavior: "smooth",block: "start",inline: "nearest"});
            console.log('end -- voy al :nth-child: '+n);
    });
 return n;
}
*/



async function obtenerDatosDeAPI() {
    try {
      // Realiza una solicitud GET a una API
      const respuesta = await fetch('http://localhost/bibleqt/modules/text/rv60/01_genesis.htm');
      
      // Verifica si la solicitud fue exitosa
      if (!respuesta.ok) {
        throw new Error('Error al obtener datos de la API');
      }
      
      // Convierte la respuesta a formato JSON
      const datos = await respuesta.text();
  
      // Haz algo con los datos, por ejemplo, imprímelos en la consola
      console.log(datos);
  
      // Puedes realizar más acciones aquí con los datos obtenidos
  
    } catch (error) {
      console.error('Error:', error);
    }
  }
  // Llama a la función para obtener los datos
  //obtenerDatosDeAPI();

// doPageDownOnScroll();

function doPageDownOnScroll(){
    let colsInner = document.querySelector('.colsInner');
    colsInner.addEventListener('scroll', function(el){
        const scrollTop = colsInner.scrollTop;
        const colsInner_h = colsInner.offsetHeight;
        const scrollHeight = colsInner.scrollHeight;      
        //PageDown
        if(scrollTop > colsInner_h && scrollTop + colsInner_h >= (scrollHeight - 5) ) {
            // Si llegamos al final de la sección actual, pasa a la siguiente
            //console.log(`paso a la sig page. (scrollTop + colsInner_h >= scrollHeight): (${scrollTop} + ${colsInner_h} >= ${scrollHeight}) `);
            //alert('test mobile. estoy abajo. hago chapterGo().');//resuelto
            chapterGo('next');
        }
        //console.log('el.target.scrollTop: '+el.target.scrollTop);        
    });
} 



function markarStrongNumberFinded(){
    document.querySelectorAll('#find_body p s').forEach(el=>{
        //console.log(el); 
        if(el.innerHTML.includes('<b class="f_red">')){
            //console.log(' contiene b ');
            el.classList.add('show', 'strongActive', 'finded_strongActive');
            //console.log(el);
        }else{
            el.classList.add('show', 'strongActive', 'other_strongActive');
        }                                          
    });
}

function showOnlyStrongNumberFinded_2Actions(){
    markarStrongNumberFinded();
    showOnlyStrongNumberFinded();
}

function showOnlyStrongNumberFinded(){
    //console.log('=== function showOnlyStrongNumberFinded() ===');
    let btn_finded_s = document.querySelector('#btn_finded_s');
    let btn_all_s = document.querySelector('#btn_all_s');
    btn_finded_s.classList.add('s_active');
    btn_all_s.classList.remove('s_active');
    markarStrongNumberFinded();
    document.querySelectorAll('#find_body p s').forEach(el=>{
        if(el.classList.contains('finded_strongActive')){
            el.style.display = 'inline-block';
        }else{
            el.style.display = 'none';
        }
    });
    makeStrongNumbersActiveFind();
}

function showAllStrongNumber_2Actions(){
    markarStrongNumberFinded();
    showAllStrongNumber();
}

function showAllStrongNumber(){
    //console.log('=== function showAllStrongNumber() ===');
    let btn_finded_s = document.querySelector('#btn_finded_s');
    let btn_all_s = document.querySelector('#btn_all_s');
    btn_finded_s.classList.remove('s_active');
    btn_all_s.classList.add('s_active');
    document.querySelectorAll('#find_body p s').forEach(el=>{
        el.style.display = 'inline-block';
    });
    makeStrongNumbersActiveFind();
}












